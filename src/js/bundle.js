(()=>{"use strict";const t=Math.PI/180,e=115,i=["Grass","Ground","Sandstone"],s=["Rect","Square"],n=[101,50],a=[50,50],r=[[4,2],[5.5,2.5],[7,3]],o=[.55,.7,.85],h=[76,81,77,64,81,81,76,69],l=[49,62,49,41,69,56,48,41],c=[20,25,20,15,25,25,25,20],_=[43,50,36,36,29,36,43,29],d=[36,36,22,36,29,29,36,29],u=[47,49,40,43,50,36,43,36],p=[14,10,14,7,11,16,14,14],g=[12,16,23,24,19],m=[5,8,10,6,8],T=[4,10,0,0,4,4,0,0,0];class A{get width(){return this._width}get height(){return this._height}get sprite(){return this._sprite}constructor(t,e){this._width=t,this._height=e,this._sprite=new Image(t,e),this._sprite.classList.add("sprite")}setPosition(t){this._sprite.style.left=`${t.x}px`,this._sprite.style.top=`${t.y}px`}setAngle(t,e=1,i=1){this._sprite.style.transform=`rotate(${t}rad) scaleX(${e}) scaleY(${i})`}remove(){this._sprite.remove()}}function M(t,e){return Math.floor(Math.random()*(e+1-t))+t}class y extends A{constructor(t){super(e,e),this._sprite.src=`src/img/backgrounds/${i[t]}_${M(0,1)}.png`,this._sprite.style.zIndex="1"}}class f{constructor(t,e){this._x=t,this._y=e}get x(){return this._x}set x(t){this._x=t}get y(){return this._y}set y(t){this._y=t}clone(){return new f(this._x,this._y)}addToCoordinates(t,e){this._x+=t,this._y+=e}}class P extends f{get length(){return Math.sqrt(this.x*this.x+this.y*this.y)}normalize(){const t=this.length;0!==t&&(this._x/=t,this._y/=t)}get angle(){return Math.atan2(this.y,this.x)}clone(){return new P(this.x,this.y)}addVector(t){this._x+=t._x,this._y+=t._y}subtractVector(t){this._x-=t._x,this._y-=t._y}scale(t){this._x*=t,this._y*=t}}class S extends P{constructor(t,e){super(t,e)}static create(t,e){const i=new S(t.y-e.y,e.x-t.x);return i.normalize(),i}clone(){return new S(this._x,this._y)}}class v{constructor(){}static fullFillBackground(t,i,s,n){for(let a=0;a<i;a+=e)for(let i=0;i<s;i+=e)n.push(this.addBackgroundTile(new f(a,i),t))}static addBackgroundTile(t,e){const i=new y(e);return i.setPosition(t),i}}class E{constructor(){}static dotProduct(t,e){return t.x*e.x+t.y*e.y}static crossProduct(t,e){return t.x*e.y-t.y*e.x}static add(t,e){return new P(t.x+e.x,t.y+e.y)}static subtract(t,e){return new P(t.x-e.x,t.y-e.y)}static scale(t,e){return new P(t.x*e,t.y*e)}static createFromAngleAndLength(t,e){return new P(e*Math.cos(t),e*Math.sin(t))}static calcCoDirectionalScaleFactor(t,e){return t.x/e.x}static calcScaleFactor(t,e){return t.length/e.length}}function w(t,e){const i=e.x-t.x,s=e.y-t.y;return Math.sqrt(i*i+s*s)}function k(t,e=0,i=2*Math.PI){for(;t<e;)t+=i-e;for(;t>=i;)t-=i-e;return t}function C(t){return t>Math.PI/2&&t<3*Math.PI/2}function I(t,e){return k(t-e)}function D(t,e){return new f((t.x+e.x)/2,(t.y+e.y)/2)}class L{constructor(){}static hasCollision(t,e){const i=L.getAxes(t),s=L.getAxes(e);function n(i){for(const s of i){const i=L.getProjection(t,s),n=L.getProjection(e,s);if(Math.min(i.max-n.min,n.max-i.min)<=0)return!1}return!0}return n(i)&&n(s)}static getCollisionResult(t,e){const i=L.getAxes(t),s=L.getAxes(e);let n,a,r=Number.MAX_VALUE;function o(s){const o=s===i;for(const i of s){const s=L.getProjection(t,i),h=L.getProjection(e,i),l=Math.min(s.max-h.min,h.max-s.min);if(l<=0)return!1;l<r&&(r=l,n=i,a=o)}return!0}return o(i)&&o(s)?{collisionPoint:L.findClosestVertex(t,e,n,a),overlap:r}:null}static findClosestVertex(t,e,i,s){let n,a;return s?(n=this.getProjection(t,i),a=this.getExtendedProjection(e,i)):(n=this.getProjection(e,i),a=this.getExtendedProjection(t,i)),a.max-n.min<n.max-a.min?a.maxPoint:a.minPoint}static getExtendedProjection(t,e){let i=E.dotProduct(e,t.points[0]),s=i,n=t.points[0],a=t.points[0];for(let r=1;r<t.points.length;r++){const o=E.dotProduct(e,t.points[r]);Math.abs(o-i)<this.EPSILON?n=D(n,t.points[r]):Math.abs(o-s)<this.EPSILON?a=D(a,t.points[r]):o<i?(i=o,n=t.points[r]):o>s&&(s=o,a=t.points[r])}return{min:i,max:s,minPoint:n,maxPoint:a}}static getAxes(t){const e=new Array,i=t.points.length-1;for(let s=0;s<i;s++)e.push(S.create(t.points[s],t.points[s+1]));return e.push(S.create(t.points[i],t.points[0])),e}static getProjection(t,e){let i=E.dotProduct(e,t.points[0]),s=i;for(let n=1;n<t.points.length;n++){const a=E.dotProduct(e,t.points[n]);a<i?i=a:a>s&&(s=a)}return{min:i,max:s}}}L.EPSILON=1;class x{constructor(){}static resolveCollision(t,e){const i=L.getCollisionResult(t,e);if(null===i)return null;const s=this.calcCollisionNormal(i.collisionPoint,t.calcCenter()),n=this.calsImpulseMagnitude(t,e,s);return this.separateEntities(t,i.overlap,s),this.updateAngularVelocity(t,e,i.collisionPoint,n,s),this.updateVelocity(t,e,n,s),i.collisionPoint}static updateAngularVelocity(t,e,i,s,n){const a=this.calcEntityNormal(t),r=E.subtract(i,e.calcCenter()),o=E.subtract(i,t.calcCenter()),h=E.crossProduct(r,n)*s,l=E.crossProduct(o,a)*s,c=h/e.momentOfInertia;let _=l/t.momentOfInertia;this.shouldReverseReceiving(e.angle,a.angle)&&(_=-_),Math.abs(_+t.angularVelocity)<this.SMALL_ANGULAR_IMPULSE&&Math.abs(_)>this.ORTHOGONAL_IMPULSE&&(_=1===Math.sign(_)?this.SMALL_ANGULAR_IMPULSE:-this.SMALL_ANGULAR_IMPULSE),e.angularVelocity+=c,t.angularVelocity+=_}static shouldReverseReceiving(t,e){const i=k(t-e,0,Math.PI);return i<Math.PI/2&&i>Math.PI/4||i>=Math.PI/2&&i<3*Math.PI/4}static calcEntityNormal(t){const e=t.angle;return C(I(e,t.velocity.angle))?new P(-Math.cos(e),-Math.sin(e)):new P(Math.cos(e),Math.sin(e))}static updateVelocity(t,e,i,s){const n=E.scale(s,-i/t.mass),a=E.scale(s,i/e.mass);t.velocity.addVector(n),e.velocity.addVector(a)}static separateEntities(t,e,i){let s=-i.x*e,n=-i.y*e;s+=1===Math.sign(s)?this.CORRECTION_FACTOR:-this.CORRECTION_FACTOR,n+=1===Math.sign(n)?this.CORRECTION_FACTOR:-this.CORRECTION_FACTOR;for(const e of t.points)e.addToCoordinates(s,n)}static calsImpulseMagnitude(t,e,i){const s=E.subtract(t.velocity,e.velocity);return 2*E.dotProduct(s,i)/(1/t.mass+1/e.mass)*this.COEFFICIENT_OF_RESTITUTION}static calcCollisionNormal(t,e){const i=E.subtract(t,e);return i.normalize(),i}}x.COEFFICIENT_OF_RESTITUTION=.6,x.CORRECTION_FACTOR=.55,x.SMALL_ANGULAR_IMPULSE=.004,x.ORTHOGONAL_IMPULSE=1e-4;class R{constructor(){}static isTank(t){return t>=R.STARTING_TANK_ID&&t<=R.ENDING_TANK_ID}static isWall(t){return t>=R.STARTING_WALL_ID&&t<=R.ENDING_WALL_ID}static isBullet(t){return t>=R.STARTING_BULLET_ID&&t<=R.ENDING_BULLET_ID}static get tankId(){if(R.TANK_ID>R.ENDING_TANK_ID)throw new Error("Maximum tank ID is reached");return R.TANK_ID++}static get wallId(){if(R.WALL_ID>R.ENDING_WALL_ID)throw new Error("Maximum wall ID is reached");return R.WALL_ID++}static get bulletId(){return R.BULLET_ID>R.ENDING_BULLET_ID&&(R.BULLET_ID=R.STARTING_BULLET_ID),R.BULLET_ID++}}R.STARTING_TANK_ID=0,R.ENDING_TANK_ID=R.STARTING_TANK_ID+42424242424242,R.STARTING_WALL_ID=R.ENDING_TANK_ID+1,R.ENDING_WALL_ID=R.STARTING_WALL_ID+42424242424242,R.STARTING_BULLET_ID=R.ENDING_WALL_ID+1,R.ENDING_BULLET_ID=R.STARTING_BULLET_ID+42424242424242,R.TANK_ID=R.STARTING_TANK_ID,R.WALL_ID=R.STARTING_WALL_ID,R.BULLET_ID=R.STARTING_BULLET_ID;class F{constructor(){this._idForProcessing=new Array}hasForProcessing(){return 0!==this._idForProcessing.length}clear(){this._idForProcessing.length=0}push(t){this._idForProcessing.push(t)}get iterable(){return this._idForProcessing}}class N{get wallsForProcessing(){return this._wallsForProcessing}constructor(t){this._wallsForProcessing=new F,this._collisionDetection=t}hasCollision(t){const e=this._collisionDetection.getCollisions(t),i=new Array;for(const s of e){const e=x.resolveCollision(t,s);e&&(i.push({collisionPoint:e,id:s.id}),this.processCollision(s))}return 0!==i.length?i:null}processCollision(t){R.isWall(t.id)&&this._wallsForProcessing.push(t.id)}}class b{constructor(t,e,i){this._canvas=t,this._width=e,this._height=i}get canvas(){return this._canvas}get width(){return this._width}get height(){return this._height}}class U{constructor(t,e,i,s){this._boundary={xStart:t,yStart:e,xLast:i,yLast:s},this._root=new H(this._boundary)}insert(t){this._root.insert(t)}getCollisions(t){return this._root.getCollisions(t)}remove(t){this._root.remove(t)}clear(){this._root=new H(this._boundary)}}class H{constructor(t){this._totalEntities=0,this._entities=new Map,this._children=null,this._boundary=t}isSubdivide(){return null===this._entities}subdivide(){const t=this._boundary.xStart,e=this._boundary.yStart,i=this._boundary.xLast,s=this._boundary.yLast,n=(i-t)/2,a=(s-e)/2;this._children=[new H({xStart:t,yStart:e,xLast:t+n,yLast:e+a}),new H({xStart:t+n,yStart:e,xLast:i,yLast:e+a}),new H({xStart:t,yStart:e+a,xLast:t+n,yLast:s}),new H({xStart:t+n,yStart:e+a,xLast:i,yLast:s})],this.redistribute()}redistribute(){this._totalEntities=0;for(const t of this._children){for(const e of this._entities.values())t.insert(e);this._totalEntities+=t._totalEntities}this._entities=null}insert(t){if(this.isContainsEntity(t))if(this.isSubdivide()){this._totalEntities=0;for(const e of this._children)e.insert(t),this._totalEntities+=e._totalEntities}else this._totalEntities++,this._entities.set(t.id,t),this._entities.size>H.CAPACITY&&this.subdivide()}remove(t){if(this.isContainsEntity(t))if(this.isSubdivide()){this._totalEntities=0;for(const e of this._children)e.remove(t),this._totalEntities+=e._totalEntities;this._totalEntities<=H.HALF_CAPACITY&&this.mergeWithChildren()}else this._totalEntities--,this._entities.delete(t.id)}getCollisions(t){const e=new Array;if(this.isSubdivide())for(const i of this._children)i.isContainsEntity(t)&&e.push(...i.getCollisions(t));else for(const i of this._entities.values())L.hasCollision(t,i)&&e.push(i);return e}isContainsEntity(t){for(const e of t.points)if(this.isContainsPoint(e))return!0;return!1}isContainsPoint(t){return t.x>this._boundary.xStart&&t.x<this._boundary.xLast&&t.y>this._boundary.yStart&&t.y<this._boundary.yLast}mergeWithChildren(){this._entities=new Map;for(const t of this._children){t.isSubdivide()&&t.mergeWithChildren();for(const e of t._entities.values())this._entities.set(e.id,e)}this._totalEntities=this._entities.size,this._children=null}}H.CAPACITY=8,H.HALF_CAPACITY=H.CAPACITY>>1;class O{set resistanceCoeff(t){this._resistanceCoeff=t}set airResistanceCoeff(t){this._airResistanceCoeff=t}constructor(t,e){this._resistanceCoeff=0,this._airResistanceCoeff=0,this._entityStorage=t,this._collisionManager=e}get entityStorage(){return this._entityStorage}get collisionManager(){return this._collisionManager}}class ${constructor(){}static rotatePointAroundTarget(t,e,i,s){const n=t.x-e.x,a=t.y-e.y;t.x=e.x+n*s-a*i,t.y=e.y+n*i+a*s}static rotatePoint(t,e,i){const s=t.x,n=t.y;t.x=s*i-n*e,t.y=s*e+n*i}}class G{constructor(){}static movement(t){for(const e of t.points)e.addToCoordinates(t.velocity.x,t.velocity.y)}static angularMovement(t){G.rotateEntity(t,t.angularVelocity)}static rotateEntity(t,e){const i=Math.sin(e),s=Math.cos(e),n=t.calcCenter();for(const e of t.points)$.rotatePointAroundTarget(e,n,i,s);$.rotatePoint(t.velocity,i,s)}static moveEntity(t,e){for(const i of t.points)i.addToCoordinates(e.x,e.y)}}class W extends O{residualMovement(t,e){const i=t.sprite;t.model.isIdle()?i.tankTrackEffect.stopped():(i.tankTrackEffect.setResidualMovement(),this.hullUpdate(t,t.model.residualMovement,G.movement,t.sprite.preUpdateAction,e))}residualAngularMovement(t,e){t.model.isAngularMotionStopped()||this.hullUpdate(t,t.model.residualAngularMovement,G.angularMovement,t.sprite.preUpdateAction,e)}turretCounterclockwiseMovement(t,e){t.model.turretCounterclockwiseMovement(e),W.turretUpdate(t)}turretClockwiseMovement(t,e){t.model.turretClockwiseMovement(e),W.turretUpdate(t)}hullCounterclockwiseMovement(t,e){this.hullUpdate(t,t.model.hullCounterclockwiseMovement,G.angularMovement,t.sprite.preUpdateAction,e)}hullClockwiseMovement(t,e){this.hullUpdate(t,t.model.hullClockwiseMovement,G.angularMovement,t.sprite.preUpdateAction,e)}forwardMovement(t,e){this.hullUpdate(t,t.model.forwardMovement,G.movement,t.sprite.updateForwardAction,e)}backwardMovement(t,e){this.hullUpdate(t,t.model.backwardMovement,G.movement,t.sprite.updateBackwardAction,e)}hullUpdate(t,e,i,s,n){const a=t.model.entity;this._entityStorage.remove(a),e.call(t.model,this._resistanceCoeff,this._airResistanceCoeff,n),i(a),this._collisionManager.hasCollision(a)&&t.sprite.removeAcceleration(),s.call(t.sprite,a.points[0],a.angle,t.model.turretAngle),this._entityStorage.insert(a)}static turretUpdate(t){const e=t.model,i=e.entity.angle,s=Math.sin(i),n=Math.cos(i);t.sprite.rotateTurretUpdate(t.sprite.tankSpriteParts.hullSprite.calcPosition(e.entity.points[0],s,n),e.turretAngle,s,n)}}class B{constructor(){this._keys=new Set,document.addEventListener("keydown",this.handleKeyDown.bind(this)),document.addEventListener("keyup",this.handleKeyUp.bind(this))}clearKeys(){this._keys.clear()}isKeyDown(t){return this._keys.has(t)}handleKeyDown(t){this._keys.add(t.keyCode)}handleKeyUp(t){this._keys.delete(t.keyCode)}}class V{constructor(t,e,i,s,n,a){this._angularVelocity=0,this._velocity=new P(0,0);const r=e*e+i*i;this._radiusLength=.5*Math.sqrt(r),this._momentOfInertia=V.scalingCoeff*n*r,this._mass=n,this._id=a,this._width=e,this._height=i,this._points=[t.clone(),new f(t.x+e,t.y),new f(t.x+e,t.y+i),new f(t.x,t.y+i)],0!==s&&G.rotateEntity(this,s)}get velocity(){return this._velocity}get angle(){return Math.atan2(this._points[1].y-this._points[0].y,this._points[1].x-this._points[0].x)}get points(){return this._points}get mass(){return this._mass}get angularVelocity(){return this._angularVelocity}set angularVelocity(t){this._angularVelocity=t}get id(){return this._id}get radiusLength(){return this._radiusLength}get momentOfInertia(){return this._momentOfInertia}calcCenter(){return D(this._points[0],this._points[2])}get lengthwiseArea(){const t=this.angle-this._velocity.angle;return this._height*Math.abs(Math.cos(t))+this._width*Math.abs(Math.sin(t))}get movementLength(){const t=this.angle-this._velocity.angle;return this._width*Math.abs(Math.cos(t))+this._height*Math.abs(Math.sin(t))}}V.scalingCoeff=.3125;class K{constructor(t,e){this._model=t,this._sprite=e,this._id=t.entity.id}get model(){return this._model}get sprite(){return this._sprite}get id(){return this._id}spawn(t,e){t.appendChild(this._sprite.sprite),e.insert(this._model.entity)}vanish(t){this._sprite.remove(),t.remove(this._model.entity)}}class X{constructor(){}static rotateToDefaultSpritePoint(t,e,i,s){const n=t.width>>1,a=t.height>>1;$.rotatePointAroundTarget(e,new f(e.x+n*s-a*i,e.y+a*s+n*i),-i,s)}static rotateToActualSpritePoint(t,e,i,s){const n=t.width>>1,a=t.height>>1;$.rotatePointAroundTarget(e,new f(e.x+n,e.y+a),i,s)}static updateSpritePart(t,e,i,s,n){X.rotateToDefaultSpritePoint(t,e,i,s),X.setPosAndAngle(t,e,n)}static setPosAndAngle(t,e,i){t.setPosition(e),t.setAngle(i)}static rotateForTurretPoint(t,e,i,s,n,a){const r=t.width>>1,o=t.height>>1;$.rotatePointAroundTarget(e,new f(e.x+r*s-o*i,e.y+o*s+r*i),n*s-a*i,s*a+i*n)}}class z extends A{constructor(t,e){super(n[e],a[e]),this._sprite.src=`src/img/blocks/${i[t]}_${s[e]}.png`,this._sprite.style.zIndex="4"}updateAfterAction(t,e){t=t.clone(),X.rotateToDefaultSpritePoint(this,t,Math.sin(e),Math.cos(e)),X.setPosAndAngle(this,t,e)}}class Y{constructor(){}static calcAcceleration(t,e,i,s,n,a,r){return(t-e*a*.01-i*n*n*r)/a*(s/17)}static calcAngularAcceleration(t,e,i,s,n,a,r,o){return this.calcAcceleration(t,e,i,s,n,a,r)/o}}class j{constructor(){}static calcAcceleration(t,e,i,s,n,a){return(t-e*s*s*a)/n*(i/17)}static calcAngularAcceleration(t,e,i,s,n,a,r){return this.calcAcceleration(t,e,i,s,n,a)/r}}class q{constructor(t,e){this._entity=t,this._health=e}get health(){return this._health}isDead(){return this._health<=0}get entity(){return this._entity}isIdle(){return 0===this._entity.velocity.length}isAngularMotionStopped(){return 0===this._entity.angularVelocity}applyVelocityChange(t,e){const i=this._entity,s=Math.sign(i.velocity.x),n=Math.sign(i.velocity.y);i.velocity.addToCoordinates(t*Math.cos(e),t*Math.sin(e)),s!==Math.sign(i.velocity.x)&&(i.velocity.x=0),n!==Math.sign(i.velocity.y)&&(i.velocity.y=0)}applyAngularVelocityChange(t){const e=this._entity,i=e.angularVelocity;i>0?e.angularVelocity+=i+t<0?-i:t:e.angularVelocity-=i+t>0?-i:t}takeDamage(t){this._health-=t.damage}}class Z extends q{residualMovement(t,e,i){const s=this._entity,n=Y.calcAcceleration(0,t,e,i,s.velocity.length,s.mass,s.lengthwiseArea);this.applyVelocityChange(n,s.velocity.angle)}residualAngularMovement(t,e,i){const s=this._entity,n=Y.calcAngularAcceleration(0,t,e,i,s.angularVelocity,s.mass,s.lengthwiseArea,s.radiusLength);this.applyAngularVelocityChange(n)}}class Q extends q{residualMovement(t,e){const i=this._entity,s=j.calcAcceleration(0,t,e,i.velocity.length,i.mass,i.lengthwiseArea);this.applyVelocityChange(s,i.velocity.angle)}residualAngularMovement(t,e){const i=this._entity,s=j.calcAngularAcceleration(0,t,e,i.angularVelocity,i.mass,i.lengthwiseArea,i.radiusLength);this.applyAngularVelocityChange(s)}}class J extends Z{constructor(t){super(t,1/0)}}class tt{constructor(){}static createWallsAroundPerimeter(t,e,i){const s=new Array,n=this.calcIndent(e),r=this.calcIndent(i-(a[this.RECT_NUM]<<1));return this.createHorWalls(t,n,r,e,i,s),this.createVertWalls(t,n,r,e,i,s),s}static calcIndent(t){const e=t-(this.INDENT<<1);return(e-n[this.RECT_NUM]*Math.floor(e/n[this.RECT_NUM])>>1)+this.INDENT}static createHorWalls(t,e,i,s,r,o){for(let h=e;h<=s-e-n[this.RECT_NUM];h+=n[this.RECT_NUM])o.push(this.createWall(new f(h,i),0,t,this.RECT_NUM)),o.push(this.createWall(new f(h,r-a[this.RECT_NUM]-i),0,t,this.RECT_NUM))}static createVertWalls(t,e,i,s,r,o){for(let h=i+a[this.RECT_NUM]+(a[this.RECT_NUM]>>1);h<=r-i-n[this.RECT_NUM];h+=n[this.RECT_NUM])o.push(this.createWall(new f(e-(a[this.RECT_NUM]>>1),h),this.RAD_90,t,this.RECT_NUM)),o.push(this.createWall(new f(s-e-n[this.RECT_NUM]+(a[this.RECT_NUM]>>1),h),this.RAD_90,t,this.RECT_NUM))}static createWall(t,e,i,s,o=!1){const h=o?r[i][s]:1/0,l=new J(new V(t,n[s],a[s],e,h,R.wallId)),c=new z(i,s);return c.setPosition(t),c.setAngle(e),new K(l,c)}}tt.INDENT=10,tt.RAD_90=90*Math.PI/180,tt.RECT_NUM=0;class et extends O{residualAngularMovement(t,e){t.model.isAngularMotionStopped()||this.update(t,t.model.residualAngularMovement,G.angularMovement,e)}residualMovement(t,e){t.model.isIdle()||this.update(t,t.model.residualMovement,G.movement,e)}update(t,e,i,s){const n=t.model.entity;this._entityStorage.remove(n),e.call(t.model,this._resistanceCoeff,this._airResistanceCoeff,s),i(n),this._collisionManager.hasCollision(n),t.sprite.updateAfterAction(n.points[0],n.angle),this._entityStorage.insert(n)}hasAnyResidualMovement(t){return!t.model.isAngularMotionStopped()||!t.model.isIdle()}movement(t,e){this.residualAngularMovement(t,e),this.residualMovement(t,e)}}class it{constructor(t,e,i,s){this._movementManager=t,this._field=e,this._elements=i,this._isResponsibleFor=s}get movementManager(){return this._movementManager}get isResponsibleFor(){return this._isResponsibleFor}get(t){return this._elements.has(t)?this._elements.get(t):null}add(t){for(const e of t)this._elements.has(e.id)||(this._elements.set(e.id,e),e.spawn(this._field.canvas,this._movementManager.entityStorage))}delete(t){this._elements.has(t.id)&&(this._elements.delete(t.id),t.vanish(this._movementManager.entityStorage))}}class st{get value(){return this._value}get prev(){return this._prev}get next(){return this._next}set next(t){this._next=t}set prev(t){this._prev=t}constructor(t){this._prev=null,this._next=null,this._value=t}remove(){null!==this._prev&&(this._prev.next=this._next),null!==this._next&&(this._next.prev=this._prev),this._prev=null,this._next=null}}class nt{constructor(){this._tail=null,this._head=null,this._length=0}get head(){return null!==this._head?this._head.value:null}get tail(){return null!==this._tail?this._tail.value:null}get length(){return this._length}*[Symbol.iterator](){let t=this._head;for(let e=this._length;e>0;e--)yield t.value,t=t.next}applyAndRemove(t,e,i){let s=this._head;for(;null!==s;)if(t(s.value,i),e(s.value))s=s.next;else{const t=s;s=s.next,this.removeNode(t)}}isEmpty(){return 0===this._length}remove(t){let e=this._head;for(;null!==e;){if(e.value===t)return void this.removeNode(e);e=e.next}}removeNode(t){t===this._tail&&(this._tail=t.prev),t===this._head&&(this._head=t.next),this._length--,t.remove()}addToHead(t){const e=new st(t);null===this._head?(this._tail=e,this._head=e):(e.next=this._head,this._head.prev=e,this._head=e),this._length++}addToTail(t){const e=new st(t);null===this._tail?(this._tail=e,this._head=e):(e.prev=this._tail,this._tail.next=e,this._tail=e),this._length++}removeFromTail(){this._tail===this._head?this.clear():(this._tail=this._tail.prev,this._tail.next=null,this._length--)}removeFromHead(){this._tail===this._head?this.clear():(this._head=this._head.next,this._head.prev=null,this._length--)}moveToTail(t){let e=this._tail;for(;null!==e;){if(e.value===t){if(e!==this._tail){const t=e.prev,i=e.next;null!==t&&(t.next=i),null!==i&&(i.prev=t),e.next=null,e.prev=this._tail,this._tail.next=e,this._tail=e}return}e=e.prev}}moveToHead(t){let e=this._head;for(;null!==e;){if(e.value===t){if(e!==this._head){const t=e.prev,i=e.next;null!==t&&(t.next=i),null!==i&&(i.prev=t),e.next=this._head,e.prev=null,this._head.prev=e,this._head=e}return}e=e.next}}clear(){this._tail=this._head=null,this._length=0}}class at{constructor(){this._vanishingListOfTirePairs=new nt,this.tanksAmount=0}get vanishingListOfTirePairs(){return this.tanksAmount++,this._vanishingListOfTirePairs}removeTireTrackPair(t){t.topTire.remove(),t.bottomTire.remove()}reduceOpacity(){let t=0;for(const e of this._vanishingListOfTirePairs){const i=this._vanishingListOfTirePairs.length*at.MIN_REDUCING_OPACITY_NUMBER/this.tanksAmount;e.topTire.reduceOpacity(i),e.topTire.setOpacity(),e.bottomTire.reduceOpacity(i),e.bottomTire.setOpacity(),e.topTire.isVanished()&&t++}for(;t>0;t--)this.removeTireTrackPair(this._vanishingListOfTirePairs.tail),this._vanishingListOfTirePairs.removeFromTail()}}at.MIN_REDUCING_OPACITY_NUMBER=1e-4;class rt extends A{get isEnded(){return this._isEnded&&this.remove(),this._isEnded}constructor(t,e,i,s,n){super(i,s),this._animationStage=0,this._isEnded=!1,this._timer=0,this._num=0===n?0:1,this._sprite.src=`${rt.DEFAULT_PATH}${this._num}_${this._animationStage}.png`,this._sprite.style.zIndex="7";const a=new f(t.x+s/2*Math.sin(e),t.y-s/2*Math.cos(e));X.rotateToDefaultSpritePoint(this,a,Math.sin(e),Math.cos(e)),this.setPosAndAngle(a,e)}setPosAndAngle(t,e){this.setPosition(t),this.setAngle(e)}changeStage(t){this._timer+=t,this._timer>=rt.UPDATE_TIMER_TIME&&(this._timer-=rt.UPDATE_TIMER_TIME,this._animationStage++,this._animationStage<=rt.MAX_STAGE?this._sprite.src=`${rt.DEFAULT_PATH}${this._num}_${this._animationStage}.png`:this._isEnded=!0)}}rt.DEFAULT_PATH="src/img/tanks/Effects/Sprites/Sprite_Fire_Shots_Shot_",rt.UPDATE_TIMER_TIME=45,rt.MAX_STAGE=3;class ot extends it{constructor(t,e,i,s,n,a){super(t,e,i,R.isTank),this._tireTracksManager=new at,this._addBulletElement=s,this._animationManager=n,this._KeyHandler=a}handle(t){this._tireTracksManager.reduceOpacity();for(const e of this._elements.values()){const i=e.control;let s=this._KeyHandler.isKeyDown(i.turretClockwiseKey),n=this._KeyHandler.isKeyDown(i.turretCounterClockwiseKey);if((s&&!n||!s&&n)&&(s?this._movementManager.turretClockwiseMovement(e,t):n&&this._movementManager.turretCounterclockwiseMovement(e,t)),s=this._KeyHandler.isKeyDown(i.forwardKey),n=this._KeyHandler.isKeyDown(i.backwardKey),s&&!n||!s&&n?s?this._movementManager.forwardMovement(e,t):n&&(e.sprite.removeAcceleration(),this._movementManager.backwardMovement(e,t)):(e.sprite.removeAcceleration(),this._movementManager.residualMovement(e,t)),s=this._KeyHandler.isKeyDown(i.hullClockwiseKey),n=this._KeyHandler.isKeyDown(i.hullCounterClockwiseKey),s&&!n||!s&&n?s?this._movementManager.hullClockwiseMovement(e,t):n&&this._movementManager.hullCounterclockwiseMovement(e,t):this._movementManager.residualAngularMovement(e,t),s=this._KeyHandler.isKeyDown(i.shootKey),s){const t=e.model.shot();if(t){const i=e.model.bulletNum;this.playShootAnimation(D(t.entity.points[0],t.entity.points[3]),t.entity.angle,5*g[i],5*m[i],i),this._addBulletElement.addBulletModel(t,i)}}}}playShootAnimation(t,e,i,s,n){const a=new rt(t,e,i,s,n);this._animationManager.add(a),this._field.canvas.appendChild(a.sprite)}add(t){super.add(t);for(const e of t){const t=e.sprite,i=e.model.entity;t.spawnTireTracks(this._field.canvas,i.points[0],i.angle,this._tireTracksManager.vanishingListOfTirePairs),t.spawnDriftSmoke(this._field.canvas,this._animationManager);const s=t.tankSpriteParts.hullSprite;t.spawnTankAcceleration(this._field.canvas,s.accelerationEffectIndentX,s.height)}}}class ht extends it{constructor(t,e,i){super(t,e,i,R.isWall),this._wallToProcess=new nt}addToProcess(){const t=this._movementManager.collisionManager.wallsForProcessing;if(t.hasForProcessing()){for(const e of t.iterable)this._wallToProcess.addToTail(this._elements.get(e));t.clear()}}handle(t){this.addToProcess(),this._wallToProcess.isEmpty()||this._wallToProcess.applyAndRemove(this._movementManager.movement.bind(this._movementManager),this._movementManager.hasAnyResidualMovement.bind(this._movementManager),t)}}class lt{constructor(){this._animationList=new nt}add(t){this._animationList.addToTail(t)}handle(t){this._animationList.isEmpty()||this._animationList.applyAndRemove(((t,e)=>t.changeStage(e)),(t=>!t.isEnded),t)}}class ct{constructor(t,e){this._model=t,this._sprite=e,this._id=t.entity.id}get id(){return this._id}get model(){return this._model}get sprite(){return this._sprite}spawn(t,e){t.appendChild(this._sprite.sprite),e.insert(this._model.entity)}vanish(t){this._sprite.remove(),t.remove(this._model.entity)}}class _t extends A{get num(){return this._num}constructor(t){super(g[t],m[t]),this._sprite.src=`src/img/tanks/Bullets/Bullet_${t}.png`,this._sprite.style.zIndex="4",this._num=t}updateAfterAction(t,e){t=t.clone(),X.rotateToDefaultSpritePoint(this,t,Math.sin(e),Math.cos(e)),X.setPosAndAngle(this,t,e)}}class dt extends A{get isEnded(){return this._isEnded&&this.remove(),this._isEnded}constructor(t,e){super(dt.WIDTH,dt.HEIGHT),this._animationStage=0,this._isEnded=!1,this._timer=0,this._sprite.src=`${dt.DEFAULT_PATH}${this._animationStage}.png`,this._sprite.style.zIndex="7";const i=new f(t.x-dt.WIDTH/2,t.y-dt.HEIGHT/2);this.setPosAndAngle(i,e)}setPosAndAngle(t,e){this.setPosition(t),this.setAngle(e)}changeStage(t){this._timer+=t,this._timer>=dt.UPDATE_TIMER_TIME&&(this._timer-=dt.UPDATE_TIMER_TIME,this._animationStage++,this._animationStage<=dt.MAX_STAGE?this._sprite.src=`${dt.DEFAULT_PATH}${this._animationStage}.png`:this._isEnded=!0)}}dt.DEFAULT_PATH="src/img/tanks/Effects/Sprites/Sprite_Effects_Explosion_",dt.UPDATE_TIMER_TIME=90,dt.MAX_STAGE=8,dt.WIDTH=120,dt.HEIGHT=120;class ut{static playDeathAnimation(t,e,i){if(R.isWall(t.id),R.isTank(t.id)){const s=new dt(t.calcCenter(),M(-Math.PI,Math.PI));e.add(s),i.appendChild(s.sprite)}R.isBullet(t.id)}}class pt extends A{get isEnded(){return this._isEnded&&this.remove(),this._isEnded}constructor(t,e,i,s,n){super(i,s),this._animationStage=0,this._isEnded=!1,this._timer=0,this._num=0===n?0:1,this._sprite.src=`${pt.DEFAULT_PATH}${this._num}_${this._animationStage}.png`,this._sprite.style.zIndex="7";const a=new f(t.x+s/2*Math.sin(e),t.y-s/2*Math.cos(e));X.rotateToDefaultSpritePoint(this,a,Math.sin(e),Math.cos(e)),this.setPosAndAngle(a,e)}setPosAndAngle(t,e){this.setPosition(t),this.setAngle(e)}changeStage(t){this._timer+=t,this._timer>=pt.UPDATE_TIMER_TIME&&(this._timer-=pt.UPDATE_TIMER_TIME,this._animationStage++,this._animationStage<=pt.MAX_STAGE?this._sprite.src=`${pt.DEFAULT_PATH}${this._num}_${this._animationStage}.png`:this._isEnded=!0)}}pt.DEFAULT_PATH="src/img/tanks/Effects/Sprites/Sprite_Fire_Shots_Impact_",pt.UPDATE_TIMER_TIME=60,pt.MAX_STAGE=3;class gt extends it{constructor(t,e,i,s,n){super(t,e,i,R.isBullet),this._handlingManagers=s,this._animationManager=n}handle(t){if(0!==this._elements.size){const e=new Array;for(const i of this._elements.values())this._movementManager.movement(i,t),this._movementManager.hasResidualMovement(i)||e.push(i);for(const t of e)this.delete(t)}this._movementManager.bulletCollisionDates.hasForProcessing()&&this.handleBulletCollisions()}handleBulletCollisions(){for(const t of this._movementManager.bulletCollisionDates.iterable){for(const e of t.collisionPacks){const i=t.bulletElement.sprite.num;this.playImpactAnimation(e.collisionPoint,t.bulletElement.model.entity.angle+Math.PI,5*g[i],5*m[i],i);const s=e.id,n=this.getElementHandling(s),a=n.get(s);a&&(a.model.takeDamage(t.bulletElement.model),a.model.isDead()&&(ut.playDeathAnimation(a.model.entity,this._animationManager,this._field.canvas),n.delete(a)))}this.delete(t.bulletElement)}this._movementManager.bulletCollisionDates.clear()}getElementHandling(t){for(const e of this._handlingManagers)if(e.isResponsibleFor(t))return e}playImpactAnimation(t,e,i,s,n){const a=new pt(t,e,i,s,n);this._animationManager.add(a),this._field.canvas.appendChild(a.sprite)}}class mt{constructor(t,e,i){this._elements=t,this._field=e,this._bulletMovementManager=i}addBulletModel(t,e){if(!this._elements.has(t.entity.id)){const i=new ct(t,new _t(e));this._bulletMovementManager.checkForSpawn(i)&&(this._elements.set(i.id,i),i.spawn(this._field.canvas,this._bulletMovementManager.entityStorage))}}}class Tt extends O{constructor(){super(...arguments),this._bulletCollisionDates=new F}get bulletCollisionDates(){return this._bulletCollisionDates}hasResidualMovement(t){return!t.model.isIdle()}movement(t,e){t.model.isIdle()||this.update(t,e)}update(t,e){const i=t.model.entity;this._entityStorage.remove(i),t.model.residualMovement(this._airResistanceCoeff,e);const s=E.createFromAngleAndLength(i.velocity.angle,i.movementLength);let n=!1;const a=Math.floor(E.calcCoDirectionalScaleFactor(i.velocity,s));for(let e=a;e>0;e--){G.moveEntity(i,s);const e=this._collisionManager.hasCollision(i);if(e){this._bulletCollisionDates.push({bulletElement:t,collisionPacks:e}),n=!0;break}}if(!n){s.scale(-a),s.addVector(i.velocity),G.moveEntity(i,s);const e=this._collisionManager.hasCollision(i);e&&this._bulletCollisionDates.push({bulletElement:t,collisionPacks:e})}t.sprite.updateAfterAction(i.points[0],i.angle),this._entityStorage.insert(i)}checkForSpawn(t){const e=t.model.entity,i=this._collisionManager.hasCollision(e);return i?(this._bulletCollisionDates.push({bulletElement:t,collisionPacks:i}),!1):(t.sprite.updateAfterAction(e.points[0],e.angle),!0)}}class At{constructor(t){this._isGameLoopActive=!1,this._lastFrameTime=performance.now(),this._executioners=t}start(){this._isGameLoopActive||(this._isGameLoopActive=!0,requestAnimationFrame((()=>this.gameLoop())))}stop(){this._isGameLoopActive=!1}gameLoop(){if(!this._isGameLoopActive)return;const t=performance.now(),e=t-this._lastFrameTime;for(const t of this._executioners)t.handle(e);this._lastFrameTime=t,requestAnimationFrame((()=>this.gameLoop()))}}class Mt{get startingSpeed(){return 35}get damage(){return 15}get armorPenetration(){return 5}get mass(){return.008}get health(){return 1}get num(){return 0}}class yt extends Q{constructor(t,e,i){super(e,t.health),this._damage=t.damage*i.damageCoeff,this._armorPenetration=t.armorPenetration*i.armorPenetrationCoeff}get damage(){return this._damage}get armorPenetration(){return this._armorPenetration}}class ft{constructor(){}static create(t,e,i,s){const n=ft.createBullet(t),a=ft.calcDefaultEntityPoint(t,e,i),r=new V(a,g[t],m[t],i,n.mass,R.bulletId),o=n.startingSpeed*s.startingSpeedCoeff;return r.velocity.x=o*Math.cos(i),r.velocity.y=o*Math.sin(i),new yt(n,r,s)}static calcDefaultEntityPoint(t,e,i){const s=new f(e.x+m[t]/2*Math.sin(i),e.y-m[t]/2*Math.cos(i)),n=Math.sin(i),a=Math.cos(i),r=new f(s.x+g[t]/2*a-m[t]/2*n,s.y+m[t]/2*a+g[t]/2*n);return $.rotatePointAroundTarget(s,r,-n,a),s}static createBullet(t){if(0===t)return new Mt;throw new Error(`Bullet model ${t} was not found`)}}class Pt{get angleSpeed(){return 6e-4}get mass(){return.35}get bulletCapacity(){return 10}get num(){return 0}}class St{get armorPenetrationCoeff(){return 1}get damageCoeff(){return 1}get startingSpeedCoeff(){return 1}get reloadSpeed(){return 1e3}get mass(){return.15}get num(){return 0}}class vt extends Z{constructor(t,e){super(e,t.hull.health),this._lastTimeShot=Date.now(),this._bulletQuantity=50,this._bulletNum=0,this._isBraking=!1,this._isDrift=!1,this._tankParts=t,this._turretAngle=e.angle,this._armorStrength=t.hull.armorStrength}takeDamage(t){this._armorStrength-=t.armorPenetration,this._armorStrength<0&&(this._armorStrength=0),this._health-=t.damage-this._tankParts.hull.armor*this._armorStrength}get turretAngle(){return this._turretAngle}get armor(){return this._tankParts.hull.armor}get armorStrength(){return this._armorStrength}get bulletNum(){return this._bulletNum}shot(){const t=Date.now();if(0===this._bulletQuantity||t-this._lastTimeShot<this._tankParts.weapon.reloadSpeed)return null;const e=ft.create(this._bulletNum,this.calcBulletExit(),this._turretAngle,this._tankParts.weapon);return this._lastTimeShot=t,this._bulletQuantity--,e}calcBulletExit(){const t=this._entity.calcCenter(),e=this._tankParts,i=(n=e.turret,_[n.num]/2+(s=e.weapon,u[s.num]));var s,n;const a=t.x+i*Math.cos(this._turretAngle),r=t.y+i*Math.sin(this._turretAngle);return new f(a,r)}incBulletQuantity(t){this._bulletQuantity=Math.min(this._bulletQuantity+t,this._tankParts.turret.bulletCapacity)}takeNewBullet(t){this._bulletNum=t}turretClockwiseMovement(t){this._turretAngle+=this._tankParts.turret.angleSpeed*t}turretCounterclockwiseMovement(t){this._turretAngle-=this._tankParts.turret.angleSpeed*t}incTurretAngle(t){this._turretAngle+=t}hullClockwiseMovement(t,e,i){const s=this._entity,n=this._tankParts.track.angularData;s.angularVelocity<n.finishSpeed&&(s.angularVelocity+=Y.calcAngularAcceleration(n.force,t,e,i,s.angularVelocity,s.mass,s.lengthwiseArea,s.radiusLength)),this.updateAngularVelocity(),this.incTurretAngle(s.angularVelocity)}hullCounterclockwiseMovement(t,e,i){const s=this._entity,n=this._tankParts.track.angularData;-s.angularVelocity<n.finishSpeed&&(s.angularVelocity-=Y.calcAngularAcceleration(n.force,t,e,i,s.angularVelocity,s.mass,s.lengthwiseArea,s.radiusLength)),this.updateAngularVelocity(),this.incTurretAngle(s.angularVelocity)}updateAngularVelocity(){if(this.isIdle())return;const t=this._entity,e=t.velocity;(this._isDrift||this._isBraking)&&this.incAngularVelocity(t,e),this._isBraking||this.decAngularVelocity(t,e)}incAngularVelocity(t,e){const i=this.calcCoeff(),s=1+e.length/(this._tankParts.track.forwardData.finishSpeed*i),n=1+t.mass/(10*i);t.angularVelocity*=n*s}calcCoeff(){let t=100;return this._isDrift&&(t-=25),this._isBraking&&(t-=5),t}decAngularVelocity(t,e){const i=1-e.length/(20*this._tankParts.track.forwardData.finishSpeed),s=1-t.mass/200;t.angularVelocity*=s*i,e.scale(s)}forwardMovement(t,e,i){this.movement(this._tankParts.track.forwardData,this._entity.angle,t,e,i)}backwardMovement(t,e,i){this.movement(this._tankParts.track.backwardData,this._entity.angle+Math.PI,t,e,i)}movement(t,e,i,s,n){const a=this._entity,r=a.velocity.length,o=0===r?e:a.velocity.angle,h=I(e,o);this.setBrakingStatus(h),vt.isStraightMovement(h)?(this._isDrift=!1,this.handleStraightMovement(t,i,s,n,r,o)):(this._isDrift=!vt.isReverseMovement(h),this._isDrift&&(this.determineDribbleSpeed(h),this.applyTurn(this.calcShortestTurn(h))),this.handleDriftMovement(t,i,s,n,r,h,o))}setBrakingStatus(t){this._isBraking=C(t)}calcShortestTurn(t){return this._isBraking&&(t=vt.adjustTurnForBraking(t)),t=vt.adjustTurnForRecovery(t)}static isStraightMovement(e){return e<=t||2*Math.PI-e<=t}static isReverseMovement(e){return Math.abs(e-Math.PI)<=t}handleStraightMovement(t,e,i,s,n,a){if(n<t.finishSpeed){const r=Y.calcAcceleration(t.force,e,i,s,n,this._entity.mass,this._entity.lengthwiseArea);this._entity.velocity.addToCoordinates(r*Math.cos(a),r*Math.sin(a))}}handleDriftMovement(t,e,i,s,n,a,r){if(this._isBraking||n<t.finishSpeed){const o=Y.calcAcceleration(t.force*Math.cos(a),e,i,s,n,this._entity.mass,this._entity.lengthwiseArea);this.applyVelocityChange(o,r)}}static adjustTurnForBraking(t){return k(t-Math.PI/2)}static adjustTurnForRecovery(t){const e=t-2*Math.PI;return t>Math.abs(e)?e:t}applyTurn(t){t*=vt.VELOCITY_RECOVERY_COEFF*this._entity.mass,$.rotatePoint(this._entity.velocity,Math.sin(t),Math.cos(t))}determineDribbleSpeed(t){const e=(Math.abs(Math.cos(t))-(i=0))/(1-i)*(1-(s=.95))+s;var i,s;this._entity.velocity.scale(e)}residualMovement(t,e,i){const s=I(this._entity.angle,this._entity.velocity.angle);(this._isDrift||!vt.isStraightMovement(s)&&!vt.isReverseMovement(s))&&(this._isDrift=!0,this.determineDribbleSpeed(s)),this._isBraking=!1,super.residualMovement(t,e,i)}residualAngularMovement(t,e,i){this.updateAngularVelocity(),super.residualAngularMovement(t,e,i),this.incTurretAngle(this._entity.angularVelocity)}}vt.VELOCITY_RECOVERY_COEFF=.017;class Et extends A{constructor(t,e,i){super(t,e),this._opacity=1,this._sprite.src=`src/img/tanks/Effects/Tire Tracks/Tire_Track_Chain_${i}.png`,this._sprite.style.zIndex="3"}isVanished(){return this._opacity<=0}reduceOpacity(t){this._opacity-=t}setOpacity(){this._sprite.style.opacity=`${this._opacity}`}}class wt extends A{constructor(t,e,i){super(t,e),this._opacity=1,this._sprite.src=`src/img/tanks/Effects/Tire Tracks/Tire_Track_${i}.png`,this._sprite.style.zIndex="3"}isVanished(){return this._opacity<=0}reduceOpacity(t){this._opacity-=t}setOpacity(){this._sprite.style.opacity=`${this._opacity}`}}var kt,Ct,It;!function(t){t[t.dirForward=1]="dirForward",t[t.dirRotate=0]="dirRotate",t[t.dirBackward=1]="dirBackward"}(kt||(kt={}));class Dt{get chainWidth(){return this._chainWidth}constructor(t,e,i){this._listOfTirePairs=new nt,this._vanishingListOfTirePairs=i,this._canvas=t,this._trackWidth=e.width,this._trackHeight=e.height,this._trackType=e.num,this._chainWidth=this.calcWidthOfChain(),this._chainHeight=e.height,this._chainType=e.num%2}calcWidthOfChain(){return this._trackWidth/Dt.AMOUNT_OF_CHAINS}static calcPositionOfFirstChain(t,e,i,s,n){return new f(t.x+e*n-i*n,t.y+e*s-i*s)}moveToNextChain(t,e,i){t.x=t.x-this._chainWidth*i,t.y=t.y-this._chainWidth*e}vanishFullTrack(){for(const t of this._listOfTirePairs)this._vanishingListOfTirePairs.addToHead(this._listOfTirePairs.head),this._listOfTirePairs.removeFromHead()}static setAndPosTireTrackPair(t,e,i,s,n,a){const r=e.clone(),o=i.clone();X.rotateToDefaultSpritePoint(t.topTire,r,n,a),X.rotateToDefaultSpritePoint(t.bottomTire,o,n,a),X.setPosAndAngle(t.topTire,r,s),X.setPosAndAngle(t.bottomTire,o,s)}createTireTrackChainPair(t,e,i,s,n){const a={topTire:new Et(this._chainWidth,this._chainHeight,this._chainType),bottomTire:new Et(this._chainWidth,this._chainHeight,this._chainType)};return this._canvas.appendChild(a.topTire.sprite),this._canvas.appendChild(a.bottomTire.sprite),Dt.setAndPosTireTrackPair(a,t,e,i,s,n),a}createTireTrackPair(t,e,i,s,n){this.vanishFullTrack();const a={topTire:new wt(this._trackWidth,this._trackHeight,this._trackType),bottomTire:new wt(this._trackWidth,this._trackHeight,this._trackType)};this._canvas.appendChild(a.topTire.sprite),this._canvas.appendChild(a.bottomTire.sprite),Dt.setAndPosTireTrackPair(a,t,e,i,s,n),this._listOfTirePairs.addToHead(a)}calcFirstTopBottomChainPoints(t,e,i,s){const n=Dt.calcPositionOfFirstChain(e,this._trackWidth,this.chainWidth,i,s),a=t.hullSprite.calcPosition(e,i,s);let r=t.bottomTrackSprite.calcPosition(a,i,s);return r=Dt.calcPositionOfFirstChain(r,this._trackWidth,this.chainWidth,i,s),{topFirstChainPoint:n,bottomFirstChainPoint:r}}calcLastTopBottomChainPoints(t,e,i,s){const n=e.clone(),a=t.hullSprite.calcPosition(e,i,s);return{topLastChainPoint:n,bottomLastChainPoint:t.bottomTrackSprite.calcPosition(a,i,s)}}spawnFullTireTrack(t,e,i,s,n){this._topFirstChainPoint=t.clone(),this._bottomFirstChainPoint=e.clone();for(let a=0;a<Dt.AMOUNT_OF_CHAINS;a++){const r=this.createTireTrackChainPair(t,e,i,s,n);this._listOfTirePairs.addToHead(r),a===Dt.AMOUNT_OF_CHAINS-1&&(this._topLastChainPoint=t.clone(),this._bottomLastChainPoint=e.clone()),this.moveToNextChain(t,s,n),this.moveToNextChain(e,s,n)}}updateAllChainPoints(t,e,i,s){this._topFirstChainPoint=t,this._bottomFirstChainPoint=e,this._topLastChainPoint=i,this._bottomLastChainPoint=s}checkForUpdate(t,e,i,s){const n=w(t,this._topFirstChainPoint),a=w(e,this._bottomFirstChainPoint),r=w(i,this._topLastChainPoint),o=w(s,this._bottomLastChainPoint);return n>=this._chainWidth?{isUpdate:!0,prevPoint:this._topFirstChainPoint,currPoint:t}:a>=this._chainWidth?{isUpdate:!0,prevPoint:this._bottomFirstChainPoint,currPoint:e}:r>=this._chainWidth?{isUpdate:!0,prevPoint:this._topLastChainPoint,currPoint:i}:o>=this._chainWidth?{isUpdate:!0,prevPoint:this._bottomLastChainPoint,currPoint:s}:{isUpdate:!1}}getMovementAngle(t,e){const i=e.x-t.x,s=e.y-t.y;return Math.atan2(s,i)}detectMovementDirection(t,e,i){const s=this.getMovementAngle(t,e);let n=k(i-Dt.DIRECTION_ANGLE_DIFFERENCE,-Math.PI,Math.PI),a=k(i+Dt.DIRECTION_ANGLE_DIFFERENCE,-Math.PI,Math.PI),r=!1;if(n>=Math.PI/2&&n<=Math.PI&&a>=-Math.PI&&a<=-Math.PI/2&&(r=!0,s>=0?a=k(a,0,2*Math.PI):n=k(n,-2*Math.PI,0)),s>=n&&s<=a||s<=n&&s>=a)return kt.dirForward;{r&&(n<0?(n=k(n,0,2*Math.PI),a=k(a,0,2*Math.PI)):(n=k(n,-2*Math.PI,0),a=k(a,-2*Math.PI,0)));const t=k(s-Math.PI,-Math.PI,Math.PI);return t>=n&&t<=a||t<=n&&t>=a?kt.dirBackward:kt.dirRotate}}forwardUpdate(t,e,i,s,n){const a=this.createTireTrackChainPair(t,e,i,s,n);this._listOfTirePairs.addToTail(a),this._listOfTirePairs.length>Dt.AMOUNT_OF_CHAINS&&(this._vanishingListOfTirePairs.addToHead(this._listOfTirePairs.head),this._listOfTirePairs.removeFromHead())}backwardUpdate(t,e,i,s,n){const a=this.createTireTrackChainPair(t,e,i,s,n);this._listOfTirePairs.addToHead(a),this._listOfTirePairs.length>Dt.AMOUNT_OF_CHAINS&&(this._vanishingListOfTirePairs.addToHead(this._listOfTirePairs.tail),this._listOfTirePairs.removeFromTail())}}Dt.DIRECTION_ANGLE_DIFFERENCE=.6,Dt.AMOUNT_OF_CHAINS=10;class Lt extends A{constructor(){super(Lt.SIZE,Lt.SIZE),this._sprite.style.zIndex="5",this._sprite.src=Lt.SRC[0]}setSrc(t){this._sprite.src=Lt.SRC[t]}}Ct=Lt,Lt.DEFAULT_SRC="src/img/tanks/Effects/Movement/Movement_",Lt.SRC=[`${Ct.DEFAULT_SRC}0.png`,`${Ct.DEFAULT_SRC}1.png`,`${Ct.DEFAULT_SRC}2.png`,`${Ct.DEFAULT_SRC}3.png`,`${Ct.DEFAULT_SRC}4.png`,`${Ct.DEFAULT_SRC}5.png`,`${Ct.DEFAULT_SRC}6.png`,`${Ct.DEFAULT_SRC}7.png`,`${Ct.DEFAULT_SRC}8.png`,`${Ct.DEFAULT_SRC}9.png`,`${Ct.DEFAULT_SRC}10.png`,`${Ct.DEFAULT_SRC}11.png`,`${Ct.DEFAULT_SRC}12.png`,`${Ct.DEFAULT_SRC}13.png`,`${Ct.DEFAULT_SRC}14.png`,`${Ct.DEFAULT_SRC}15.png`,`${Ct.DEFAULT_SRC}16.png`,`${Ct.DEFAULT_SRC}17.png`,`${Ct.DEFAULT_SRC}18.png`,`${Ct.DEFAULT_SRC}19.png`],Lt.SIZE=85;class xt{constructor(t,e,i){this._topSpriteAccelerationEffect=new Lt,this._bottomSpriteAccelerationEffect=new Lt,this._counter=0,this._state=0,this._canvas=t,this._indentX=e,this._tankHeight=i}changeState(){this._state===xt.LAST_STATE&&(this._state=xt.WORKING_STATE),this._counter++,this._counter===xt.THRESHOLD&&(this._counter=0,this._state++,this._topSpriteAccelerationEffect.setSrc(this._state),this._bottomSpriteAccelerationEffect.setSrc(this._state))}setPosition(t,e,i,s){0===this._state&&0===this._counter&&(this._canvas.appendChild(this._topSpriteAccelerationEffect.sprite),this._canvas.appendChild(this._bottomSpriteAccelerationEffect.sprite)),this.changeState();let n=this.calcPosition(t,e,i,28*this._tankHeight/42);X.updateSpritePart(this._topSpriteAccelerationEffect,n,e,i,s),n=this.calcPosition(t,e,i,37*this._tankHeight/42),X.updateSpritePart(this._bottomSpriteAccelerationEffect,n,e,i,s)}removeAcceleration(){if(0===this._state&&0===this._counter)return;this._state=0,this._counter=0;const t=this._topSpriteAccelerationEffect,e=this._bottomSpriteAccelerationEffect;t.setSrc(this._state),e.setSrc(this._state),t.remove(),e.remove()}calcPosition(t,e,i,s){return new f(t.x+this._indentX*i-s*e-Lt.SIZE/2*i+Lt.SIZE/1.517*e,t.y+s*i+this._indentX*e-Lt.SIZE/1.517*i-Lt.SIZE/2*e)}}xt.THRESHOLD=7,xt.LAST_STATE=19,xt.WORKING_STATE=10;class Rt{constructor(t,e){this._state=0,this._counter=0,this._isForwardMovement=!0,this._isResidualMovement=!1,this._minStateChangeThreshold=[Math.max(Math.round(Rt.MIN_THRESHOLD_COEFF/e.finishSpeed),Rt.MIN_STATE_CHANGE_THRESHOLD_MINIMUM),Math.max(Math.round(Rt.MIN_THRESHOLD_COEFF/t.finishSpeed),Rt.MIN_STATE_CHANGE_THRESHOLD_MINIMUM)],this._maxStateChangeThreshold=[Math.min(Math.round(Rt.MAX_THRESHOLD_COEFF/e.force),Rt.MAX_STATE_CHANGE_THRESHOLD_MAXIMUM),Math.min(Math.round(Rt.MAX_THRESHOLD_COEFF/t.force),Rt.MAX_STATE_CHANGE_THRESHOLD_MAXIMUM)],this._currentThreshold=this._maxStateChangeThreshold[this._isForwardMovement?1:0]}set isForwardMovement(t){this._isResidualMovement=!1,this._isForwardMovement!==t&&(this._isForwardMovement=t,this._currentThreshold=this._maxStateChangeThreshold[this._isForwardMovement?1:0])}setResidualMovement(){this._isResidualMovement=!0}changeState(t,e){this._counter++,this._counter>=this._currentThreshold&&(this._counter=0,this._state^=1,t.setSrc(this._state),e.setSrc(this._state),this._isResidualMovement?this._currentThreshold<this._maxStateChangeThreshold[this._isForwardMovement?1:0]&&this._currentThreshold++:this._currentThreshold>this._minStateChangeThreshold[this._isForwardMovement?1:0]&&this._currentThreshold--)}stopped(){this._currentThreshold=this._maxStateChangeThreshold[this._isForwardMovement?1:0]}}Rt.MIN_THRESHOLD_COEFF=17.5,Rt.MAX_THRESHOLD_COEFF=.5,Rt.MIN_STATE_CHANGE_THRESHOLD_MINIMUM=2,Rt.MAX_STATE_CHANGE_THRESHOLD_MAXIMUM=30;class Ft extends A{get isEnded(){return this._isEnded&&this.remove(),this._isEnded}constructor(t,e){super(t,e),this._animationStage=0,this._isEnded=!1,this._timer=0,this._sprite.src=`${Ft.DEFAULT_PATH}${this._animationStage}.png`,this._sprite.style.zIndex="6"}changeStage(t){this._timer+=t,this._timer>=Ft.UPDATE_TIMER_TIME&&(this._timer-=Ft.UPDATE_TIMER_TIME,this._animationStage++,this._animationStage<=Ft.MAX_STAGE?this._sprite.src=`${Ft.DEFAULT_PATH}${this._animationStage}.png`:this._isEnded=!0)}remove(){this._sprite.remove()}}Ft.DEFAULT_PATH="src/img/tanks/Effects/Sprites/Sprite_Effects_Smoke_",Ft.UPDATE_TIMER_TIME=60,Ft.MAX_STAGE=9;class Nt extends Ft{setPosAndAngle(t,e){this.setPosition(t),this.setAngle(e,-1,1)}calcPosition(t,e,i){return new f(t.x+this.width*e+this.height*i,t.y-this.width*i+this.height*e)}}class bt extends Ft{constructor(t,e,i){super(t,e),this._trackHeight=i}setPosAndAngle(t,e){this.setPosition(t),this.setAngle(e)}calcPosition(t,e,i){return new f(t.x-this._trackHeight*e+this.height*i,t.y+this._trackHeight*i+this.height*e)}}!function(t){t[t.rotLeft=-1]="rotLeft",t[t.rotStraight=0]="rotStraight",t[t.rotRight=1]="rotRight",t[t.rotNoRotate=2]="rotNoRotate"}(It||(It={}));class Ut{constructor(t,e,i,s){this._delayedAngle=0,this._canvas=t,this._animationManager=e,this._width=i/4,this._height=i/5,this._trackHeight=s}detectRotateDirection(t){(t>=Math.PI/2&&t<=Math.PI&&this._delayedAngle>=-Math.PI&&this._delayedAngle<=-Math.PI/2||this._delayedAngle>=Math.PI/2&&this._delayedAngle<=Math.PI&&t>=-Math.PI&&t<=-Math.PI/2)&&(t=this._delayedAngle>=0?k(t,0,2*Math.PI):k(t,-2*Math.PI,0));const e=t-this._delayedAngle;return e<0&&Math.abs(e)>Ut.UPDATE_SMOKE_DELTA_ANGLE?(this._delayedAngle=k(t,-Math.PI,Math.PI),It.rotLeft):e>0&&Math.abs(e)>Ut.UPDATE_SMOKE_DELTA_ANGLE?(this._delayedAngle=k(t,-Math.PI,Math.PI),It.rotRight):It.rotNoRotate}setPosAndAngle(t,e){const i=Math.sin(e),s=Math.cos(e);X.rotateToDefaultSpritePoint(this._currAnimation,t,i,s),this._currAnimation.setPosAndAngle(t,e)}addAnimation(){this._animationManager.add(this._currAnimation),this._canvas.appendChild(this._currAnimation.sprite)}spawnTopSmoke(t,e,i,s){this._currAnimation=new Nt(this._width,this._height);let n=this._currAnimation.calcPosition(t,i,s);const a=e+1.5708;this.setPosAndAngle(n,a),this.addAnimation()}spawnBottomSmoke(t,e,i,s){this._currAnimation=new bt(this._width,this._height,this._trackHeight);let n=this._currAnimation.calcPosition(t,i,s);const a=e+1.5708;this.setPosAndAngle(n,a),this.addAnimation()}}Ut.UPDATE_SMOKE_DELTA_ANGLE=.113446;class Ht{constructor(t,e,i){this._tankSpriteParts=t,this._tankTrackEffect=new Rt(e,i)}get tankSpriteParts(){return this._tankSpriteParts}get tankTrackEffect(){return this._tankTrackEffect}get tankTireTrack(){return this._tankTireTrack}spawnTankAcceleration(t,e,i){this._tankAcceleration=new xt(t,e,i)}removeAcceleration(){this._tankAcceleration.removeAcceleration()}spawnTireTracks(t,e,i,s){this._tankTireTrack=new Dt(t,this._tankSpriteParts.topTrackSprite,s);const n=Math.sin(i),a=Math.cos(i),{topFirstChainPoint:r,bottomFirstChainPoint:o}=this._tankTireTrack.calcFirstTopBottomChainPoints(this._tankSpriteParts,e,n,a);this._tankTireTrack.spawnFullTireTrack(r,o,i,n,a)}spawnDriftSmoke(t,e){this._tankDrift=new Ut(t,e,this._tankSpriteParts.topTrackSprite.width,this._tankSpriteParts.topTrackSprite.height)}updateTireTrack(t,e,i,s){const{topFirstChainPoint:n,bottomFirstChainPoint:a}=this._tankTireTrack.calcFirstTopBottomChainPoints(this._tankSpriteParts,t,i,s),{topLastChainPoint:r,bottomLastChainPoint:o}=this._tankTireTrack.calcLastTopBottomChainPoints(this._tankSpriteParts,t,i,s),{isUpdate:h,prevPoint:l,currPoint:c}=this._tankTireTrack.checkForUpdate(n,a,r,o);if(h){this._tankTireTrack.updateAllChainPoints(n,a,r,o);switch(this._tankTireTrack.detectMovementDirection(l,c,e)){case kt.dirForward:this._tankTireTrack.forwardUpdate(n,a,e,i,s);break;case kt.dirRotate:this._tankTireTrack.createTireTrackPair(r,o,e,i,s);break;case kt.dirBackward:this._tankTireTrack.backwardUpdate(r,o,e,i,s)}}}updateDriftSmoke(t,e,i,s){let n=this._tankSpriteParts.hullSprite.calcPosition(t,i,s);n=this._tankSpriteParts.bottomTrackSprite.calcPosition(n,i,s);switch(this._tankDrift.detectRotateDirection(e)){case It.rotLeft:this._tankDrift.spawnTopSmoke(t,e,i,s);break;case It.rotRight:this._tankDrift.spawnBottomSmoke(n,e,i,s)}}updateForwardAction(t,e,i){this._tankTrackEffect.isForwardMovement=!0;const s=Math.sin(e),n=Math.cos(e),a=this._tankSpriteParts.hullSprite.calcPosition(t,s,n);this.updateSprite(t,e,i,s,n,a),this._tankAcceleration.setPosition(a,s,n,e),this.updateTireTrack(t,e,s,n),this.updateDriftSmoke(t,e,s,n)}updateBackwardAction(t,e,i){this._tankTrackEffect.isForwardMovement=!1;const s=Math.sin(e),n=Math.cos(e);this.defaultUpdate(t,e,i,s,n),this.updateTireTrack(t,e,s,n),this.updateDriftSmoke(t,e,s,n)}preUpdateAction(t,e,i){const s=Math.sin(e),n=Math.cos(e);this.updateTireTrack(t,e,s,n),this.updateDriftSmoke(t,e,s,n),this.defaultUpdate(t,e,i,s,n)}updateAfterAction(t,e,i){const s=Math.sin(e),n=Math.cos(e);this.defaultUpdate(t,e,i,s,n)}defaultUpdate(t,e,i,s,n){const a=this._tankSpriteParts.hullSprite.calcPosition(t,s,n);this.updateSprite(t,e,i,s,n,a)}rotateTurretUpdate(t,e,i,s){const n=Math.sin(e),a=Math.cos(e),r=this._tankSpriteParts.turretSprite,o=r.calcPosition(t,i,s),h=o.clone();X.rotateForTurretPoint(r,h,i,s,n,a),X.rotateToDefaultSpritePoint(r,o,i,s),X.setPosAndAngle(r,o,e);let l=this._tankSpriteParts.weaponSprite.calcPosition(h,n,a);X.updateSpritePart(this._tankSpriteParts.weaponSprite,l,n,a,e)}updateSprite(t,e,i,s,n,a){const r=this._tankSpriteParts.topTrackSprite,o=this._tankSpriteParts.bottomTrackSprite,h=this._tankSpriteParts.hullSprite;let l=r.calcPosition(t);X.updateSpritePart(r,l,s,n,e),l=h.calcPosition(t,s,n),X.updateSpritePart(h,l,s,n,e),l=o.calcPosition(a,s,n),X.updateSpritePart(o,l,s,n,e),this.rotateTurretUpdate(a,i,s,n),this._tankTrackEffect.changeState(r,o)}}class Ot{get health(){return 100}get armor(){return 100}get mass(){return 1}get armorStrength(){return 1}get num(){return 0}}class $t{constructor(){this._angularData={finishSpeed:.0175,force:.03},this._forwardData={finishSpeed:3,force:.03},this._backwardData={finishSpeed:2,force:.025}}get angularData(){return this._angularData}get forwardData(){return this._forwardData}get backwardData(){return this._backwardData}get num(){return 0}}class Gt{constructor(t,e,i,s){this._hull=t,this._track=e,this._turret=i,this._weapon=s}get hull(){return this._hull}get track(){return this._track}get turret(){return this._turret}get weapon(){return this._weapon}}class Wt{constructor(){}static create(t,e,i,s){const n=Wt.createTurret(i),a=Wt.createWeapon(s),r=Wt.createHull(t),o=Wt.createTrack(e);return new Gt(r,o,n,a)}static createHull(t){if(0===t)return new Ot;throw new Error(`Hull model ${t} was not found`)}static createTrack(t){if(0===t)return new $t;throw new Error(`Track model ${t} was not found`)}static createTurret(t){if(0===t)return new Pt;throw new Error(`Turret model ${t} was not found`)}static createWeapon(t){if(0===t)return new St;throw new Error(`Weapon model ${t} was not found`)}}class Bt extends A{get accelerationEffectIndentX(){return this._accelerationEffectIndentX}constructor(t,e){super(h[e],l[e]),this._accelerationEffectIndentX=T[e],this._sprite.src=`src/img/tanks/Hulls/Hull_${e}/Hull_${t}.png`,this._sprite.style.zIndex="5"}calcPosition(t,e,i){return new f(t.x-5*e,t.y+5*i)}}class Vt extends A{static calcHeight(t){return Vt.PROPORTION_WIDTH_HEIGHT*t}get num(){return this._num}constructor(t,e,i){super(e+5,i),this._num=t,this._srcState0=`src/img/tanks/Tracks/Track_${t}_A.png`,this._srcState1=`src/img/tanks/Tracks/Track_${t}_B.png`,this._sprite.style.zIndex="4",this._sprite.src=this._srcState0}setSrc(t){this._sprite.src=0===t?this._srcState0:this._srcState1}}Vt.PROPORTION_WIDTH_HEIGHT=42/246;class Kt extends Vt{constructor(t,e){super(t,e,Vt.calcHeight(e))}calcPosition(t){return t.clone()}}class Xt extends Vt{constructor(t,e,i){const s=Vt.calcHeight(e);super(t,e,s),this._deltaHeight=i+5-s}calcPosition(t,e,i){return new f(t.x-this._deltaHeight*e,t.y+this._deltaHeight*i)}}class zt extends A{constructor(t,e,i,s){super(_[e],d[e]),this._sprite.src=`src/img/tanks/Turrets/Turret_${e}/Turret_${t}.png`,this._sprite.style.zIndex="6",this._indentX=i,this._indentY=s}calcPosition(t,e,i){return new f(t.x+this._indentX*i-this._indentY*e,t.y+this._indentY*i+this._indentX*e)}}class Yt extends A{constructor(t,e,i){super(u[t],p[t]),this._sprite.src=`src/img/tanks/Weapons/Weapon_${t}.png`,this._sprite.style.zIndex="6",this._indentX=e,this._indentY=i}calcPosition(t,e,i){return new f(t.x+this._indentX*i-this._indentY*e,t.y+this._indentY*i+this._indentX*e)}}class jt{constructor(t,e,i,s,n){this._hullSprite=t,this._bottomTrackSprite=e,this._topTrackSprite=i,this._turretSprite=s,this._weaponSprite=n}get hullSprite(){return this._hullSprite}get bottomTrackSprite(){return this._bottomTrackSprite}get topTrackSprite(){return this._topTrackSprite}get turretSprite(){return this._turretSprite}get weaponSprite(){return this._weaponSprite}}class qt{constructor(){}static create(t,e,i,s,n){return new jt(new Bt(t,e),new Xt(i,h[e],l[e]),new Kt(i,h[e]),new zt(t,s,c[e],(l[e]>>1)-(d[s]>>1)),new Yt(n,9*_[s]/10,(d[s]>>1)-(p[n]>>1)))}}class Zt{get model(){return this._model}get sprite(){return this._sprite}get id(){return this._id}get control(){return this._control}set control(t){this._control=t}constructor(t,e,i,s,n,a,r,o){this._control=o;const c=Wt.create(s,n,a,r),_=new V(t,h[s]+5,l[s]+10,e,c.turret.mass+c.hull.mass+c.weapon.mass,R.tankId);this._model=new vt(c,_),this._id=_.id;const d=c.track;this._sprite=new Ht(qt.create(i,s,n,a,r),d.forwardData,d.backwardData)}spawn(t,e){const i=this._sprite.tankSpriteParts;t.appendChild(i.topTrackSprite.sprite),t.appendChild(i.bottomTrackSprite.sprite),t.appendChild(i.hullSprite.sprite),t.appendChild(i.weaponSprite.sprite),t.appendChild(i.turretSprite.sprite);const s=this._model.entity;e.insert(s),this._sprite.updateAfterAction(s.points[0],s.angle,this._model.turretAngle)}vanish(t){const e=this._sprite.tankSpriteParts;this._sprite.tankTireTrack.vanishFullTrack(),e.topTrackSprite.remove(),e.bottomTrackSprite.remove(),e.hullSprite.remove(),e.weaponSprite.remove(),e.turretSprite.remove(),t.remove(this._model.entity)}}window.onmousedown=t=>console.log(`x = ${t.clientX}px, y = ${t.clientY}px`);const Qt=document.querySelector("#canvas"),Jt=new class{constructor(t,e,i){this._backgroundSprites=new Array,this._handlingManagers=new Array,this._animationManager=new lt,this._keyHandler=new B,this._field=new b(t,e,i);const s=new U(0,0,e,i),n=new N(s),a=new Map,r=new Map,o=new Map,h=new W(s,n),l=new et(s,n),c=new Tt(s,n),_=new mt(o,this._field,c);this._tankHandlingManagers=new ot(h,this._field,a,_,this._animationManager,this._keyHandler),this._wallHandlingManagers=new ht(l,this._field,r),this._bulletHandlingManager=new gt(c,this._field,o,this._handlingManagers,this._animationManager),this._handlingManagers.push(this._tankHandlingManagers,this._wallHandlingManagers,this._bulletHandlingManager),this._gameLoop=new At([...this._handlingManagers,this._animationManager])}get gameLoop(){return this._gameLoop}createField(t,e){this.setCoefficients(t),this.createBackgroundSprites(t),this.createWalls(e)}setCoefficients(t){for(const e of this._handlingManagers)e.movementManager.resistanceCoeff=o[t],e.movementManager.airResistanceCoeff=15e-7}createBackgroundSprites(t){v.fullFillBackground(t,this._field.width,this._field.height,this._backgroundSprites);for(const t of this._backgroundSprites)this._field.canvas.appendChild(t.sprite)}createWalls(t){const e=this._field.width,i=this._field.height;this._wallHandlingManagers.add(tt.createWallsAroundPerimeter(t,e,i));const s=new Array;s.push(tt.createWall(new f(e>>1,i>>1),.79,2,0,!0)),s.push(tt.createWall(new f(e>>2,i>>2),1,2,1,!0)),this._wallHandlingManagers.add(s)}addTankElements(...t){this._tankHandlingManagers.add(t)}}(Qt,window.screen.width,window.screen.height);Jt.createField(1,2);const te={forwardKey:87,backwardKey:83,hullClockwiseKey:68,hullCounterClockwiseKey:65,turretClockwiseKey:86,turretCounterClockwiseKey:67,shootKey:66},ee=new Zt(new f(300,300),0,0,0,0,0,0,te),ie={forwardKey:38,backwardKey:40,hullClockwiseKey:39,hullCounterClockwiseKey:37,turretClockwiseKey:190,turretCounterClockwiseKey:188,shootKey:191},se=new Zt(new f(450,450),0,1,0,0,0,0,ie);Jt.addTankElements(ee,se),Jt.gameLoop.start()})();