(()=>{"use strict";class t{static setResolutionResizeCoeff(e,i){t.resizeWidthCoeff=e/t.DEVELOPING_SCREEN_WIDTH,t.resizeHeightCoeff=i/t.DEVELOPING_SCREEN_HEIGHT,t.resizeConstants()}static resizeX(e){return e*t.resizeWidthCoeff}static resizeY(e){return e*t.resizeHeightCoeff}static resizeConstants(){t.BACKGROUND_SIZE=Math.round(t.resizeX(t.BACKGROUND_SIZE));for(let e=0;e<t.WALL_WIDTH.length;e++)t.WALL_WIDTH[e]=Math.round(t.resizeX(t.WALL_WIDTH[e]));for(let e=0;e<t.WALL_HEIGHT.length;e++)t.WALL_HEIGHT[e]=Math.round(t.resizeY(t.WALL_HEIGHT[e]));t.TRACK_INDENT=Math.round(t.resizeY(t.TRACK_INDENT));for(let e=0;e<t.HULL_WIDTH.length;e++)t.HULL_WIDTH[e]=Math.round(t.resizeX(t.HULL_WIDTH[e]));for(let e=0;e<t.HULL_HEIGHT.length;e++)t.HULL_HEIGHT[e]=Math.round(t.resizeY(t.HULL_HEIGHT[e]));for(let e=0;e<t.TURRET_INDENT_X.length;e++)t.TURRET_INDENT_X[e]=Math.round(t.resizeX(t.TURRET_INDENT_X[e]));for(let e=0;e<t.TURRET_WIDTH.length;e++)t.TURRET_WIDTH[e]=Math.round(t.resizeX(t.TURRET_WIDTH[e]));for(let e=0;e<t.TURRET_HEIGHT.length;e++)t.TURRET_HEIGHT[e]=Math.round(t.resizeY(t.TURRET_HEIGHT[e]));for(let e=0;e<t.WEAPON_WIDTH.length;e++)t.WEAPON_WIDTH[e]=Math.round(t.resizeX(t.WEAPON_WIDTH[e]));for(let e=0;e<t.WEAPON_HEIGHT.length;e++)t.WEAPON_HEIGHT[e]=Math.round(t.resizeY(t.WEAPON_HEIGHT[e]));for(let e=0;e<t.BULLET_WIDTH.length;e++)t.BULLET_WIDTH[e]=Math.round(t.resizeX(t.BULLET_WIDTH[e]));for(let e=0;e<t.BULLET_HEIGHT.length;e++)t.BULLET_HEIGHT[e]=Math.round(t.resizeY(t.BULLET_HEIGHT[e]));t.ACCELERATION_SIZE=Math.round(t.resizeX(t.ACCELERATION_SIZE)),t.EXPLOSION_SIZE=Math.round(t.resizeX(t.EXPLOSION_SIZE));for(let e=0;e<t.ACCELERATION_EFFECT_INDENT_X.length;e++)t.ACCELERATION_EFFECT_INDENT_X[e]=t.resizeX(t.ACCELERATION_EFFECT_INDENT_X[e])}}t.resizeWidthCoeff=1,t.resizeHeightCoeff=1,t.DEVELOPING_SCREEN_WIDTH=1920,t.DEVELOPING_SCREEN_HEIGHT=1080,t.BACKGROUND_SIZE=115,t.WALL_WIDTH=[101,50],t.WALL_HEIGHT=[50,50],t.TRACK_INDENT=5,t.HULL_WIDTH=[76,81,77,64,81,81,76,69],t.HULL_HEIGHT=[49,62,49,41,69,56,48,41],t.TURRET_INDENT_X=[20,25,20,15,25,25,25,20],t.TURRET_WIDTH=[43,50,36,36,29,36,43,29],t.TURRET_HEIGHT=[36,36,22,36,29,29,36,29],t.WEAPON_WIDTH=[47,49,40,43,50,36,43,36],t.WEAPON_HEIGHT=[14,10,14,7,11,16,14,14],t.BULLET_WIDTH=[12,16,23,24,19],t.BULLET_HEIGHT=[5,8,10,6,8],t.ACCELERATION_SIZE=85,t.EXPLOSION_SIZE=120,t.ACCELERATION_EFFECT_INDENT_X=[4,10,0,0,4,4,0,0,0];const e=Math.PI/180,i=["Grass","Ground","Sandstone"],s=["Rect","Square"],n=[[4,2],[5.5,2.5],[7,3]],r=[.55,.7,.85];class a{constructor(){}static checkForMaxValue(){if(a.ID>=a.MAX_VALUE)throw new Error("Maximum ID is reached.")}static getNextId(t){return a.checkForMaxValue(),++a.ID*a.Z_INDEX_DIVIDER+t}static generate(t){return a.getNextId(t)}static extractZIndex(t){return t%a.Z_INDEX_DIVIDER}}a.Z_INDEX_DIVIDER=1e3,a.ID=0,a.MAX_VALUE=Math.floor(Number.MAX_SAFE_INTEGER/a.Z_INDEX_DIVIDER)-1;class o{constructor(t,e,i){this._scaleX=1,this._scaleY=1,this._opacity=1,this._sprite=new Image(t,e),this._sprite.classList.add("sprite"),this._id=a.generate(i)}get width(){return this._sprite.width}get height(){return this._sprite.height}get sprite(){return this._sprite}get id(){return this._id}get point(){return this._point}get angle(){return this._angle}get scaleX(){return this._scaleX}get scaleY(){return this._scaleY}get opacity(){return this._opacity}set point(t){this._point=t}set angle(t){this._angle=t}set opacity(t){this._opacity=t}}function h(t,e){return Math.floor(Math.random()*(e+1-t))+t}class l extends o{constructor(e){super(t.BACKGROUND_SIZE,t.BACKGROUND_SIZE,0),this._sprite.src=`src/img/backgrounds/${i[e]}_${h(0,1)}.png`}}class c{constructor(t,e){this._x=t,this._y=e}get x(){return this._x}set x(t){this._x=t}get y(){return this._y}set y(t){this._y=t}clone(){return new c(this._x,this._y)}addToCoordinates(t,e){this._x+=t,this._y+=e}}class _ extends c{get length(){return Math.sqrt(this.x*this.x+this.y*this.y)}normalize(){const t=this.length;0!==t&&(this._x/=t,this._y/=t)}get angle(){return Math.atan2(this.y,this.x)}clone(){return new _(this.x,this.y)}addVector(t){this._x+=t._x,this._y+=t._y}subtractVector(t){this._x-=t._x,this._y-=t._y}scale(t){this._x*=t,this._y*=t}}class u extends _{constructor(t,e){super(t,e)}static create(t,e){const i=new u(t.y-e.y,e.x-t.x);return i.normalize(),i}clone(){return new u(this._x,this._y)}}class d{constructor(){}static fullFillBackground(e,i,s){for(let n=0;n<i.width;n+=t.BACKGROUND_SIZE)for(let r=0;r<i.height;r+=t.BACKGROUND_SIZE)s.insert(this.addBackgroundTile(new c(n,r),e))}static addBackgroundTile(t,e){const i=new l(e);return i.point=t,i}}class g{constructor(){}static dotProduct(t,e){return t.x*e.x+t.y*e.y}static crossProduct(t,e){return t.x*e.y-t.y*e.x}static add(t,e){return new _(t.x+e.x,t.y+e.y)}static subtract(t,e){return new _(t.x-e.x,t.y-e.y)}static scale(t,e){return new _(t.x*e,t.y*e)}static createFromAngleAndLength(t,e){return new _(e*Math.cos(t),e*Math.sin(t))}static calcCoDirectionalScaleFactor(t,e){return t.x/e.x}static calcScaleFactor(t,e){return t.length/e.length}}function T(t,e){const i=e.x-t.x,s=e.y-t.y;return Math.sqrt(i*i+s*s)}function m(t,e=0,i=2*Math.PI){for(;t<e;)t+=i-e;for(;t>=i;)t-=i-e;return t}function p(t){return t>Math.PI/2&&t<3*Math.PI/2}function E(t,e){return m(t-e)}function A(t,e){return new c((t.x+e.x)/2,(t.y+e.y)/2)}class M{constructor(){}static hasCollision(t,e){const i=M.getAxes(t),s=M.getAxes(e);function n(i){for(const s of i){const i=M.getProjection(t,s),n=M.getProjection(e,s);if(Math.min(i.max-n.min,n.max-i.min)<=0)return!1}return!0}return n(i)&&n(s)}static getCollisionResult(t,e){const i=M.getAxes(t),s=M.getAxes(e);let n,r,a=Number.MAX_VALUE;function o(s){const o=s===i;for(const i of s){const s=M.getProjection(t,i),h=M.getProjection(e,i),l=Math.min(s.max-h.min,h.max-s.min);if(l<=0)return!1;l<a&&(a=l,n=i,r=o)}return!0}return o(i)&&o(s)?{collisionPoint:M.findClosestVertex(t,e,n,r),overlap:a}:null}static findClosestVertex(t,e,i,s){let n,r;return s?(n=this.getProjection(t,i),r=this.getExtendedProjection(e,i)):(n=this.getProjection(e,i),r=this.getExtendedProjection(t,i)),r.max-n.min<n.max-r.min?r.maxPoint:r.minPoint}static getExtendedProjection(t,e){let i=g.dotProduct(e,t.points[0]),s=i,n=t.points[0],r=t.points[0];for(let a=1;a<t.points.length;a++){const o=g.dotProduct(e,t.points[a]);Math.abs(o-i)<this.EPSILON?n=A(n,t.points[a]):Math.abs(o-s)<this.EPSILON?r=A(r,t.points[a]):o<i?(i=o,n=t.points[a]):o>s&&(s=o,r=t.points[a])}return{min:i,max:s,minPoint:n,maxPoint:r}}static getAxes(t){const e=new Array,i=t.points.length-1;for(let s=0;s<i;s++)e.push(u.create(t.points[s],t.points[s+1]));return e.push(u.create(t.points[i],t.points[0])),e}static getProjection(t,e){let i=g.dotProduct(e,t.points[0]),s=i;for(let n=1;n<t.points.length;n++){const r=g.dotProduct(e,t.points[n]);r<i?i=r:r>s&&(s=r)}return{min:i,max:s}}}M.EPSILON=1;class f{constructor(){}static resolveCollision(t,e){const i=M.getCollisionResult(t,e);if(null===i)return null;const s=this.calcCollisionNormal(i.collisionPoint,t.calcCenter()),n=this.calsImpulseMagnitude(t,e,s);return this.separateEntities(t,i.overlap,s),this.updateAngularVelocity(t,e,i.collisionPoint,n,s),this.updateVelocity(t,e,n,s),i.collisionPoint}static updateAngularVelocity(t,e,i,s,n){const r=this.calcEntityNormal(t),a=g.subtract(i,e.calcCenter()),o=g.subtract(i,t.calcCenter()),h=g.crossProduct(a,n)*s,l=g.crossProduct(o,r)*s,c=h/e.momentOfInertia;let _=l/t.momentOfInertia;this.shouldReverseReceiving(e.angle,r.angle)&&(_=-_),Math.abs(_+t.angularVelocity)<this.SMALL_ANGULAR_IMPULSE&&Math.abs(_)>this.ORTHOGONAL_IMPULSE&&(_=1===Math.sign(_)?this.SMALL_ANGULAR_IMPULSE:-this.SMALL_ANGULAR_IMPULSE),e.angularVelocity+=c,t.angularVelocity+=_}static shouldReverseReceiving(t,e){const i=m(t-e,0,Math.PI);return i<Math.PI/2&&i>Math.PI/4||i>=Math.PI/2&&i<3*Math.PI/4}static calcEntityNormal(t){const e=t.angle;return p(E(e,t.velocity.angle))?new _(-Math.cos(e),-Math.sin(e)):new _(Math.cos(e),Math.sin(e))}static updateVelocity(t,e,i,s){const n=g.scale(s,-i/t.mass),r=g.scale(s,i/e.mass);t.velocity.addVector(n),e.velocity.addVector(r)}static separateEntities(t,e,i){let s=-i.x*e,n=-i.y*e;s+=1===Math.sign(s)?this.CORRECTION_FACTOR:-this.CORRECTION_FACTOR,n+=1===Math.sign(n)?this.CORRECTION_FACTOR:-this.CORRECTION_FACTOR;for(const e of t.points)e.addToCoordinates(s,n)}static calsImpulseMagnitude(t,e,i){const s=g.subtract(t.velocity,e.velocity);return 2*g.dotProduct(s,i)/(1/t.mass+1/e.mass)*this.COEFFICIENT_OF_RESTITUTION}static calcCollisionNormal(t,e){const i=g.subtract(t,e);return i.normalize(),i}}f.COEFFICIENT_OF_RESTITUTION=.6,f.CORRECTION_FACTOR=.55,f.SMALL_ANGULAR_IMPULSE=.004,f.ORTHOGONAL_IMPULSE=1e-4;class y{constructor(){}static extractType(t){return t%y.TYPE_DIVIDER}static isTank(t){return y.extractType(t)===y.TANK_TYPE}static isWall(t){return y.extractType(t)===y.WALL_TYPE}static isBullet(t){return y.extractType(t)===y.BULLET_TYPE}static checkForMaxValue(){if(y.ID>=y.MAX_VALUE)throw new Error("Maximum ID is reached.")}static getNextId(t){return y.checkForMaxValue(),++y.ID*y.TYPE_DIVIDER+t}static get tankId(){return y.getNextId(y.TANK_TYPE)}static get wallId(){return y.getNextId(y.WALL_TYPE)}static get bulletId(){return y.getNextId(y.BULLET_TYPE)}}y.TANK_TYPE=0,y.WALL_TYPE=1,y.BULLET_TYPE=2,y.TYPE_DIVIDER=1e3,y.ID=0,y.MAX_VALUE=Math.floor(Number.MAX_SAFE_INTEGER/y.TYPE_DIVIDER)-1;class P{constructor(){this._idForProcessing=new Array}hasForProcessing(){return 0!==this._idForProcessing.length}clear(){this._idForProcessing.length=0}push(t){this._idForProcessing.push(t)}get iterable(){return this._idForProcessing}}class I{get wallsForProcessing(){return this._wallsForProcessing}constructor(t){this._wallsForProcessing=new P,this._collisionDetection=t}hasCollision(t){const e=this._collisionDetection.getCollisions(t),i=new Array;for(const s of e){const e=f.resolveCollision(t,s);e&&(i.push({collisionPoint:e,id:s.id}),this.processCollision(s))}return 0!==i.length?i:null}processCollision(t){y.isWall(t.id)&&this._wallsForProcessing.push(t.id)}}class S{constructor(t,e){this._sprites=[],this._size=e,this._ctx=t,this._bufferCanvas=document.createElement("canvas"),this._bufferCanvas.width=e.width,this._bufferCanvas.height=e.height,this._bufferCtx=this._bufferCanvas.getContext("2d")}insert(t){const e=a.extractZIndex(t.id);for(let t=this._sprites.length;t<=e;t++)this._sprites.push(new Map);this._sprites[e].set(t.id,t)}remove(t){this.removeById(t)}removeById(t){const e=a.extractZIndex(t.id);this._sprites[e].delete(t.id)}drawAll(){this._bufferCtx.clearRect(0,0,this._size.width,this._size.height);for(const t of this._sprites)for(const e of t.values())this.draw(e);this._ctx.drawImage(this._bufferCanvas,0,0)}clear(){this._sprites=[]}draw(t){this._bufferCtx.save();const e=t.width/2,i=t.height/2;this._bufferCtx.globalAlpha=t.opacity,this._bufferCtx.translate(t.point.x+e,t.point.y+i),this._bufferCtx.rotate(t.angle),this._bufferCtx.scale(t.scaleX,t.scaleY),this._bufferCtx.drawImage(t.sprite,-e,-i,t.width,t.height),this._bufferCtx.restore()}}class C{constructor(t,e,i,s){this._boundary={xStart:t,yStart:e,xLast:i,yLast:s},this._root=new w(this._boundary)}insert(t){this._root.insert(t)}getCollisions(t){return this._root.getCollisions(t)}remove(t){this._root.remove(t)}clear(){this._root=new w(this._boundary)}}class w{constructor(t){this._totalEntities=0,this._entities=new Map,this._children=null,this._boundary=t}isSubdivide(){return null===this._entities}subdivide(){const t=this._boundary.xStart,e=this._boundary.yStart,i=this._boundary.xLast,s=this._boundary.yLast,n=(i-t)/2,r=(s-e)/2;this._children=[new w({xStart:t,yStart:e,xLast:t+n,yLast:e+r}),new w({xStart:t+n,yStart:e,xLast:i,yLast:e+r}),new w({xStart:t,yStart:e+r,xLast:t+n,yLast:s}),new w({xStart:t+n,yStart:e+r,xLast:i,yLast:s})],this.redistribute()}redistribute(){this._totalEntities=0;for(const t of this._children){for(const e of this._entities.values())t.insert(e);this._totalEntities+=t._totalEntities}this._entities=null}insert(t){if(this.isContainsEntity(t))if(this.isSubdivide()){this._totalEntities=0;for(const e of this._children)e.insert(t),this._totalEntities+=e._totalEntities}else this._totalEntities++,this._entities.set(t.id,t),this._entities.size>w.CAPACITY&&this.subdivide()}remove(t){if(this.isContainsEntity(t))if(this.isSubdivide()){this._totalEntities=0;for(const e of this._children)e.remove(t),this._totalEntities+=e._totalEntities;this._totalEntities<=w.HALF_CAPACITY&&this.mergeWithChildren()}else this._totalEntities--,this._entities.delete(t.id)}getCollisions(t){const e=new Array;if(this.isSubdivide())for(const i of this._children)i.isContainsEntity(t)&&e.push(...i.getCollisions(t));else for(const i of this._entities.values())M.hasCollision(t,i)&&e.push(i);return e}isContainsEntity(t){for(const e of t.points)if(this.isContainsPoint(e))return!0;return!1}isContainsPoint(t){return t.x>this._boundary.xStart&&t.x<this._boundary.xLast&&t.y>this._boundary.yStart&&t.y<this._boundary.yLast}mergeWithChildren(){this._entities=new Map;for(const t of this._children){t.isSubdivide()&&t.mergeWithChildren();for(const e of t._entities.values())this._entities.set(e.id,e)}this._totalEntities=this._entities.size,this._children=null}}w.CAPACITY=8,w.HALF_CAPACITY=w.CAPACITY>>1;class v{set resistanceCoeff(t){this._resistanceCoeff=t}set airResistanceCoeff(t){this._airResistanceCoeff=t}constructor(t,e){this._resistanceCoeff=0,this._airResistanceCoeff=0,this._entityStorage=t,this._collisionManager=e}get entityStorage(){return this._entityStorage}get collisionManager(){return this._collisionManager}}class L{constructor(){}static rotatePointAroundTarget(t,e,i,s){const n=t.x-e.x,r=t.y-e.y;t.x=e.x+n*s-r*i,t.y=e.y+n*i+r*s}static rotatePoint(t,e,i){const s=t.x,n=t.y;t.x=s*i-n*e,t.y=s*e+n*i}}class k{constructor(){}static movement(t){for(const e of t.points)e.addToCoordinates(t.velocity.x,t.velocity.y)}static angularMovement(t){k.rotateEntity(t,t.angularVelocity)}static rotateEntity(t,e){const i=Math.sin(e),s=Math.cos(e),n=t.calcCenter();for(const e of t.points)L.rotatePointAroundTarget(e,n,i,s);L.rotatePoint(t.velocity,i,s)}static moveEntity(t,e){for(const i of t.points)i.addToCoordinates(e.x,e.y)}}class H extends v{residualMovement(t,e){const i=t.sprite;t.model.isIdle()?i.tankTrackEffect.stopped():(i.tankTrackEffect.setResidualMovement(),this.hullUpdate(t,t.model.residualMovement,k.movement,t.sprite.preUpdateAction,e))}residualAngularMovement(t,e){t.model.isAngularMotionStopped()||this.hullUpdate(t,t.model.residualAngularMovement,k.angularMovement,t.sprite.preUpdateAction,e)}turretCounterclockwiseMovement(t,e){t.model.turretCounterclockwiseMovement(e),H.turretUpdate(t)}turretClockwiseMovement(t,e){t.model.turretClockwiseMovement(e),H.turretUpdate(t)}hullCounterclockwiseMovement(t,e){this.hullUpdate(t,t.model.hullCounterclockwiseMovement,k.angularMovement,t.sprite.preUpdateAction,e)}hullClockwiseMovement(t,e){this.hullUpdate(t,t.model.hullClockwiseMovement,k.angularMovement,t.sprite.preUpdateAction,e)}forwardMovement(t,e){this.hullUpdate(t,t.model.forwardMovement,k.movement,t.sprite.updateForwardAction,e)}backwardMovement(t,e){this.hullUpdate(t,t.model.backwardMovement,k.movement,t.sprite.updateBackwardAction,e)}hullUpdate(t,e,i,s,n){const r=t.model.entity;this._entityStorage.remove(r),e.call(t.model,this._resistanceCoeff,this._airResistanceCoeff,n),i(r),this._collisionManager.hasCollision(r)&&t.sprite.removeAcceleration(),s.call(t.sprite,r.points[0],r.angle,t.model.turretAngle),this._entityStorage.insert(r)}static turretUpdate(t){const e=t.model,i=e.entity.angle,s=Math.sin(i),n=Math.cos(i);t.sprite.rotateTurretUpdate(t.sprite.tankSpriteParts.hullSprite.calcPosition(e.entity.points[0],s,n),e.turretAngle,s,n)}}class D{constructor(){this._keys=new Set,document.addEventListener("keydown",this.handleKeyDown.bind(this)),document.addEventListener("keyup",this.handleKeyUp.bind(this))}clearKeys(){this._keys.clear()}isKeyDown(t){return this._keys.has(t)}handleKeyDown(t){this._keys.add(t.keyCode)}handleKeyUp(t){this._keys.delete(t.keyCode)}}class R{constructor(t,e,i,s,n,r){this._angularVelocity=0,this._velocity=new _(0,0);const a=e*e+i*i;this._radiusLength=.5*Math.sqrt(a),this._momentOfInertia=R.scalingCoeff*n*a,this._mass=n,this._id=r,this._width=e,this._height=i,this._points=[t.clone(),new c(t.x+e,t.y),new c(t.x+e,t.y+i),new c(t.x,t.y+i)],0!==s&&k.rotateEntity(this,s)}get velocity(){return this._velocity}get angle(){return Math.atan2(this._points[1].y-this._points[0].y,this._points[1].x-this._points[0].x)}get points(){return this._points}get mass(){return this._mass}get angularVelocity(){return this._angularVelocity}set angularVelocity(t){this._angularVelocity=t}get id(){return this._id}get radiusLength(){return this._radiusLength}get momentOfInertia(){return this._momentOfInertia}calcCenter(){return A(this._points[0],this._points[2])}get lengthwiseArea(){const t=this.angle-this._velocity.angle;return this._height*Math.abs(Math.cos(t))+this._width*Math.abs(Math.sin(t))}get movementLength(){const t=this.angle-this._velocity.angle;return this._width*Math.abs(Math.cos(t))+this._height*Math.abs(Math.sin(t))}}R.scalingCoeff=.3125;class x{constructor(t,e){this._model=t,this._sprite=e,this._id=t.entity.id}get model(){return this._model}get sprite(){return this._sprite}get id(){return this._id}spawn(t,e){t.insert(this._sprite),e.insert(this._model.entity)}vanish(t,e){t.remove(this._sprite),e.remove(this._model.entity)}}class N{constructor(){}static rotateToDefaultSpritePoint(t,e,i,s){const n=t.width>>1,r=t.height>>1;L.rotatePointAroundTarget(e,new c(e.x+n*s-r*i,e.y+r*s+n*i),-i,s)}static rotateToActualSpritePoint(t,e,i,s){const n=t.width>>1,r=t.height>>1;L.rotatePointAroundTarget(e,new c(e.x+n,e.y+r),i,s)}static updateSpritePart(t,e,i,s,n){N.rotateToDefaultSpritePoint(t,e,i,s),N.setPosAndAngle(t,e,n)}static setPosAndAngle(t,e,i){t.point=e,t.angle=i}static rotateForTurretPoint(t,e,i,s,n,r){const a=t.width>>1,o=t.height>>1;L.rotatePointAroundTarget(e,new c(e.x+a*s-o*i,e.y+o*s+a*i),n*s-r*i,s*r+i*n)}}class U extends o{constructor(e,n){super(t.WALL_WIDTH[n],t.WALL_HEIGHT[n],3),this._sprite.src=`src/img/blocks/${i[e]}_${s[n]}.png`}updateAfterAction(t,e){t=t.clone(),N.rotateToDefaultSpritePoint(this,t,Math.sin(e),Math.cos(e)),N.setPosAndAngle(this,t,e)}}class F{constructor(){}static calcAcceleration(t,e,i,s,n,r,a){return(t-e*r*.01-i*n*n*a)/r*(s/17)}static calcAngularAcceleration(t,e,i,s,n,r,a,o){return this.calcAcceleration(t,e,i,s,n,r,a)/o}}class O{constructor(){}static calcAcceleration(t,e,i,s,n,r){return(t-e*s*s*r)/n*(i/17)}static calcAngularAcceleration(t,e,i,s,n,r,a){return this.calcAcceleration(t,e,i,s,n,r)/a}}class b{constructor(t,e){this._entity=t,this._health=e}get health(){return this._health}isDead(){return this._health<=0}get entity(){return this._entity}isIdle(){return 0===this._entity.velocity.length}isAngularMotionStopped(){return 0===this._entity.angularVelocity}applyVelocityChange(t,e){const i=this._entity,s=Math.sign(i.velocity.x),n=Math.sign(i.velocity.y);i.velocity.addToCoordinates(t*Math.cos(e),t*Math.sin(e)),s!==Math.sign(i.velocity.x)&&(i.velocity.x=0),n!==Math.sign(i.velocity.y)&&(i.velocity.y=0)}applyAngularVelocityChange(t){const e=this._entity,i=e.angularVelocity;i>0?e.angularVelocity+=i+t<0?-i:t:e.angularVelocity-=i+t>0?-i:t}takeDamage(t){this._health-=t.damage}}class W extends b{residualMovement(t,e,i){const s=this._entity,n=F.calcAcceleration(0,t,e,i,s.velocity.length,s.mass,s.lengthwiseArea);this.applyVelocityChange(n,s.velocity.angle)}residualAngularMovement(t,e,i){const s=this._entity,n=F.calcAngularAcceleration(0,t,e,i,s.angularVelocity,s.mass,s.lengthwiseArea,s.radiusLength);this.applyAngularVelocityChange(n)}}class G extends b{residualMovement(t,e){const i=this._entity,s=O.calcAcceleration(0,t,e,i.velocity.length,i.mass,i.lengthwiseArea);this.applyVelocityChange(s,i.velocity.angle)}residualAngularMovement(t,e){const i=this._entity,s=O.calcAngularAcceleration(0,t,e,i.angularVelocity,i.mass,i.lengthwiseArea,i.radiusLength);this.applyAngularVelocityChange(s)}}class B extends W{constructor(t){super(t,1/0)}}class V{constructor(){}static createWallsAroundPerimeter(e,i){const s=new Array,n=this.calcIndent(i.width),r=this.calcIndent(i.height-(t.WALL_HEIGHT[this.RECT_NUM]<<1));return this.createHorWalls(e,n,r,i,s),this.createVertWalls(e,n,r,i,s),s}static calcIndent(e){const i=e-(this.INDENT<<1);return(i-t.WALL_WIDTH[this.RECT_NUM]*Math.floor(i/t.WALL_WIDTH[this.RECT_NUM])>>1)+this.INDENT}static createHorWalls(e,i,s,n,r){for(let a=i;a<=n.width-i-t.WALL_WIDTH[this.RECT_NUM];a+=t.WALL_WIDTH[this.RECT_NUM])r.push(this.createWall(new c(a,s),0,e,this.RECT_NUM)),r.push(this.createWall(new c(a,n.height-t.WALL_HEIGHT[this.RECT_NUM]-s),0,e,this.RECT_NUM))}static createVertWalls(e,i,s,n,r){for(let a=s+t.WALL_HEIGHT[this.RECT_NUM]+(t.WALL_HEIGHT[this.RECT_NUM]>>1);a<=n.height-s-t.WALL_WIDTH[this.RECT_NUM];a+=t.WALL_WIDTH[this.RECT_NUM])r.push(this.createWall(new c(i-(t.WALL_HEIGHT[this.RECT_NUM]>>1),a),this.RAD_90,e,this.RECT_NUM)),r.push(this.createWall(new c(n.width-i-t.WALL_WIDTH[this.RECT_NUM]+(t.WALL_HEIGHT[this.RECT_NUM]>>1),a),this.RAD_90,e,this.RECT_NUM))}static createWall(e,i,s,r,a=!1){const o=a?n[s][r]:1/0,h=new B(new R(e,t.WALL_WIDTH[r],t.WALL_HEIGHT[r],i,o,y.wallId)),l=new U(s,r);return l.point=e,l.angle=i,new x(h,l)}}V.INDENT=10,V.RAD_90=90*Math.PI/180,V.RECT_NUM=0;class X extends v{residualAngularMovement(t,e){t.model.isAngularMotionStopped()||this.update(t,t.model.residualAngularMovement,k.angularMovement,e)}residualMovement(t,e){t.model.isIdle()||this.update(t,t.model.residualMovement,k.movement,e)}update(t,e,i,s){const n=t.model.entity;this._entityStorage.remove(n),e.call(t.model,this._resistanceCoeff,this._airResistanceCoeff,s),i(n),this._collisionManager.hasCollision(n),t.sprite.updateAfterAction(n.points[0],n.angle),this._entityStorage.insert(n)}isCompleteMotion(t){return t.model.isAngularMotionStopped()&&t.model.isIdle()}movement(t,e){this.residualAngularMovement(t,e),this.residualMovement(t,e)}}class K{constructor(t,e,i,s){this._movementManager=t,this._storage=e,this._elements=i,this._isResponsibleFor=s}get movementManager(){return this._movementManager}get isResponsibleFor(){return this._isResponsibleFor}get(t){return this._elements.has(t)?this._elements.get(t):null}add(t){for(const e of t)this._elements.has(e.id)||(this._elements.set(e.id,e),e.spawn(this._storage,this._movementManager.entityStorage))}delete(t){this._elements.has(t.id)&&(this._elements.delete(t.id),t.vanish(this._storage,this._movementManager.entityStorage))}}class ${get value(){return this._value}get prev(){return this._prev}get next(){return this._next}set next(t){this._next=t}set prev(t){this._prev=t}constructor(t){this._prev=null,this._next=null,this._value=t}remove(){null!==this._prev&&(this._prev.next=this._next),null!==this._next&&(this._next.prev=this._prev),this._prev=null,this._next=null}}class z{constructor(){this._tail=null,this._head=null,this._length=0}get head(){return null!==this._head?this._head.value:null}get tail(){return null!==this._tail?this._tail.value:null}get length(){return this._length}*[Symbol.iterator](){let t=this._head;for(let e=this._length;e>0;e--)yield t.value,t=t.next}applyAndRemove(t,e,i){let s=this._head;for(;null!==s;)if(t(s.value,i),e(s.value)){const t=s;s=s.next,this.removeNode(t)}else s=s.next}isEmpty(){return 0===this._length}remove(t){let e=this._head;for(;null!==e;){if(e.value===t)return void this.removeNode(e);e=e.next}}removeNode(t){t===this._tail&&(this._tail=t.prev),t===this._head&&(this._head=t.next),this._length--,t.remove()}addToHead(t){const e=new $(t);null===this._head?(this._tail=e,this._head=e):(e.next=this._head,this._head.prev=e,this._head=e),this._length++}addToTail(t){const e=new $(t);null===this._tail?(this._tail=e,this._head=e):(e.prev=this._tail,this._tail.next=e,this._tail=e),this._length++}removeFromTail(){this._tail===this._head?this.clear():(this._tail=this._tail.prev,this._tail.next=null,this._length--)}removeFromHead(){this._tail===this._head?this.clear():(this._head=this._head.next,this._head.prev=null,this._length--)}moveToTail(t){let e=this._tail;for(;null!==e;){if(e.value===t){if(e!==this._tail){const t=e.prev,i=e.next;null!==t&&(t.next=i),null!==i&&(i.prev=t),e.next=null,e.prev=this._tail,this._tail.next=e,this._tail=e}return}e=e.prev}}moveToHead(t){let e=this._head;for(;null!==e;){if(e.value===t){if(e!==this._head){const t=e.prev,i=e.next;null!==t&&(t.next=i),null!==i&&(i.prev=t),e.next=this._head,e.prev=null,this._head.prev=e,this._head=e}return}e=e.next}}clear(){this._tail=this._head=null,this._length=0}}class Y{constructor(t){this._vanishingListOfTirePairs=new z,this.tanksAmount=0,this._storage=t}get vanishingListOfTirePairs(){return this.tanksAmount++,this._vanishingListOfTirePairs}removeTireTrackPair(t){this._storage.remove(t.topTire),this._storage.remove(t.bottomTire)}reduceOpacity(){let t=0;for(const e of this._vanishingListOfTirePairs){const i=this._vanishingListOfTirePairs.length*Y.MIN_REDUCING_OPACITY_NUMBER/this.tanksAmount;e.topTire.opacity-=i,e.bottomTire.opacity-=i,e.topTire.opacity<=0&&t++}for(;t>0;t--)this.removeTireTrackPair(this._vanishingListOfTirePairs.tail),this._vanishingListOfTirePairs.removeFromTail()}}Y.MIN_REDUCING_OPACITY_NUMBER=1e-4;class Z extends o{get isEnded(){return this._isEnded}constructor(t,e,i,s,n){super(i,s,6),this._animationStage=0,this._isEnded=!1,this._timer=0,this._num=0===n?0:1,this._sprite.src=`${Z.DEFAULT_PATH}${this._num}_${this._animationStage}.png`;const r=new c(t.x+s/2*Math.sin(e),t.y-s/2*Math.cos(e));N.rotateToDefaultSpritePoint(this,r,Math.sin(e),Math.cos(e)),this._point=r,this._angle=e}changeStage(t){this._timer+=t,this._timer>=Z.UPDATE_TIMER_TIME&&(this._timer-=Z.UPDATE_TIMER_TIME,this._animationStage++,this._animationStage<=Z.MAX_STAGE?this._sprite.src=`${Z.DEFAULT_PATH}${this._num}_${this._animationStage}.png`:this._isEnded=!0)}}Z.DEFAULT_PATH="src/img/tanks/Effects/Sprites/Sprite_Fire_Shots_Shot_",Z.UPDATE_TIMER_TIME=45,Z.MAX_STAGE=3;class j extends K{constructor(t,e,i,s,n,r){super(t,e,i,y.isTank),this._addBulletElement=s,this._animationManager=n,this._KeyHandler=r,this._tireTracksManager=new Y(e)}handle(e){this._tireTracksManager.reduceOpacity();for(const i of this._elements.values()){const s=i.control;let n=this._KeyHandler.isKeyDown(s.turretClockwiseKey),r=this._KeyHandler.isKeyDown(s.turretCounterClockwiseKey);if((n&&!r||!n&&r)&&(n?this._movementManager.turretClockwiseMovement(i,e):r&&this._movementManager.turretCounterclockwiseMovement(i,e)),n=this._KeyHandler.isKeyDown(s.forwardKey),r=this._KeyHandler.isKeyDown(s.backwardKey),n&&!r||!n&&r?n?this._movementManager.forwardMovement(i,e):r&&(i.sprite.removeAcceleration(),this._movementManager.backwardMovement(i,e)):(i.sprite.removeAcceleration(),this._movementManager.residualMovement(i,e)),n=this._KeyHandler.isKeyDown(s.hullClockwiseKey),r=this._KeyHandler.isKeyDown(s.hullCounterClockwiseKey),n&&!r||!n&&r?n?this._movementManager.hullClockwiseMovement(i,e):r&&this._movementManager.hullCounterclockwiseMovement(i,e):this._movementManager.residualAngularMovement(i,e),n=this._KeyHandler.isKeyDown(s.shootKey),n){const e=i.model.shot();if(e){const s=i.model.bulletNum;this.playShootAnimation(A(e.entity.points[0],e.entity.points[3]),e.entity.angle,5*t.BULLET_WIDTH[s],5*t.BULLET_HEIGHT[s],s),this._addBulletElement.addBulletModel(e,s)}}}}playShootAnimation(t,e,i,s,n){const r=new Z(t,e,i,s,n);this._animationManager.add(r)}add(t){super.add(t);for(const e of t){const t=e.sprite,i=e.model.entity;t.spawnTireTracks(this._storage,i.points[0],i.angle,this._tireTracksManager.vanishingListOfTirePairs),t.spawnDriftSmoke(this._animationManager);const s=t.tankSpriteParts.hullSprite;t.spawnTankAcceleration(this._storage,s.accelerationEffectIndentX,s.height)}}}class q extends K{constructor(t,e,i){super(t,e,i,y.isWall),this._wallToProcess=new z}addToProcess(){const t=this._movementManager.collisionManager.wallsForProcessing;if(t.hasForProcessing()){for(const e of t.iterable)this._wallToProcess.addToTail(this._elements.get(e));t.clear()}}handle(t){this.addToProcess(),this._wallToProcess.isEmpty()||this._wallToProcess.applyAndRemove(this._movementManager.movement.bind(this._movementManager),this._movementManager.isCompleteMotion.bind(this._movementManager),t)}}class Q{constructor(t){this._animationList=new z,this._storage=t}add(t){this._storage.insert(t),this._animationList.addToTail(t)}handle(t){this._animationList.isEmpty()||this._animationList.applyAndRemove(((t,e)=>t.changeStage(e)),this.removalCondition.bind(this),t)}removalCondition(t){return t.isEnded&&this._storage.removeById(t),t.isEnded}}class J{constructor(t,e){this._model=t,this._sprite=e,this._id=t.entity.id}get id(){return this._id}get model(){return this._model}get sprite(){return this._sprite}spawn(t,e){t.insert(this._sprite),e.insert(this._model.entity)}vanish(t,e){t.remove(this._sprite),e.remove(this._model.entity)}}class tt extends o{get num(){return this._num}constructor(e){super(t.BULLET_WIDTH[e],t.BULLET_HEIGHT[e],3),this._sprite.src=`src/img/tanks/Bullets/Bullet_${e}.png`,this._num=e}updateAfterAction(t,e){t=t.clone(),N.rotateToDefaultSpritePoint(this,t,Math.sin(e),Math.cos(e)),N.setPosAndAngle(this,t,e)}}class et extends o{get isEnded(){return this._isEnded}constructor(e,i){super(t.EXPLOSION_SIZE,t.EXPLOSION_SIZE,6),this._animationStage=0,this._isEnded=!1,this._timer=0,this._sprite.src=`${et.DEFAULT_PATH}${this._animationStage}.png`,this._point=new c(e.x-t.EXPLOSION_SIZE/2,e.y-t.EXPLOSION_SIZE/2),this._angle=i}changeStage(t){this._timer+=t,this._timer>=et.UPDATE_TIMER_TIME&&(this._timer-=et.UPDATE_TIMER_TIME,this._animationStage++,this._animationStage<=et.MAX_STAGE?this._sprite.src=`${et.DEFAULT_PATH}${this._animationStage}.png`:this._isEnded=!0)}}et.DEFAULT_PATH="src/img/tanks/Effects/Sprites/Sprite_Effects_Explosion_",et.UPDATE_TIMER_TIME=90,et.MAX_STAGE=8;class it{static playDeathAnimation(t,e){if(y.isWall(t.id),y.isTank(t.id)){const i=new et(t.calcCenter(),h(-Math.PI,Math.PI));e.add(i)}y.isBullet(t.id)}}class st extends o{get isEnded(){return this._isEnded}constructor(t,e,i,s,n){super(i,s,6),this._animationStage=0,this._isEnded=!1,this._timer=0,this._num=0===n?0:1,this._sprite.src=`${st.DEFAULT_PATH}${this._num}_${this._animationStage}.png`;const r=new c(t.x+s/2*Math.sin(e),t.y-s/2*Math.cos(e));N.rotateToDefaultSpritePoint(this,r,Math.sin(e),Math.cos(e)),this._point=r,this._angle=e}changeStage(t){this._timer+=t,this._timer>=st.UPDATE_TIMER_TIME&&(this._timer-=st.UPDATE_TIMER_TIME,this._animationStage++,this._animationStage<=st.MAX_STAGE?this._sprite.src=`${st.DEFAULT_PATH}${this._num}_${this._animationStage}.png`:this._isEnded=!0)}}st.DEFAULT_PATH="src/img/tanks/Effects/Sprites/Sprite_Fire_Shots_Impact_",st.UPDATE_TIMER_TIME=70,st.MAX_STAGE=3;class nt extends K{constructor(t,e,i,s,n){super(t,e,i,y.isBullet),this._handlingManagers=s,this._animationManager=n}handle(t){if(0!==this._elements.size){const e=new Array;for(const i of this._elements.values())this._movementManager.movement(i,t),this._movementManager.hasResidualMovement(i)||e.push(i);for(const t of e)this.delete(t)}this._movementManager.bulletCollisionDates.hasForProcessing()&&this.handleBulletCollisions()}handleBulletCollisions(){for(const e of this._movementManager.bulletCollisionDates.iterable){for(const i of e.collisionPacks){const s=e.bulletElement.sprite.num;this.playImpactAnimation(i.collisionPoint,e.bulletElement.model.entity.angle+Math.PI,5*t.BULLET_WIDTH[s],5*t.BULLET_HEIGHT[s],s);const n=i.id,r=this.getElementHandling(n),a=r.get(n);a&&(a.model.takeDamage(e.bulletElement.model),a.model.isDead()&&(it.playDeathAnimation(a.model.entity,this._animationManager),r.delete(a)))}this.delete(e.bulletElement)}this._movementManager.bulletCollisionDates.clear()}getElementHandling(t){for(const e of this._handlingManagers)if(e.isResponsibleFor(t))return e}playImpactAnimation(t,e,i,s,n){const r=new st(t,e,i,s,n);this._animationManager.add(r)}}class rt{constructor(t,e,i){this._elements=t,this._storage=e,this._bulletMovementManager=i}addBulletModel(t,e){if(!this._elements.has(t.entity.id)){const i=new J(t,new tt(e));this._bulletMovementManager.checkForSpawn(i)&&(this._elements.set(i.id,i),i.spawn(this._storage,this._bulletMovementManager.entityStorage))}}}class at extends v{constructor(){super(...arguments),this._bulletCollisionDates=new P}get bulletCollisionDates(){return this._bulletCollisionDates}hasResidualMovement(t){return!t.model.isIdle()}movement(t,e){t.model.isIdle()||this.update(t,e)}update(t,e){const i=t.model.entity;this._entityStorage.remove(i),t.model.residualMovement(this._airResistanceCoeff,e);const s=g.createFromAngleAndLength(i.velocity.angle,i.movementLength);let n=!1;const r=Math.floor(g.calcCoDirectionalScaleFactor(i.velocity,s));for(let e=r;e>0;e--){k.moveEntity(i,s);const e=this._collisionManager.hasCollision(i);if(e){this._bulletCollisionDates.push({bulletElement:t,collisionPacks:e}),n=!0;break}}if(!n){s.scale(-r),s.addVector(i.velocity),k.moveEntity(i,s);const e=this._collisionManager.hasCollision(i);e&&this._bulletCollisionDates.push({bulletElement:t,collisionPacks:e})}t.sprite.updateAfterAction(i.points[0],i.angle),this._entityStorage.insert(i)}checkForSpawn(t){const e=t.model.entity,i=this._collisionManager.hasCollision(e);return i?(this._bulletCollisionDates.push({bulletElement:t,collisionPacks:i}),!1):(t.sprite.updateAfterAction(e.points[0],e.angle),!0)}}class ot{constructor(){this._executioners=new Array}add(...t){this._executioners.push(...t)}renderAll(t){for(const e of this._executioners)e.handle(t)}}class ht{constructor(t){this._isGameLoopActive=!1,this._lastFrameTime=performance.now(),this._render=new ot,this._drawable=t}get render(){return this._render}start(){this._isGameLoopActive||(this._isGameLoopActive=!0,requestAnimationFrame((()=>this.gameLoop())))}stop(){this._isGameLoopActive=!1}gameLoop(){if(!this._isGameLoopActive)return;const t=performance.now();this._render.renderAll(t-this._lastFrameTime),this._drawable.drawAll(),this._lastFrameTime=t,requestAnimationFrame((()=>this.gameLoop()))}}class lt{get startingSpeed(){return 35}get damage(){return 15}get armorPenetration(){return 5}get mass(){return.008}get health(){return 1}get num(){return 0}}class ct extends G{constructor(t,e,i){super(e,t.health),this._damage=t.damage*i.damageCoeff,this._armorPenetration=t.armorPenetration*i.armorPenetrationCoeff}get damage(){return this._damage}get armorPenetration(){return this._armorPenetration}}class _t{constructor(){}static create(e,i,s,n){const r=_t.createBullet(e),a=_t.calcDefaultEntityPoint(e,i,s),o=new R(a,t.BULLET_WIDTH[e],t.BULLET_HEIGHT[e],s,r.mass,y.bulletId),h=r.startingSpeed*n.startingSpeedCoeff;return o.velocity.x=h*Math.cos(s),o.velocity.y=h*Math.sin(s),new ct(r,o,n)}static calcDefaultEntityPoint(e,i,s){const n=new c(i.x+t.BULLET_HEIGHT[e]/2*Math.sin(s),i.y-t.BULLET_HEIGHT[e]/2*Math.cos(s)),r=Math.sin(s),a=Math.cos(s),o=new c(n.x+t.BULLET_WIDTH[e]/2*a-t.BULLET_HEIGHT[e]/2*r,n.y+t.BULLET_HEIGHT[e]/2*a+t.BULLET_WIDTH[e]/2*r);return L.rotatePointAroundTarget(n,o,-r,a),n}static createBullet(t){if(0===t)return new lt;throw new Error(`Bullet model ${t} was not found`)}}class ut{get angleSpeed(){return 6e-4}get mass(){return.35}get bulletCapacity(){return 10}get num(){return 0}}class dt{get armorPenetrationCoeff(){return 1}get damageCoeff(){return 1}get startingSpeedCoeff(){return 1}get reloadSpeed(){return 1e3}get mass(){return.15}get num(){return 0}}class gt extends W{constructor(t,e){super(e,t.hull.health),this._lastTimeShot=Date.now(),this._bulletQuantity=50,this._bulletNum=0,this._isBraking=!1,this._isDrift=!1,this._tankParts=t,this._turretAngle=e.angle,this._armorStrength=t.hull.armorStrength}takeDamage(t){this._armorStrength-=t.armorPenetration,this._armorStrength<0&&(this._armorStrength=0),this._health-=t.damage-this._tankParts.hull.armor*this._armorStrength}get turretAngle(){return this._turretAngle}get armor(){return this._tankParts.hull.armor}get armorStrength(){return this._armorStrength}get bulletNum(){return this._bulletNum}shot(){const t=Date.now();if(0===this._bulletQuantity||t-this._lastTimeShot<this._tankParts.weapon.reloadSpeed)return null;const e=_t.create(this._bulletNum,this.calcBulletExit(),this._turretAngle,this._tankParts.weapon);return this._lastTimeShot=t,this._bulletQuantity--,e}calcBulletExit(){const e=this._entity.calcCenter(),i=this._tankParts,s=(r=i.turret,t.TURRET_WIDTH[r.num]/2+(n=i.weapon,t.WEAPON_WIDTH[n.num]));var n,r;const a=e.x+s*Math.cos(this._turretAngle),o=e.y+s*Math.sin(this._turretAngle);return new c(a,o)}incBulletQuantity(t){this._bulletQuantity=Math.min(this._bulletQuantity+t,this._tankParts.turret.bulletCapacity)}takeNewBullet(t){this._bulletNum=t}turretClockwiseMovement(t){this._turretAngle+=this._tankParts.turret.angleSpeed*t}turretCounterclockwiseMovement(t){this._turretAngle-=this._tankParts.turret.angleSpeed*t}incTurretAngle(t){this._turretAngle+=t}hullClockwiseMovement(t,e,i){const s=this._entity,n=this._tankParts.track.angularData;s.angularVelocity<n.finishSpeed&&(s.angularVelocity+=F.calcAngularAcceleration(n.force,t,e,i,s.angularVelocity,s.mass,s.lengthwiseArea,s.radiusLength)),this.updateAngularVelocity(),this.incTurretAngle(s.angularVelocity)}hullCounterclockwiseMovement(t,e,i){const s=this._entity,n=this._tankParts.track.angularData;-s.angularVelocity<n.finishSpeed&&(s.angularVelocity-=F.calcAngularAcceleration(n.force,t,e,i,s.angularVelocity,s.mass,s.lengthwiseArea,s.radiusLength)),this.updateAngularVelocity(),this.incTurretAngle(s.angularVelocity)}updateAngularVelocity(){if(this.isIdle())return;const t=this._entity,e=t.velocity;(this._isDrift||this._isBraking)&&this.incAngularVelocity(t,e),this._isBraking||this.decAngularVelocity(t,e)}incAngularVelocity(t,e){const i=this.calcCoeff(),s=1+e.length/(this._tankParts.track.forwardData.finishSpeed*i),n=1+t.mass/(10*i);t.angularVelocity*=n*s}calcCoeff(){let t=100;return this._isDrift&&(t-=25),this._isBraking&&(t-=5),t}decAngularVelocity(t,e){const i=1-e.length/(20*this._tankParts.track.forwardData.finishSpeed),s=1-t.mass/200;t.angularVelocity*=s*i,e.scale(s)}forwardMovement(t,e,i){this.movement(this._tankParts.track.forwardData,this._entity.angle,t,e,i)}backwardMovement(t,e,i){this.movement(this._tankParts.track.backwardData,this._entity.angle+Math.PI,t,e,i)}movement(t,e,i,s,n){const r=this._entity,a=r.velocity.length,o=0===a?e:r.velocity.angle,h=E(e,o);this.setBrakingStatus(h),gt.isStraightMovement(h)?(this._isDrift=!1,this.handleStraightMovement(t,i,s,n,a,o)):(this._isDrift=!gt.isReverseMovement(h),this._isDrift&&(this.determineDribbleSpeed(h),this.applyTurn(this.calcShortestTurn(h))),this.handleDriftMovement(t,i,s,n,a,h,o))}setBrakingStatus(t){this._isBraking=p(t)}calcShortestTurn(t){return this._isBraking&&(t=gt.adjustTurnForBraking(t)),t=gt.adjustTurnForRecovery(t)}static isStraightMovement(t){return t<=e||2*Math.PI-t<=e}static isReverseMovement(t){return Math.abs(t-Math.PI)<=e}handleStraightMovement(t,e,i,s,n,r){if(n<t.finishSpeed){const a=F.calcAcceleration(t.force,e,i,s,n,this._entity.mass,this._entity.lengthwiseArea);this._entity.velocity.addToCoordinates(a*Math.cos(r),a*Math.sin(r))}}handleDriftMovement(t,e,i,s,n,r,a){if(this._isBraking||n<t.finishSpeed){const o=F.calcAcceleration(t.force*Math.cos(r),e,i,s,n,this._entity.mass,this._entity.lengthwiseArea);this.applyVelocityChange(o,a)}}static adjustTurnForBraking(t){return m(t-Math.PI/2)}static adjustTurnForRecovery(t){const e=t-2*Math.PI;return t>Math.abs(e)?e:t}applyTurn(t){t*=gt.VELOCITY_RECOVERY_COEFF*this._entity.mass,L.rotatePoint(this._entity.velocity,Math.sin(t),Math.cos(t))}determineDribbleSpeed(t){const e=(Math.abs(Math.cos(t))-(i=0))/(1-i)*(1-(s=.95))+s;var i,s;this._entity.velocity.scale(e)}residualMovement(t,e,i){const s=E(this._entity.angle,this._entity.velocity.angle);(this._isDrift||!gt.isStraightMovement(s)&&!gt.isReverseMovement(s))&&(this._isDrift=!0,this.determineDribbleSpeed(s)),this._isBraking=!1,super.residualMovement(t,e,i)}residualAngularMovement(t,e,i){this.updateAngularVelocity(),super.residualAngularMovement(t,e,i),this.incTurretAngle(this._entity.angularVelocity)}}gt.VELOCITY_RECOVERY_COEFF=.017;class Tt extends o{constructor(t,e,i){super(t,e,2),this._sprite.src=`src/img/tanks/Effects/Tire Tracks/Tire_Track_Chain_${i}.png`}}class mt extends o{constructor(t,e,i){super(t,e,2),this._sprite.src=`src/img/tanks/Effects/Tire Tracks/Tire_Track_${i}.png`}}var pt,Et,At;!function(t){t[t.dirForward=1]="dirForward",t[t.dirRotate=0]="dirRotate",t[t.dirBackward=1]="dirBackward"}(pt||(pt={}));class Mt{get chainWidth(){return this._chainWidth}constructor(t,e,i){this._listOfTirePairs=new z,this._vanishingListOfTirePairs=i,this._storage=t,this._trackWidth=e.width,this._trackHeight=e.height,this._trackType=e.num,this._chainWidth=this.calcWidthOfChain(),this._chainHeight=e.height,this._chainType=e.num%2}calcWidthOfChain(){return this._trackWidth/Mt.AMOUNT_OF_CHAINS}static calcPositionOfFirstChain(t,e,i,s,n){return new c(t.x+e*n-i*n,t.y+e*s-i*s)}moveToNextChain(t,e,i){t.x=t.x-this._chainWidth*i,t.y=t.y-this._chainWidth*e}vanishFullTrack(){for(const t of this._listOfTirePairs)this._vanishingListOfTirePairs.addToHead(this._listOfTirePairs.head),this._listOfTirePairs.removeFromHead()}static setAndPosTireTrackPair(t,e,i,s,n,r){const a=e.clone(),o=i.clone();N.rotateToDefaultSpritePoint(t.topTire,a,n,r),N.rotateToDefaultSpritePoint(t.bottomTire,o,n,r),N.setPosAndAngle(t.topTire,a,s),N.setPosAndAngle(t.bottomTire,o,s)}createTireTrackChainPair(t,e,i,s,n){const r={topTire:new Tt(this._chainWidth,this._chainHeight,this._chainType),bottomTire:new Tt(this._chainWidth,this._chainHeight,this._chainType)};return this._storage.insert(r.topTire),this._storage.insert(r.bottomTire),Mt.setAndPosTireTrackPair(r,t,e,i,s,n),r}createTireTrackPair(t,e,i,s,n){this.vanishFullTrack();const r={topTire:new mt(this._trackWidth,this._trackHeight,this._trackType),bottomTire:new mt(this._trackWidth,this._trackHeight,this._trackType)};this._storage.insert(r.topTire),this._storage.insert(r.bottomTire),Mt.setAndPosTireTrackPair(r,t,e,i,s,n),this._listOfTirePairs.addToHead(r)}calcFirstTopBottomChainPoints(t,e,i,s){const n=Mt.calcPositionOfFirstChain(e,this._trackWidth,this.chainWidth,i,s),r=t.hullSprite.calcPosition(e,i,s);let a=t.bottomTrackSprite.calcPosition(r,i,s);return a=Mt.calcPositionOfFirstChain(a,this._trackWidth,this.chainWidth,i,s),{topFirstChainPoint:n,bottomFirstChainPoint:a}}calcLastTopBottomChainPoints(t,e,i,s){const n=e.clone(),r=t.hullSprite.calcPosition(e,i,s);return{topLastChainPoint:n,bottomLastChainPoint:t.bottomTrackSprite.calcPosition(r,i,s)}}spawnFullTireTrack(t,e,i,s,n){this._topFirstChainPoint=t.clone(),this._bottomFirstChainPoint=e.clone();for(let r=0;r<Mt.AMOUNT_OF_CHAINS;r++){const a=this.createTireTrackChainPair(t,e,i,s,n);this._listOfTirePairs.addToHead(a),r===Mt.AMOUNT_OF_CHAINS-1&&(this._topLastChainPoint=t.clone(),this._bottomLastChainPoint=e.clone()),this.moveToNextChain(t,s,n),this.moveToNextChain(e,s,n)}}updateAllChainPoints(t,e,i,s){this._topFirstChainPoint=t,this._bottomFirstChainPoint=e,this._topLastChainPoint=i,this._bottomLastChainPoint=s}checkForUpdate(t,e,i,s){const n=T(t,this._topFirstChainPoint),r=T(e,this._bottomFirstChainPoint),a=T(i,this._topLastChainPoint),o=T(s,this._bottomLastChainPoint);return n>=this._chainWidth?{isUpdate:!0,prevPoint:this._topFirstChainPoint,currPoint:t}:r>=this._chainWidth?{isUpdate:!0,prevPoint:this._bottomFirstChainPoint,currPoint:e}:a>=this._chainWidth?{isUpdate:!0,prevPoint:this._topLastChainPoint,currPoint:i}:o>=this._chainWidth?{isUpdate:!0,prevPoint:this._bottomLastChainPoint,currPoint:s}:{isUpdate:!1}}getMovementAngle(t,e){const i=e.x-t.x,s=e.y-t.y;return Math.atan2(s,i)}detectMovementDirection(t,e,i){const s=this.getMovementAngle(t,e);let n=m(i-Mt.DIRECTION_ANGLE_DIFFERENCE,-Math.PI,Math.PI),r=m(i+Mt.DIRECTION_ANGLE_DIFFERENCE,-Math.PI,Math.PI),a=!1;if(n>=Math.PI/2&&n<=Math.PI&&r>=-Math.PI&&r<=-Math.PI/2&&(a=!0,s>=0?r=m(r,0,2*Math.PI):n=m(n,-2*Math.PI,0)),s>=n&&s<=r||s<=n&&s>=r)return pt.dirForward;{a&&(n<0?(n=m(n,0,2*Math.PI),r=m(r,0,2*Math.PI)):(n=m(n,-2*Math.PI,0),r=m(r,-2*Math.PI,0)));const t=m(s-Math.PI,-Math.PI,Math.PI);return t>=n&&t<=r||t<=n&&t>=r?pt.dirBackward:pt.dirRotate}}forwardUpdate(t,e,i,s,n){const r=this.createTireTrackChainPair(t,e,i,s,n);this._listOfTirePairs.addToTail(r),this._listOfTirePairs.length>Mt.AMOUNT_OF_CHAINS&&(this._vanishingListOfTirePairs.addToHead(this._listOfTirePairs.head),this._listOfTirePairs.removeFromHead())}backwardUpdate(t,e,i,s,n){const r=this.createTireTrackChainPair(t,e,i,s,n);this._listOfTirePairs.addToHead(r),this._listOfTirePairs.length>Mt.AMOUNT_OF_CHAINS&&(this._vanishingListOfTirePairs.addToHead(this._listOfTirePairs.tail),this._listOfTirePairs.removeFromTail())}}Mt.DIRECTION_ANGLE_DIFFERENCE=.6,Mt.AMOUNT_OF_CHAINS=10;class ft extends o{constructor(){super(t.ACCELERATION_SIZE,t.ACCELERATION_SIZE,4),this._sprite.src=ft.SRC[0]}setSrc(t){this._sprite.src=ft.SRC[t]}}Et=ft,ft.DEFAULT_SRC="src/img/tanks/Effects/Movement/Movement_",ft.SRC=[`${Et.DEFAULT_SRC}0.png`,`${Et.DEFAULT_SRC}1.png`,`${Et.DEFAULT_SRC}2.png`,`${Et.DEFAULT_SRC}3.png`,`${Et.DEFAULT_SRC}4.png`,`${Et.DEFAULT_SRC}5.png`,`${Et.DEFAULT_SRC}6.png`,`${Et.DEFAULT_SRC}7.png`,`${Et.DEFAULT_SRC}8.png`,`${Et.DEFAULT_SRC}9.png`,`${Et.DEFAULT_SRC}10.png`,`${Et.DEFAULT_SRC}11.png`,`${Et.DEFAULT_SRC}12.png`,`${Et.DEFAULT_SRC}13.png`,`${Et.DEFAULT_SRC}14.png`,`${Et.DEFAULT_SRC}15.png`,`${Et.DEFAULT_SRC}16.png`,`${Et.DEFAULT_SRC}17.png`,`${Et.DEFAULT_SRC}18.png`,`${Et.DEFAULT_SRC}19.png`];class yt{constructor(t,e,i){this._topSpriteAccelerationEffect=new ft,this._bottomSpriteAccelerationEffect=new ft,this._counter=0,this._state=0,this._storage=t,this._indentX=e,this._tankHeight=i}changeState(){this._state===yt.LAST_STATE&&(this._state=yt.WORKING_STATE),this._counter++,this._counter===yt.THRESHOLD&&(this._counter=0,this._state++,this._topSpriteAccelerationEffect.setSrc(this._state),this._bottomSpriteAccelerationEffect.setSrc(this._state))}setPosition(t,e,i,s){0===this._state&&0===this._counter&&(this._storage.insert(this._topSpriteAccelerationEffect),this._storage.insert(this._bottomSpriteAccelerationEffect)),this.changeState();let n=this.calcPosition(t,e,i,28*this._tankHeight/42);N.updateSpritePart(this._topSpriteAccelerationEffect,n,e,i,s),n=this.calcPosition(t,e,i,37*this._tankHeight/42),N.updateSpritePart(this._bottomSpriteAccelerationEffect,n,e,i,s)}removeAcceleration(){if(0===this._state&&0===this._counter)return;this._state=0,this._counter=0;const t=this._topSpriteAccelerationEffect,e=this._bottomSpriteAccelerationEffect;t.setSrc(this._state),e.setSrc(this._state),this._storage.remove(this._topSpriteAccelerationEffect),this._storage.remove(this._bottomSpriteAccelerationEffect)}calcPosition(e,i,s,n){return new c(e.x+this._indentX*s-n*i-t.ACCELERATION_SIZE/2*s+t.ACCELERATION_SIZE/1.517*i,e.y+n*s+this._indentX*i-t.ACCELERATION_SIZE/1.517*s-t.ACCELERATION_SIZE/2*i)}}yt.THRESHOLD=7,yt.LAST_STATE=19,yt.WORKING_STATE=10;class Pt{constructor(t,e){this._state=0,this._counter=0,this._isForwardMovement=!0,this._isResidualMovement=!1,this._minStateChangeThreshold=[Math.max(Math.round(Pt.MIN_THRESHOLD_COEFF/e.finishSpeed),Pt.MIN_STATE_CHANGE_THRESHOLD_MINIMUM),Math.max(Math.round(Pt.MIN_THRESHOLD_COEFF/t.finishSpeed),Pt.MIN_STATE_CHANGE_THRESHOLD_MINIMUM)],this._maxStateChangeThreshold=[Math.min(Math.round(Pt.MAX_THRESHOLD_COEFF/e.force),Pt.MAX_STATE_CHANGE_THRESHOLD_MAXIMUM),Math.min(Math.round(Pt.MAX_THRESHOLD_COEFF/t.force),Pt.MAX_STATE_CHANGE_THRESHOLD_MAXIMUM)],this._currentThreshold=this._maxStateChangeThreshold[this._isForwardMovement?1:0]}set isForwardMovement(t){this._isResidualMovement=!1,this._isForwardMovement!==t&&(this._isForwardMovement=t,this._currentThreshold=this._maxStateChangeThreshold[this._isForwardMovement?1:0])}setResidualMovement(){this._isResidualMovement=!0}changeState(t,e){this._counter++,this._counter>=this._currentThreshold&&(this._counter=0,this._state^=1,t.setSrc(this._state),e.setSrc(this._state),this._isResidualMovement?this._currentThreshold<this._maxStateChangeThreshold[this._isForwardMovement?1:0]&&this._currentThreshold++:this._currentThreshold>this._minStateChangeThreshold[this._isForwardMovement?1:0]&&this._currentThreshold--)}stopped(){this._currentThreshold=this._maxStateChangeThreshold[this._isForwardMovement?1:0]}}Pt.MIN_THRESHOLD_COEFF=17.5,Pt.MAX_THRESHOLD_COEFF=.5,Pt.MIN_STATE_CHANGE_THRESHOLD_MINIMUM=2,Pt.MAX_STATE_CHANGE_THRESHOLD_MAXIMUM=30;class It extends o{get isEnded(){return this._isEnded}constructor(t,e){super(t,e,5),this._animationStage=0,this._isEnded=!1,this._timer=0,this._sprite.src=`${It.DEFAULT_PATH}${this._animationStage}.png`}changeStage(t){this._timer+=t,this._timer>=It.UPDATE_TIMER_TIME&&(this._timer-=It.UPDATE_TIMER_TIME,this._animationStage++,this._animationStage<=It.MAX_STAGE?this._sprite.src=`${It.DEFAULT_PATH}${this._animationStage}.png`:this._isEnded=!0)}}It.DEFAULT_PATH="src/img/tanks/Effects/Sprites/Sprite_Effects_Smoke_",It.UPDATE_TIMER_TIME=60,It.MAX_STAGE=9;class St extends It{constructor(t,e){super(t,e),this._scaleX=-1}calcPosition(t,e,i){return new c(t.x+this.width*e+this.height*i,t.y-this.width*i+this.height*e)}}class Ct extends It{constructor(t,e,i){super(t,e),this._trackHeight=i}calcPosition(t,e,i){return new c(t.x-this._trackHeight*e+this.height*i,t.y+this._trackHeight*i+this.height*e)}}!function(t){t[t.rotLeft=-1]="rotLeft",t[t.rotStraight=0]="rotStraight",t[t.rotRight=1]="rotRight",t[t.rotNoRotate=2]="rotNoRotate"}(At||(At={}));class wt{constructor(t,e,i){this._delayedAngle=0,this._animationManager=t,this._width=e/4,this._height=e/5,this._trackHeight=i}detectRotateDirection(t){(t>=Math.PI/2&&t<=Math.PI&&this._delayedAngle>=-Math.PI&&this._delayedAngle<=-Math.PI/2||this._delayedAngle>=Math.PI/2&&this._delayedAngle<=Math.PI&&t>=-Math.PI&&t<=-Math.PI/2)&&(t=this._delayedAngle>=0?m(t,0,2*Math.PI):m(t,-2*Math.PI,0));const e=t-this._delayedAngle;return e<0&&Math.abs(e)>wt.UPDATE_SMOKE_DELTA_ANGLE?(this._delayedAngle=m(t,-Math.PI,Math.PI),At.rotLeft):e>0&&Math.abs(e)>wt.UPDATE_SMOKE_DELTA_ANGLE?(this._delayedAngle=m(t,-Math.PI,Math.PI),At.rotRight):At.rotNoRotate}setPosAndAngle(t,e){const i=Math.sin(e),s=Math.cos(e);N.rotateToDefaultSpritePoint(this._currAnimation,t,i,s),this._currAnimation.point=t,this._currAnimation.angle=e}addAnimation(){this._animationManager.add(this._currAnimation)}spawnTopSmoke(t,e,i,s){this._currAnimation=new St(this._width,this._height);let n=this._currAnimation.calcPosition(t,i,s);const r=e+1.5708;this.setPosAndAngle(n,r),this.addAnimation()}spawnBottomSmoke(t,e,i,s){this._currAnimation=new Ct(this._width,this._height,this._trackHeight);let n=this._currAnimation.calcPosition(t,i,s);const r=e+1.5708;this.setPosAndAngle(n,r),this.addAnimation()}}wt.UPDATE_SMOKE_DELTA_ANGLE=.113446;class vt{constructor(t,e,i){this._tankSpriteParts=t,this._tankTrackEffect=new Pt(e,i)}get tankSpriteParts(){return this._tankSpriteParts}get tankTrackEffect(){return this._tankTrackEffect}get tankTireTrack(){return this._tankTireTrack}spawnTankAcceleration(t,e,i){this._tankAcceleration=new yt(t,e,i)}removeAcceleration(){this._tankAcceleration.removeAcceleration()}spawnTireTracks(t,e,i,s){this._tankTireTrack=new Mt(t,this._tankSpriteParts.topTrackSprite,s);const n=Math.sin(i),r=Math.cos(i),{topFirstChainPoint:a,bottomFirstChainPoint:o}=this._tankTireTrack.calcFirstTopBottomChainPoints(this._tankSpriteParts,e,n,r);this._tankTireTrack.spawnFullTireTrack(a,o,i,n,r)}spawnDriftSmoke(t){this._tankDrift=new wt(t,this._tankSpriteParts.topTrackSprite.width,this._tankSpriteParts.topTrackSprite.height)}updateTireTrack(t,e,i,s){const{topFirstChainPoint:n,bottomFirstChainPoint:r}=this._tankTireTrack.calcFirstTopBottomChainPoints(this._tankSpriteParts,t,i,s),{topLastChainPoint:a,bottomLastChainPoint:o}=this._tankTireTrack.calcLastTopBottomChainPoints(this._tankSpriteParts,t,i,s),{isUpdate:h,prevPoint:l,currPoint:c}=this._tankTireTrack.checkForUpdate(n,r,a,o);if(h){this._tankTireTrack.updateAllChainPoints(n,r,a,o);switch(this._tankTireTrack.detectMovementDirection(l,c,e)){case pt.dirForward:this._tankTireTrack.forwardUpdate(n,r,e,i,s);break;case pt.dirRotate:this._tankTireTrack.createTireTrackPair(a,o,e,i,s);break;case pt.dirBackward:this._tankTireTrack.backwardUpdate(a,o,e,i,s)}}}updateDriftSmoke(t,e,i,s){let n=this._tankSpriteParts.hullSprite.calcPosition(t,i,s);n=this._tankSpriteParts.bottomTrackSprite.calcPosition(n,i,s);switch(this._tankDrift.detectRotateDirection(e)){case At.rotLeft:this._tankDrift.spawnTopSmoke(t,e,i,s);break;case At.rotRight:this._tankDrift.spawnBottomSmoke(n,e,i,s)}}updateForwardAction(t,e,i){this._tankTrackEffect.isForwardMovement=!0;const s=Math.sin(e),n=Math.cos(e),r=this._tankSpriteParts.hullSprite.calcPosition(t,s,n);this.updateSprite(t,e,i,s,n,r),this._tankAcceleration.setPosition(r,s,n,e),this.updateTireTrack(t,e,s,n),this.updateDriftSmoke(t,e,s,n)}updateBackwardAction(t,e,i){this._tankTrackEffect.isForwardMovement=!1;const s=Math.sin(e),n=Math.cos(e);this.defaultUpdate(t,e,i,s,n),this.updateTireTrack(t,e,s,n),this.updateDriftSmoke(t,e,s,n)}preUpdateAction(t,e,i){const s=Math.sin(e),n=Math.cos(e);this.updateTireTrack(t,e,s,n),this.updateDriftSmoke(t,e,s,n),this.defaultUpdate(t,e,i,s,n)}updateAfterAction(t,e,i){const s=Math.sin(e),n=Math.cos(e);this.defaultUpdate(t,e,i,s,n)}defaultUpdate(t,e,i,s,n){const r=this._tankSpriteParts.hullSprite.calcPosition(t,s,n);this.updateSprite(t,e,i,s,n,r)}rotateTurretUpdate(t,e,i,s){const n=Math.sin(e),r=Math.cos(e),a=this._tankSpriteParts.turretSprite,o=a.calcPosition(t,i,s),h=o.clone();N.rotateForTurretPoint(a,h,i,s,n,r),N.rotateToDefaultSpritePoint(a,o,i,s),N.setPosAndAngle(a,o,e);let l=this._tankSpriteParts.weaponSprite.calcPosition(h,n,r);N.updateSpritePart(this._tankSpriteParts.weaponSprite,l,n,r,e)}updateSprite(t,e,i,s,n,r){const a=this._tankSpriteParts.topTrackSprite,o=this._tankSpriteParts.bottomTrackSprite,h=this._tankSpriteParts.hullSprite;let l=a.calcPosition(t);N.updateSpritePart(a,l,s,n,e),l=h.calcPosition(t,s,n),N.updateSpritePart(h,l,s,n,e),l=o.calcPosition(r,s,n),N.updateSpritePart(o,l,s,n,e),this.rotateTurretUpdate(r,i,s,n),this._tankTrackEffect.changeState(a,o)}}class Lt{get health(){return 100}get armor(){return 100}get mass(){return 1}get armorStrength(){return 1}get num(){return 0}}class kt{constructor(){this._angularData={finishSpeed:.0175,force:.03},this._forwardData={finishSpeed:3,force:.03},this._backwardData={finishSpeed:2,force:.025}}get angularData(){return this._angularData}get forwardData(){return this._forwardData}get backwardData(){return this._backwardData}get num(){return 0}}class Ht{constructor(t,e,i,s){this._hull=t,this._track=e,this._turret=i,this._weapon=s}get hull(){return this._hull}get track(){return this._track}get turret(){return this._turret}get weapon(){return this._weapon}}class Dt{constructor(){}static create(t,e,i,s){const n=Dt.createTurret(i),r=Dt.createWeapon(s),a=Dt.createHull(t),o=Dt.createTrack(e);return new Ht(a,o,n,r)}static createHull(t){if(0===t)return new Lt;throw new Error(`Hull model ${t} was not found`)}static createTrack(t){if(0===t)return new kt;throw new Error(`Track model ${t} was not found`)}static createTurret(t){if(0===t)return new ut;throw new Error(`Turret model ${t} was not found`)}static createWeapon(t){if(0===t)return new dt;throw new Error(`Weapon model ${t} was not found`)}}class Rt extends o{get accelerationEffectIndentX(){return this._accelerationEffectIndentX}constructor(e,i){super(t.HULL_WIDTH[i],t.HULL_HEIGHT[i],4),this._accelerationEffectIndentX=t.ACCELERATION_EFFECT_INDENT_X[i],this._sprite.src=`src/img/tanks/Hulls/Hull_${i}/Hull_${e}.png`}calcPosition(e,i,s){return new c(e.x-t.TRACK_INDENT*i,e.y+t.TRACK_INDENT*s)}}class xt extends o{static calcHeight(t){return xt.PROPORTION_WIDTH_HEIGHT*t}get num(){return this._num}constructor(e,i,s){super(i+t.TRACK_INDENT,s,3),this._num=e,this._srcState0=`src/img/tanks/Tracks/Track_${e}_A.png`,this._srcState1=`src/img/tanks/Tracks/Track_${e}_B.png`,this._sprite.src=this._srcState0}setSrc(t){this._sprite.src=0===t?this._srcState0:this._srcState1}}xt.PROPORTION_WIDTH_HEIGHT=42/246;class Nt extends xt{constructor(t,e){super(t,e,xt.calcHeight(e))}calcPosition(t){return t.clone()}}class Ut extends xt{constructor(e,i,s){const n=xt.calcHeight(i);super(e,i,n),this._deltaHeight=s+t.TRACK_INDENT-n}calcPosition(t,e,i){return new c(t.x-this._deltaHeight*e,t.y+this._deltaHeight*i)}}class Ft extends o{constructor(e,i,s,n){super(t.TURRET_WIDTH[i],t.TURRET_HEIGHT[i],5),this._sprite.src=`src/img/tanks/Turrets/Turret_${i}/Turret_${e}.png`,this._indentX=s,this._indentY=n}calcPosition(t,e,i){return new c(t.x+this._indentX*i-this._indentY*e,t.y+this._indentY*i+this._indentX*e)}}class Ot extends o{constructor(e,i,s){super(t.WEAPON_WIDTH[e],t.WEAPON_HEIGHT[e],5),this._sprite.src=`src/img/tanks/Weapons/Weapon_${e}.png`,this._indentX=i,this._indentY=s}calcPosition(t,e,i){return new c(t.x+this._indentX*i-this._indentY*e,t.y+this._indentY*i+this._indentX*e)}}class bt{constructor(t,e,i,s,n){this._hullSprite=t,this._bottomTrackSprite=e,this._topTrackSprite=i,this._turretSprite=s,this._weaponSprite=n}get hullSprite(){return this._hullSprite}get bottomTrackSprite(){return this._bottomTrackSprite}get topTrackSprite(){return this._topTrackSprite}get turretSprite(){return this._turretSprite}get weaponSprite(){return this._weaponSprite}}class Wt{constructor(){}static create(e,i,s,n,r){return new bt(new Rt(e,i),new Ut(s,t.HULL_WIDTH[i],t.HULL_HEIGHT[i]),new Nt(s,t.HULL_WIDTH[i]),new Ft(e,n,t.TURRET_INDENT_X[i],(t.HULL_HEIGHT[i]>>1)-(t.TURRET_HEIGHT[n]>>1)),new Ot(r,9*t.TURRET_WIDTH[n]/10,(t.TURRET_HEIGHT[n]>>1)-(t.WEAPON_HEIGHT[r]>>1)))}}class Gt{get model(){return this._model}get sprite(){return this._sprite}get id(){return this._id}get control(){return this._control}set control(t){this._control=t}constructor(e,i,s,n,r,a,o,h){this._control=h;const l=Dt.create(n,r,a,o),c=new R(e,t.HULL_WIDTH[n]+t.TRACK_INDENT,t.HULL_HEIGHT[n]+(t.TRACK_INDENT<<1),i,l.turret.mass+l.hull.mass+l.weapon.mass,y.tankId);this._model=new gt(l,c),this._id=c.id;const _=l.track;this._sprite=new vt(Wt.create(s,n,r,a,o),_.forwardData,_.backwardData)}spawn(t,e){const i=this._sprite.tankSpriteParts;t.insert(i.topTrackSprite),t.insert(i.bottomTrackSprite),t.insert(i.hullSprite),t.insert(i.weaponSprite),t.insert(i.turretSprite);const s=this._model.entity;e.insert(s),this._sprite.updateAfterAction(s.points[0],s.angle,this._model.turretAngle)}vanish(t,e){const i=this._sprite.tankSpriteParts;this._sprite.tankTireTrack.vanishFullTrack(),t.remove(i.topTrackSprite),t.remove(i.bottomTrackSprite),t.remove(i.hullSprite),t.remove(i.weaponSprite),t.remove(i.turretSprite),e.remove(this._model.entity)}}window.onmousedown=t=>console.log(`x = ${t.clientX}px, y = ${t.clientY}px`);const Bt=document.querySelector("#canvas");Bt.width=window.screen.width,Bt.height=window.screen.height,t.setResolutionResizeCoeff(Bt.width,Bt.height);const Vt=new class{constructor(t,e,i){this._handlingManagers=new Array,this._keyHandler=new D,this._size={width:e,height:i},this._canvas=new S(t,this._size),this._gameLoop=new ht(this._canvas),this._animationManager=new Q(this._canvas);const s=new C(0,0,e,i),n=new I(s),r=new Map,a=new Map,o=new Map,h=new H(s,n),l=new X(s,n),c=new at(s,n),_=new rt(o,this._canvas,c);this._tankHandlingManagers=new j(h,this._canvas,r,_,this._animationManager,this._keyHandler),this._wallHandlingManagers=new q(l,this._canvas,a),this._bulletHandlingManager=new nt(c,this._canvas,o,this._handlingManagers,this._animationManager),this._handlingManagers.push(this._tankHandlingManagers,this._wallHandlingManagers,this._bulletHandlingManager),this._gameLoop.render.add(...this._handlingManagers,this._animationManager)}get gameLoop(){return this._gameLoop}createField(t,e){this.setCoefficients(t),this.createBackgroundSprites(t),this.createWalls(e)}setCoefficients(t){for(const e of this._handlingManagers)e.movementManager.resistanceCoeff=r[t],e.movementManager.airResistanceCoeff=15e-7}createBackgroundSprites(t){d.fullFillBackground(t,this._size,this._canvas)}createWalls(t){this._wallHandlingManagers.add(V.createWallsAroundPerimeter(t,this._size));const e=new Array;e.push(V.createWall(new c(this._size.width>>1,this._size.height>>1),.79,2,0,!0)),e.push(V.createWall(new c(this._size.width>>2,this._size.height>>2),1,2,1,!0)),this._wallHandlingManagers.add(e)}addTankElements(...t){this._tankHandlingManagers.add(t)}}(Bt.getContext("2d"),Bt.width,Bt.height);Vt.createField(1,2);const Xt={forwardKey:87,backwardKey:83,hullClockwiseKey:68,hullCounterClockwiseKey:65,turretClockwiseKey:86,turretCounterClockwiseKey:67,shootKey:66},Kt=new Gt(new c(300,300),0,0,0,0,0,0,Xt),$t={forwardKey:38,backwardKey:40,hullClockwiseKey:39,hullCounterClockwiseKey:37,turretClockwiseKey:190,turretCounterClockwiseKey:188,shootKey:191},zt=new Gt(new c(450,450),0,1,0,0,0,0,$t);Vt.addTankElements(Kt,zt),Vt.gameLoop.start()})();