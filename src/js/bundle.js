(()=>{"use strict";const t=Math.PI/180,e=115,i=["Grass","Ground","Sandstone"],s=["Rect","Square"],r=[101,50],n=[50,50],a=[[4,2],[5.5,2.5],[7,3]],o=[.55,.7,.85],h=3e-4,l=[76,81,77,64,81,81,76,69],c=[49,62,49,41,69,56,48,41],_=[20,25,20,15,25,25,25,20],u=[43,50,36,36,29,36,43,29],d=[36,36,22,36,29,29,36,29],p=[47,49,40,43,50,36,43,36],g=[14,10,14,7,11,16,14,14],m=[],M=[],T=[4,10,0,0,4,4,0,0,0];class A{get width(){return this._width}get height(){return this._height}get sprite(){return this._sprite}constructor(t,e){this._width=t,this._height=e,this._sprite=new Image(t,e),this._sprite.classList.add("sprite")}setPosition(t){this._sprite.style.left=`${t.x}px`,this._sprite.style.top=`${t.y}px`}setAngle(t){this._sprite.style.transform=`rotate(${t}rad)`}remove(){this._sprite.remove()}}class S extends A{constructor(t){var s,r;super(e,e),this._sprite.src=`src/img/backgrounds/${i[t]}_${s=0,r=1,Math.floor(Math.random()*(r+1-s))+s}.png`,this._sprite.style.zIndex="1"}}class f{constructor(t,e){this._x=t,this._y=e}get x(){return this._x}set x(t){this._x=t}get y(){return this._y}set y(t){this._y=t}clone(){return new f(this._x,this._y)}addToCoordinates(t,e){this._x+=t,this._y+=e}}class y extends f{get length(){return Math.sqrt(this.x*this.x+this.y*this.y)}normalize(){const t=this.length;this._x/=t,this._y/=t}get angle(){return Math.atan2(this.y,this.x)}clone(){return new y(this.x,this.y)}addVector(t){this._x+=t._x,this._y+=t._y}scale(t){this._x*=t,this._y*=t}}class v extends y{constructor(t,e){super(t,e)}static create(t,e){const i=new v(t.y-e.y,e.x-t.x);return i.normalize(),i}clone(){return new v(this._x,this._y)}}class k{constructor(){}static fullFillBackground(t,i,s,r){for(let n=0;n<i;n+=e)for(let i=0;i<s;i+=e)r.push(this.addBackgroundTile(new f(n,i),t))}static addBackgroundTile(t,e){const i=new S(e);return i.setPosition(t),i}}class C{constructor(){}static dotProduct(t,e){return t.x*e.x+t.y*e.y}static crossProduct(t,e){return t.x*e.y-t.y*e.x}static add(t,e){return new y(t.x+e.x,t.y+e.y)}static subtract(t,e){return new y(t.x-e.x,t.y-e.y)}static scale(t,e){return new y(t.x*e,t.y*e)}}class P{constructor(){}static add(t,e){return new f(t.x+e.x,t.y+e.y)}static subtract(t,e){return new f(t.x-e.x,t.y-e.y)}static scale(t,e){return new f(t.x*e,t.y*e)}}class w{constructor(){}static hasCollision(t,e){const i=[...w.getAxes(t),...w.getAxes(e)];for(const s of i){const i=w.getProject(t,s),r=w.getProject(e,s);if(Math.min(i.max-r.min,r.max-i.min)<=0)return!1}return!0}static getCollisionResult(t,e){const i=[...w.getAxes(t),...w.getAxes(e)];let s,r=Number.MAX_VALUE;for(const n of i){const i=w.getProject(t,n),a=w.getProject(e,n),o=Math.min(i.max-a.min,a.max-i.min);if(o<=0)return null;o<r&&(r=o,s=n)}return{collisionPoint:w.findClosestVertex(t,e,s),overlap:r}}static findClosestVertex(t,e,i){let s=Number.MAX_VALUE,r=new f(0,0);function n(t,e){for(const n of e){const e=Math.abs(C.dotProduct(P.subtract(n,t),i));Math.abs(e-s)<w.EPSILON?r=new f((r.x+n.x)/2,(r.y+n.y)/2):e<s&&(s=e,r=n)}}return n(t.calcCenter(),e.points),n(e.calcCenter(),t.points),r}static getAxes(t){const e=new Array,i=t.points.length-1;for(let s=0;s<i;s++)e.push(v.create(t.points[s],t.points[s+1]));return e.push(v.create(t.points[i],t.points[0])),e}static getProject(t,e){let i=C.dotProduct(e,t.points[0]),s=i;for(let r=1;r<t.points.length;r++){const n=C.dotProduct(e,t.points[r]);n<i?i=n:n>s&&(s=n)}return{min:i,max:s}}}function E(t,e){const i=e.x-t.x,s=e.y-t.y;return Math.sqrt(i*i+s*s)}function I(t,e=0,i=2*Math.PI){for(;t<e;)t+=i-e;for(;t>=i;)t-=i-e;return t}function L(t){return t>Math.PI/2&&t<3*Math.PI/2}function x(t,e){return I(t-e)}w.EPSILON=1;class D{constructor(){}static resolveCollision(t,e){const i=w.getCollisionResult(t,e);if(null===i)return;const s=this.calcCollisionNormal(i.collisionPoint,t.calcCenter()),r=this.calsImpulseMagnitude(t,e,s);this.separateEntities(t,i.overlap,s),this.updateAngularVelocity(t,e,i.collisionPoint,r,s),this.updateVelocity(t,e,r,s)}static updateAngularVelocity(t,e,i,s,r){const n=this.calcEntityNormal(t),a=C.subtract(i,e.calcCenter()),o=C.subtract(i,t.calcCenter()),h=C.crossProduct(a,r)*s,l=C.crossProduct(o,n)*s,c=h/e.momentOfInertia;let _=l/t.momentOfInertia;this.shouldReverseReceiving(e.angle,n.angle)&&(_=-_),Math.abs(_+t.angularVelocity)<this.SMALL_ANGULAR_IMPULSE&&Math.abs(_)>this.ORTHOGONAL_IMPULSE&&(_=1===Math.sign(_)?this.SMALL_ANGULAR_IMPULSE:-this.SMALL_ANGULAR_IMPULSE),e.angularVelocity+=c,t.angularVelocity+=_}static shouldReverseReceiving(t,e){const i=I(t-e,0,Math.PI);return i<Math.PI/2&&i>Math.PI/4||i>=Math.PI/2&&i<3*Math.PI/4}static calcEntityNormal(t){const e=t.angle;return L(x(e,t.velocity.angle))?new y(-Math.cos(e),-Math.sin(e)):new y(Math.cos(e),Math.sin(e))}static updateVelocity(t,e,i,s){const r=C.scale(s,-i/t.mass),n=C.scale(s,i/e.mass);t.velocity.addVector(r),e.velocity.addVector(n)}static separateEntities(t,e,i){let s=-i.x*e,r=-i.y*e;s+=1===Math.sign(s)?this.CORRECTION_FACTOR:-this.CORRECTION_FACTOR,r+=1===Math.sign(r)?this.CORRECTION_FACTOR:-this.CORRECTION_FACTOR;for(const e of t.points)e.addToCoordinates(s,r)}static calsImpulseMagnitude(t,e,i){const s=C.subtract(t.velocity,e.velocity);return 2*C.dotProduct(s,i)/(1/t.mass+1/e.mass)*this.COEFFICIENT_OF_RESTITUTION}static calcCollisionNormal(t,e){const i=C.subtract(t,e);return i.normalize(),i}}D.COEFFICIENT_OF_RESTITUTION=.6,D.CORRECTION_FACTOR=.55,D.SMALL_ANGULAR_IMPULSE=.004,D.ORTHOGONAL_IMPULSE=1e-4;class R{constructor(){}static isTank(t){return t>=R.STARTING_TANK_ID&&t<=R.ENDING_TANK_ID}static isWall(t){return t>=R.STARTING_WALL_ID&&t<=R.ENDING_WALL_ID}static isBullet(t){return t>=R.STARTING_BULLET_ID&&t<=R.ENDING_BULLET_ID}static get tankId(){if(R.TANK_ID>R.ENDING_TANK_ID)throw new Error("Maximum tank ID is reached");return R.TANK_ID++}static get wallId(){if(R.WALL_ID>R.ENDING_WALL_ID)throw new Error("Maximum wall ID is reached");return R.WALL_ID++}static get bulletId(){return R.BULLET_ID>R.ENDING_BULLET_ID&&(R.BULLET_ID=R.STARTING_BULLET_ID),R.BULLET_ID++}}R.STARTING_TANK_ID=0,R.ENDING_TANK_ID=R.STARTING_TANK_ID+42424242424242,R.STARTING_WALL_ID=R.ENDING_TANK_ID+1,R.ENDING_WALL_ID=R.STARTING_WALL_ID+42424242424242,R.STARTING_BULLET_ID=R.ENDING_WALL_ID+1,R.ENDING_BULLET_ID=R.STARTING_BULLET_ID+42424242424242,R.TANK_ID=R.STARTING_TANK_ID,R.WALL_ID=R.STARTING_WALL_ID,R.BULLET_ID=R.STARTING_BULLET_ID;class N{constructor(){this._idForProcessing=new Array}hasForProcessing(){return 0!==this._idForProcessing.length}clear(){this._idForProcessing.length=0}push(t){this._idForProcessing.push(t)}get iterable(){return this._idForProcessing}}class b{get wallsForProcessing(){return this._wallsForProcessing}constructor(t){this._wallsForProcessing=new N,this._collisionDetection=t}hasCollision(t){const e=this._collisionDetection.getCollisions(t);let i=!1;for(const s of e)D.resolveCollision(t,s),this.processCollision(s),i=!0;return i?e:null}processCollision(t){R.isWall(t.id)&&this._wallsForProcessing.push(t.id)}}class F{constructor(t,e,i){this._canvas=t,this._width=e,this._height=i}get canvas(){return this._canvas}get width(){return this._width}get height(){return this._height}}class O{constructor(t,e,i,s){this._boundary={xStart:t,yStart:e,xLast:i,yLast:s},this._root=new U(this._boundary)}insert(t){this._root.insert(t)}getCollisions(t){return this._root.getCollisions(t)}remove(t){this._root.remove(t)}clear(){this._root=new U(this._boundary)}}class U{constructor(t){this._totalEntities=0,this._entities=new Map,this._children=null,this._boundary=t}isSubdivide(){return null===this._entities}subdivide(){const t=this._boundary.xStart,e=this._boundary.yStart,i=this._boundary.xLast,s=this._boundary.yLast,r=(i-t)/2,n=(s-e)/2;this._children=[new U({xStart:t,yStart:e,xLast:t+r,yLast:e+n}),new U({xStart:t+r,yStart:e,xLast:i,yLast:e+n}),new U({xStart:t,yStart:e+n,xLast:t+r,yLast:s}),new U({xStart:t+r,yStart:e+n,xLast:i,yLast:s})],this.redistribute()}redistribute(){this._totalEntities=0;for(const t of this._children){for(const e of this._entities.values())t.insert(e);this._totalEntities+=t._totalEntities}this._entities=null}insert(t){if(this.isContainsEntity(t))if(this.isSubdivide()){this._totalEntities=0;for(const e of this._children)e.insert(t),this._totalEntities+=e._totalEntities}else this._totalEntities++,this._entities.set(t.id,t),this._entities.size>U.CAPACITY&&this.subdivide()}remove(t){if(this.isContainsEntity(t))if(this.isSubdivide()){this._totalEntities=0;for(const e of this._children)e.remove(t),this._totalEntities+=e._totalEntities;this._totalEntities<=U.HALF_CAPACITY&&this.mergeWithChildren()}else this._totalEntities--,this._entities.delete(t.id)}getCollisions(t){const e=new Array;if(this.isSubdivide())for(const i of this._children)i.isContainsEntity(t)&&e.push(...i.getCollisions(t));else for(const i of this._entities.values())w.hasCollision(t,i)&&e.push(i);return e}isContainsEntity(t){for(const e of t.points)if(this.isContainsPoint(e))return!0;return!1}isContainsPoint(t){return t.x>this._boundary.xStart&&t.x<this._boundary.xLast&&t.y>this._boundary.yStart&&t.y<this._boundary.yLast}mergeWithChildren(){this._entities=new Map;for(const t of this._children){t.isSubdivide()&&t.mergeWithChildren();for(const e of t._entities.values())this._entities.set(e.id,e)}this._totalEntities=this._entities.size,this._children=null}}U.CAPACITY=8,U.HALF_CAPACITY=U.CAPACITY>>1;class H{set resistanceCoeff(t){this._resistanceCoeff=t}set airResistanceCoeff(t){this._airResistanceCoeff=t}constructor(t,e){this._resistanceCoeff=0,this._airResistanceCoeff=0,this._entityStorage=t,this._collisionManager=e}get entityStorage(){return this._entityStorage}get collisionManager(){return this._collisionManager}}class K extends H{residualMovement(t){const e=t.sprite;t.model.isIdle()?(e.tankTrackEffect.stopped(),e.tankTrackEffect.stopped()):(e.tankTrackEffect.setResidualMovement(),e.tankTrackEffect.setResidualMovement(),this.hullUpdate(t,t.model.residualMovement,t.sprite.preUpdateAction))}residualAngularMovement(t){t.model.isAngularMotionStopped()||this.hullUpdate(t,t.model.residualAngularMovement,t.sprite.preUpdateAction)}turretCounterclockwiseMovement(t){t.model.turretCounterclockwiseMovement(),K.turretUpdate(t)}turretClockwiseMovement(t){t.model.turretClockwiseMovement(),K.turretUpdate(t)}hullCounterclockwiseMovement(t){this.hullUpdate(t,t.model.hullCounterclockwiseMovement,t.sprite.preUpdateAction)}hullClockwiseMovement(t){this.hullUpdate(t,t.model.hullClockwiseMovement,t.sprite.preUpdateAction)}forwardMovement(t){this.hullUpdate(t,t.model.forwardMovement,t.sprite.updateForwardAction)}backwardMovement(t){this.hullUpdate(t,t.model.backwardMovement,t.sprite.updateBackwardAction)}hullUpdate(t,e,i){const s=t.model.entity;this._entityStorage.remove(s),e.call(t.model,this._resistanceCoeff,this._airResistanceCoeff),this._collisionManager.hasCollision(s)&&t.sprite.removeAcceleration(),i.call(t.sprite,s.points[0],s.angle,t.model.turretAngle),this._entityStorage.insert(s)}static turretUpdate(t){const e=t.model,i=e.entity.angle,s=Math.sin(i),r=Math.cos(i);t.sprite.rotateTurretUpdate(t.sprite.tankSpriteParts.hullSprite.calcPosition(e.entity.points[0],s,r),e.turretAngle,s,r)}}class W{constructor(){this._keysMask=0,document.addEventListener("keydown",this.handleKeyDown.bind(this)),document.addEventListener("keyup",this.handleKeyUp.bind(this))}clearMask(){this._keysMask=0}get keysMask(){return this._keysMask}handleKeyDown(t){this._keysMask|=W.getMask(t.keyCode)}handleKeyUp(t){this._keysMask&=~W.getMask(t.keyCode)}static getMask(t){switch(t){case 65:return W.A_MASK;case 66:return W.B_MASK;case 67:return W.C_MASK;case 68:return W.D_MASK;case 69:return W.E_MASK;case 70:return W.F_MASK;case 71:return W.G_MASK;case 72:return W.H_MASK;case 73:return W.I_MASK;case 74:return W.J_MASK;case 75:return W.K_MASK;case 76:return W.L_MASK;case 77:return W.M_MASK;case 78:return W.N_MASK;case 79:return W.O_MASK;case 80:return W.P_MASK;case 81:return W.Q_MASK;case 82:return W.R_MASK;case 83:return W.S_MASK;case 84:return W.T_MASK;case 85:return W.U_MASK;case 86:return W.V_MASK;case 87:return W.W_MASK;case 88:return W.X_MASK;case 89:return W.Y_MASK;case 191:return W.SLASH_MASK;case 190:return W.PERIOD_MASK;case 188:return W.COMMA_MASK;case 38:return W.UP_MASK;case 40:return W.DOWN_MASK;case 37:return W.LEFT_MASK;case 39:return W.RIGHT_MASK;default:return 0}}}W.A_MASK=1,W.B_MASK=2,W.C_MASK=4,W.D_MASK=8,W.E_MASK=16,W.F_MASK=32,W.G_MASK=64,W.H_MASK=128,W.I_MASK=256,W.J_MASK=512,W.K_MASK=1024,W.L_MASK=2048,W.M_MASK=4096,W.N_MASK=8192,W.O_MASK=16384,W.P_MASK=32768,W.Q_MASK=65536,W.R_MASK=1<<17,W.S_MASK=1<<18,W.T_MASK=1<<19,W.U_MASK=1<<20,W.V_MASK=1<<21,W.W_MASK=1<<22,W.X_MASK=1<<23,W.Y_MASK=1<<24,W.SLASH_MASK=1<<25,W.PERIOD_MASK=1<<26,W.COMMA_MASK=1<<27,W.UP_MASK=1<<28,W.DOWN_MASK=1<<29,W.RIGHT_MASK=1<<30,W.LEFT_MASK=1<<31;class G{constructor(){}static rotatePointAroundTarget(t,e,i,s){const r=t.x-e.x,n=t.y-e.y;t.x=e.x+r*s-n*i,t.y=e.y+r*i+n*s}static rotatePoint(t,e,i){const s=t.x,r=t.y;t.x=s*i-r*e,t.y=s*e+r*i}}class B{constructor(){}static movement(t){for(const e of t.points)e.addToCoordinates(t.velocity.x,t.velocity.y)}static angularMovement(t){B.rotateEntity(t,t.angularVelocity)}static rotateEntity(t,e){const i=Math.sin(e),s=Math.cos(e),r=t.calcCenter();for(const e of t.points)G.rotatePointAroundTarget(e,r,i,s);G.rotatePoint(t.velocity,i,s)}}class V{constructor(t,e,i,s,r,n){this._angularVelocity=0,this._velocity=new y(0,0);const a=e*e+i*i;this._radiusLength=.5*Math.sqrt(a),this._momentOfInertia=1/12*r*a*3.75,this._mass=r,this._id=n,this._points=[t.clone(),new f(t.x+e,t.y),new f(t.x+e,t.y+i),new f(t.x,t.y+i)],0!==s&&B.rotateEntity(this,s)}get velocity(){return this._velocity}get angle(){return Math.atan2(this._points[1].y-this._points[0].y,this._points[1].x-this._points[0].x)}get points(){return this._points}get mass(){return this._mass}get angularVelocity(){return this._angularVelocity}set angularVelocity(t){this._angularVelocity=t}get id(){return this._id}get radiusLength(){return this._radiusLength}get momentOfInertia(){return this._momentOfInertia}calcCenter(){return new f((this._points[0].x+this._points[2].x)/2,(this._points[0].y+this._points[2].y)/2)}}class ${constructor(t,e){this._model=t,this._sprite=e,this._id=t.entity.id}get model(){return this._model}get sprite(){return this._sprite}get id(){return this._id}spawn(t,e){t.appendChild(this._sprite.sprite),e.insert(this._model.entity)}}class X{constructor(){}static rotateToDefaultSpritePoint(t,e,i,s){const r=t.width>>1,n=t.height>>1;G.rotatePointAroundTarget(e,new f(e.x+r*s-n*i,e.y+n*s+r*i),-i,s)}static rotateToActualSpritePoint(t,e,i,s){const r=t.width>>1,n=t.height>>1;G.rotatePointAroundTarget(e,new f(e.x+r,e.y+n),i,s)}static updateSpritePart(t,e,i,s,r){X.rotateToDefaultSpritePoint(t,e,i,s),X.setPosAndAngle(t,e,r)}static setPosAndAngle(t,e,i){t.setPosition(e),t.setAngle(i)}static rotateForTurretPoint(t,e,i,s,r,n){const a=t.width>>1,o=t.height>>1;G.rotatePointAroundTarget(e,new f(e.x+a*s-o*i,e.y+o*s+a*i),r*s-n*i,s*n+i*r)}}class Y extends A{constructor(t,e){super(r[e],n[e]),this._sprite.src=`src/img/blocks/${i[t]}_${s[e]}.png`,this._sprite.style.zIndex="2"}updateAfterAction(t,e){t=t.clone(),X.rotateToDefaultSpritePoint(this,t,Math.sin(e),Math.cos(e)),X.setPosAndAngle(this,t,e)}}class z{constructor(t){this._entity=t}get entity(){return this._entity}isIdle(){return 0===this._entity.velocity.length}isAngularMotionStopped(){return 0===this._entity.angularVelocity}residualMovement(t,e){const i=this._entity,s=this.calcAcceleration(0,t,e,i.velocity.length),r=i.velocity.angle;this.applyVelocityChange(s,r),B.movement(i)}residualAngularMovement(t,e){const i=this._entity,s=this.calcAcceleration(0,t,e,i.angularVelocity)/i.radiusLength,r=i.angularVelocity;r>0?i.angularVelocity+=r+s<0?-r:s:i.angularVelocity-=r+s>0?-r:s,B.angularMovement(i)}calcAcceleration(t,e,i,s){return(t-e*this._entity.mass*.01-i*s*s)/this._entity.mass}applyVelocityChange(t,e){const i=this._entity,s=Math.sign(i.velocity.x),r=Math.sign(i.velocity.y);i.velocity.addToCoordinates(t*Math.cos(e),t*Math.sin(e)),s!==Math.sign(i.velocity.x)&&(i.velocity.x=0),r!==Math.sign(i.velocity.y)&&(i.velocity.y=0)}}class j extends z{constructor(t){super(t),this._health=1/0}takeDamage(t){this._health-=t.damage}get health(){return this._health}}class Q{constructor(){}static createWallsAroundPerimeter(t,e,i){const s=new Array,r=this.calcIndent(e),a=this.calcIndent(i-(n[this.RECT_NUM]<<1));return this.createHorWalls(t,r,a,e,i,s),this.createVertWalls(t,r,a,e,i,s),s}static calcIndent(t){const e=t-(this.INDENT<<1);return(e-r[this.RECT_NUM]*Math.floor(e/r[this.RECT_NUM])>>1)+this.INDENT}static createHorWalls(t,e,i,s,a,o){for(let h=e;h<=s-e-r[this.RECT_NUM];h+=r[this.RECT_NUM])o.push(this.createWall(new f(h,i),0,t,this.RECT_NUM)),o.push(this.createWall(new f(h,a-n[this.RECT_NUM]-i),0,t,this.RECT_NUM))}static createVertWalls(t,e,i,s,a,o){for(let h=i+n[this.RECT_NUM]+(n[this.RECT_NUM]>>1);h<=a-i-r[this.RECT_NUM];h+=r[this.RECT_NUM])o.push(this.createWall(new f(e-(n[this.RECT_NUM]>>1),h),this.RAD_90,t,this.RECT_NUM)),o.push(this.createWall(new f(s-e-r[this.RECT_NUM]+(n[this.RECT_NUM]>>1),h),this.RAD_90,t,this.RECT_NUM))}static createWall(t,e,i,s,o=!1){const h=o?a[i][s]:1/0,l=new j(new V(t,r[s],n[s],e,h,R.wallId)),c=new Y(i,s);return c.setPosition(t),c.setAngle(e),new $(l,c)}}Q.INDENT=10,Q.RAD_90=90*Math.PI/180,Q.RECT_NUM=0;class q extends H{residualAngularMovement(t){t.model.isAngularMotionStopped()||this.update(t,t.model.residualAngularMovement)}residualMovement(t){t.model.isIdle()||this.update(t,t.model.residualMovement)}update(t,e){const i=t.model.entity;this._entityStorage.remove(i),e.call(t.model,this._resistanceCoeff,this._airResistanceCoeff),this._collisionManager.hasCollision(i),t.sprite.updateAfterAction(i.points[0],i.angle),this._entityStorage.insert(i)}hasAnyResidualMovement(t){return!t.model.isAngularMotionStopped()||!t.model.isIdle()}movement(t){this.residualAngularMovement(t),this.residualMovement(t)}}class Z{constructor(t,e,i){this._movementManager=t,this._field=e,this._elements=i}get movementManager(){return this._movementManager}add(t){for(const e of t)this._elements.has(e.id)||(this._elements.set(e.id,e),e.spawn(this._field.canvas,this._movementManager.entityStorage))}}class J{get value(){return this._value}get prev(){return this._prev}get next(){return this._next}set next(t){this._next=t}set prev(t){this._prev=t}constructor(t){this._prev=null,this._next=null,this._value=t}remove(){null!==this._prev&&(this._prev.next=this._next),null!==this._next&&(this._next.prev=this._prev),this._prev=null,this._next=null}}class tt{constructor(){this._tail=null,this._head=null,this._length=0}get head(){return null!==this._head?this._head.value:null}get tail(){return null!==this._tail?this._tail.value:null}get length(){return this._length}*[Symbol.iterator](){let t=this._head;for(let e=this._length;e>0;e--)yield t.value,t=t.next}applyAndRemove(t,e){let i=this._head;for(;null!==i;)if(t(i.value),e(i.value))i=i.next;else{const t=i;i=i.next,this.removeNode(t)}}isEmpty(){return 0===this._length}remove(t){let e=this._head;for(;null!==e;){if(e.value===t)return void this.removeNode(e);e=e.next}}removeNode(t){t===this._tail&&(this._tail=t.prev),t===this._head&&(this._head=t.next),this._length--,t.remove()}addToHead(t){const e=new J(t);null===this._head?(this._tail=e,this._head=e):(e.next=this._head,this._head.prev=e,this._head=e),this._length++}addToTail(t){const e=new J(t);null===this._tail?(this._tail=e,this._head=e):(e.prev=this._tail,this._tail.next=e,this._tail=e),this._length++}removeFromTail(){this._tail===this._head?this.clear():(this._tail=this._tail.prev,this._tail.next=null,this._length--)}removeFromHead(){this._tail===this._head?this.clear():(this._head=this._head.next,this._head.prev=null,this._length--)}moveToTail(t){let e=this._tail;for(;null!==e;){if(e.value===t){if(e!==this._tail){const t=e.prev,i=e.next;null!==t&&(t.next=i),null!==i&&(i.prev=t),e.next=null,e.prev=this._tail,this._tail.next=e,this._tail=e}return}e=e.prev}}moveToHead(t){let e=this._head;for(;null!==e;){if(e.value===t){if(e!==this._head){const t=e.prev,i=e.next;null!==t&&(t.next=i),null!==i&&(i.prev=t),e.next=this._head,e.prev=null,this._head.prev=e,this._head=e}return}e=e.next}}clear(){this._tail=this._head=null,this._length=0}}class et{constructor(){this._vanishingListOfTirePairs=new tt,this.tanksAmount=0}get vanishingListOfTirePairs(){return this.tanksAmount++,this._vanishingListOfTirePairs}removeTireTrackPair(t){t.topTire.remove(),t.bottomTire.remove()}reduceOpacity(){let t=0;for(const e of this._vanishingListOfTirePairs){const i=this._vanishingListOfTirePairs.length*et.MIN_REDUCING_OPACITY_NUMBER/this.tanksAmount;e.topTire.reduceOpacity(i),e.topTire.setOpacity(),e.bottomTire.reduceOpacity(i),e.bottomTire.setOpacity(),e.topTire.isVanished()&&t++}for(;t>0;t--)this.removeTireTrackPair(this._vanishingListOfTirePairs.tail),this._vanishingListOfTirePairs.removeFromTail()}}et.MIN_REDUCING_OPACITY_NUMBER=1e-4;class it extends Z{constructor(t,e,i,s){super(t,e,i),this._tireTracksManager=new et,this._addBulletElement=s}handle(t){this._tireTracksManager.reduceOpacity();for(const e of this._elements.values()){const i=e.control;let s=0!=(t&i.turretClockwiseMask),r=0!=(t&i.turretCounterClockwiseMask);if((s&&!r||!s&&r)&&(s?this._movementManager.turretClockwiseMovement(e):r&&this._movementManager.turretCounterclockwiseMovement(e)),s=0!=(t&i.forwardMask),r=0!=(t&i.backwardMask),s&&!r||!s&&r?s?this._movementManager.forwardMovement(e):r&&(e.sprite.removeAcceleration(),this._movementManager.backwardMovement(e)):(e.sprite.removeAcceleration(),this._movementManager.residualMovement(e)),s=0!=(t&i.hullClockwiseMask),r=0!=(t&i.hullCounterClockwiseMask),s&&!r||!s&&r?s?this._movementManager.hullClockwiseMovement(e):r&&this._movementManager.hullCounterclockwiseMovement(e):this._movementManager.residualAngularMovement(e),s=0!=(t&i.shoot),s){const t=e.model.shot();t&&this._addBulletElement.addBulletModel(t,e.model.bulletNum)}}}add(t){super.add(t);for(const e of t){const t=e.sprite,i=e.model.entity;t.spawnTireTracks(this._field.canvas,i.points[0],i.angle,this._tireTracksManager.vanishingListOfTirePairs);const s=t.tankSpriteParts.hullSprite;t.spawnTankAcceleration(this._field.canvas,s.accelerationEffectIndentX,s.height)}}}class st extends Z{constructor(){super(...arguments),this._wallToProcess=new tt}addToProcess(){const t=this._movementManager.collisionManager.wallsForProcessing;if(t.hasForProcessing()){for(const e of t.iterable)this._wallToProcess.addToTail(this._elements.get(e));t.clear()}}handle(){this.addToProcess(),this._wallToProcess.isEmpty()||this._wallToProcess.applyAndRemove(this._movementManager.movement.bind(this._movementManager),this._movementManager.hasAnyResidualMovement.bind(this._movementManager))}}class rt{constructor(){this._animationList=new tt}add(t){this._animationList.addToTail(t)}handle(){this._animationList.isEmpty()||this._animationList.applyAndRemove((t=>t.changeStage()),(t=>!t.isEnded))}}class nt{constructor(t,e){this._model=t,this._sprite=e,this._id=t.entity.id}get id(){return this._id}get model(){return this._model}get sprite(){return this._sprite}spawn(t,e){t.appendChild(this._sprite.sprite),e.insert(this._model.entity)}}class at extends A{constructor(t){super(m[t],M[t]),this._sprite.src=`src/img/tanks/Bullet_${t}.png`,this._sprite.style.zIndex="4"}updateAfterAction(t,e){t=t.clone(),X.rotateToDefaultSpritePoint(this,t,Math.sin(e),Math.cos(e)),X.setPosAndAngle(this,t,e)}}class ot extends Z{constructor(t,e,i,s,r){super(t,e,i),this._bulletToProcess=new tt,this._tankElements=s,this._wallElements=r}handle(){this._bulletToProcess.isEmpty()||this._bulletToProcess.applyAndRemove(this._movementManager.movement.bind(this._movementManager),this._movementManager.hasResidualMovement.bind(this._movementManager)),this._movementManager.bulletAndModelIDs.hasForProcessing()&&this.handleBulletCollisions()}addBulletModel(t,e){if(!this._elements.has(t.entity.id)){const i=new nt(t,new at(e));this._elements.set(i.id,i),i.spawn(this._field.canvas,this._movementManager.entityStorage)}}handleBulletCollisions(){for(const t of this._movementManager.bulletAndModelIDs.iterable)for(const e of t.elementsIds)this.getElement(e).model.takeDamage(t.bulletElement.model);this._movementManager.bulletAndModelIDs.clear()}getElement(t){return R.isWall(t)?this._wallElements.get(t):R.isTank(t)?this._tankElements.get(t):R.isBullet(t)?this._elements.get(t):void 0}}class ht extends H{constructor(){super(...arguments),this._bulletAndModelIDs=new N}get bulletAndModelIDs(){return this._bulletAndModelIDs}hasResidualMovement(t){return!t.model.isIdle()}movement(t){t.model.isIdle()||this.update(t)}update(t){const e=t.model.entity;this._entityStorage.remove(e),t.model.residualMovement(this._resistanceCoeff,this._airResistanceCoeff);const i=this._collisionManager.hasCollision(e);if(i){const e=new Array;for(const t of i)e.push(t.id);this._bulletAndModelIDs.push({bulletElement:t,elementsIds:e})}t.sprite.updateAfterAction(e.points[0],e.angle),this._entityStorage.insert(e)}}class lt{constructor(){this._motionData={force:1,finishSpeed:20}}get motionData(){return this._motionData}get damage(){return 15}get armorPenetration(){return 5}get mass(){return 15e-7}get health(){return 1}get num(){return 0}}class ct extends z{constructor(t,e,i){super(e),this._health=t.health,this._motionData={force:t.motionData.force*i.forceCoeff,finishSpeed:t.motionData.finishSpeed*i.finishSpeedCoeff},this._damage=t.damage*i.damageCoeff,this._armorPenetration=t.armorPenetration*i.armorPenetrationCoeff}takeDamage(t){this._health-=t.damage}get health(){return this._health}get damage(){return this._damage}get armorPenetration(){return this._armorPenetration}}class _t{constructor(){}static create(t,e,i,s){const r=_t.createBullet(t);return new ct(r,new V(e,m[t],M[t],i,r.mass,R.bulletId),s)}static createBullet(t){if(0===t)return new lt;throw new Error(`Bullet model ${t} was not found`)}}class ut{get angleSpeed(){return.0125}get mass(){return.35}get bulletCapacity(){return 10}get num(){return 0}}class dt{get armorPenetrationCoeff(){return 1}get damageCoeff(){return 1}get forceCoeff(){return 1}get finishSpeedCoeff(){return 1}get reloadSpeed(){return 3e3}get mass(){return.15}get num(){return 0}}class pt extends z{constructor(t,e){super(e),this._bulletQuantity=0,this._bulletNum=0,this._isBraking=!1,this._isDrift=!1,this._tankParts=t,this._turretAngle=e.angle,this._lastTimeShot=Date.now(),this._health=t.hull.health,this._armorStrength=t.hull.armorStrength}takeDamage(t){this._armorStrength-=t.armorPenetration,this._armorStrength<0&&(this._armorStrength=0),this._health-=t.damage-this._tankParts.hull.armor*this._armorStrength}get turretAngle(){return this._turretAngle}get isDrift(){return this._isDrift}get health(){return this._health}get armor(){return this._tankParts.hull.armor}get armorStrength(){return this._armorStrength}get bulletNum(){return this._bulletNum}shot(){const t=Date.now();if(0===this._bulletQuantity||t-this._lastTimeShot<this._tankParts.weapon.reloadSpeed)return null;const e=_t.create(this._bulletNum,this.calcBulletExit(),this._turretAngle,this._tankParts.weapon);return this._lastTimeShot=t,this._bulletQuantity--,e}calcBulletExit(){const t=this._entity.calcCenter(),e=this._tankParts,i=(r=e.turret,u[r.num]/2+(s=e.weapon,g[s.num]));var s,r;const n=t.x+i*Math.cos(this._turretAngle),a=t.y+i*Math.sin(this._turretAngle);return new f(n,a)}incBulletQuantity(t){this._bulletQuantity=Math.min(this._bulletQuantity+t,this._tankParts.turret.bulletCapacity)}takeNewBullet(t){this._bulletNum=t}turretClockwiseMovement(){this._turretAngle+=this._tankParts.turret.angleSpeed}turretCounterclockwiseMovement(){this._turretAngle-=this._tankParts.turret.angleSpeed}incTurretAngle(t){this._turretAngle+=t}hullClockwiseMovement(t,e){const i=this._entity,s=this._tankParts.track.angularData;i.angularVelocity<s.finishSpeed&&(i.angularVelocity+=this.calcAcceleration(s.force,t,e,i.angularVelocity)/i.radiusLength),this.updateAngularVelocity(),B.angularMovement(i),this.incTurretAngle(i.angularVelocity)}hullCounterclockwiseMovement(t,e){const i=this._entity,s=this._tankParts.track.angularData;-i.angularVelocity<s.finishSpeed&&(i.angularVelocity-=this.calcAcceleration(s.force,t,e,i.angularVelocity)/i.radiusLength),this.updateAngularVelocity(),B.angularMovement(i),this.incTurretAngle(i.angularVelocity)}updateAngularVelocity(){if(this.isIdle())return;const t=this._entity,e=t.velocity;(this._isDrift||this._isBraking)&&this.incAngularVelocity(t,e),this._isBraking||this.decAngularVelocity(t,e)}incAngularVelocity(t,e){const i=this.calcCoeff(),s=1+e.length/(this._tankParts.track.forwardData.finishSpeed*i),r=1+t.mass/(10*i);t.angularVelocity*=r*s}calcCoeff(){let t=100;return this._isDrift&&(t-=25),this._isBraking&&(t-=5),t}decAngularVelocity(t,e){const i=1-e.length/(20*this._tankParts.track.forwardData.finishSpeed),s=1-t.mass/200;t.angularVelocity*=s*i,e.scale(s)}forwardMovement(t,e){this.movement(this._tankParts.track.forwardData,this._entity.angle,t,e)}backwardMovement(t,e){this.movement(this._tankParts.track.backwardData,this._entity.angle+Math.PI,t,e)}movement(t,e,i,s){const r=this._entity,n=r.velocity.length,a=0===n?e:r.velocity.angle,o=x(e,a);this.setBrakingStatus(o),pt.isStraightMovement(o)?(this._isDrift=!1,this.handleStraightMovement(t,i,s,n,a)):(this._isDrift=!pt.isReverseMovement(o),this._isDrift&&(this.determineDribbleSpeed(o),this.applyTurn(this.calcShortestTurn(o))),this.handleDriftMovement(t,i,s,n,o,a)),B.movement(r)}setBrakingStatus(t){this._isBraking=L(t)}calcShortestTurn(t){return this._isBraking&&(t=pt.adjustTurnForBraking(t)),t=pt.adjustTurnForRecovery(t)}static isStraightMovement(e){return e<=t||2*Math.PI-e<=t}static isReverseMovement(e){return Math.abs(e-Math.PI)<=t}handleStraightMovement(t,e,i,s,r){if(s<t.finishSpeed){const n=this.calcAcceleration(t.force,e,i,s);this._entity.velocity.addToCoordinates(n*Math.cos(r),n*Math.sin(r))}}handleDriftMovement(t,e,i,s,r,n){if(this._isBraking||s<t.finishSpeed){const a=this.calcAcceleration(t.force*Math.cos(r),e,i,s);this.applyVelocityChange(a,n)}}static adjustTurnForBraking(t){return I(t-Math.PI/2)}static adjustTurnForRecovery(t){const e=t-2*Math.PI;return t>Math.abs(e)?e:t}applyTurn(t){t*=pt.VELOCITY_RECOVERY_COEFF*this._entity.mass,G.rotatePoint(this._entity.velocity,Math.sin(t),Math.cos(t))}determineDribbleSpeed(t){const e=(Math.abs(Math.cos(t))-(i=0))/(1-i)*(1-(s=.95))+s;var i,s;this._entity.velocity.scale(e)}residualMovement(t,e){const i=x(this._entity.angle,this._entity.velocity.angle);(this._isDrift||!pt.isStraightMovement(i)&&!pt.isReverseMovement(i))&&(this._isDrift=!0,this.determineDribbleSpeed(i)),this._isBraking=!1,super.residualMovement(t,e)}residualAngularMovement(t,e){this.updateAngularVelocity(),super.residualAngularMovement(t,e),this.incTurretAngle(this._entity.angularVelocity)}}pt.VELOCITY_RECOVERY_COEFF=.017;class gt extends A{constructor(t,e,i){super(t,e),this._opacity=1,this._sprite.src=`src/img/tanks/Effects/Tire Tracks/Tire_Track_Chain_${i}.png`,this._sprite.style.zIndex="3"}isVanished(){return this._opacity<=0}reduceOpacity(t){this._opacity-=t}setOpacity(){this._sprite.style.opacity=`${this._opacity}`}}class mt extends A{constructor(t,e,i){super(t,e),this._opacity=1,this._sprite.src=`src/img/tanks/Effects/Tire Tracks/Tire_Track_${i}.png`,this._sprite.style.zIndex="3"}isVanished(){return this._opacity<=0}reduceOpacity(t){this._opacity-=t}setOpacity(){this._sprite.style.opacity=`${this._opacity}`}}class Mt{get chainWidth(){return this._chainWidth}constructor(t,e,i){this._listOfTirePairs=new tt,this._vanishingListOfTirePairs=i,this._canvas=t,this._trackWidth=e.width,this._trackHeight=e.height,this._trackType=e.num,this._chainWidth=this.calcWidthOfChain(),this._chainHeight=e.height,this._chainType=e.num%2}calcWidthOfChain(){return this._trackWidth/Mt.AMOUNT_OF_CHAINS}static calcPositionOfFirstChain(t,e,i,s,r){return new f(t.x+e*r-i*r,t.y+e*s-i*s)}moveToNextChain(t,e,i){t.x=t.x-this._chainWidth*i,t.y=t.y-this._chainWidth*e}vanishFullTrack(){for(const t of this._listOfTirePairs)this._vanishingListOfTirePairs.addToHead(this._listOfTirePairs.head),this._listOfTirePairs.removeFromHead()}static setAndPosTireTrackPair(t,e,i,s,r,n){const a=e.clone(),o=i.clone();X.rotateToDefaultSpritePoint(t.topTire,a,r,n),X.rotateToDefaultSpritePoint(t.bottomTire,o,r,n),X.setPosAndAngle(t.topTire,a,s),X.setPosAndAngle(t.bottomTire,o,s)}createTireTrackChainPair(t,e,i,s,r){const n={topTire:new gt(this._chainWidth,this._chainHeight,this._chainType),bottomTire:new gt(this._chainWidth,this._chainHeight,this._chainType)};return this._canvas.appendChild(n.topTire.sprite),this._canvas.appendChild(n.bottomTire.sprite),Mt.setAndPosTireTrackPair(n,t,e,i,s,r),n}createTireTrackPair(t,e,i,s,r){this.vanishFullTrack();const n={topTire:new mt(this._trackWidth,this._trackHeight,this._trackType),bottomTire:new mt(this._trackWidth,this._trackHeight,this._trackType)};this._canvas.appendChild(n.topTire.sprite),this._canvas.appendChild(n.bottomTire.sprite),Mt.setAndPosTireTrackPair(n,t,e,i,s,r),this._listOfTirePairs.addToHead(n)}calcFirstTopBottomChainPoints(t,e,i,s){const r=Mt.calcPositionOfFirstChain(e,this._trackWidth,this.chainWidth,i,s),n=t.hullSprite.calcPosition(e,i,s);let a=t.bottomTrackSprite.calcPosition(n,i,s);return a=Mt.calcPositionOfFirstChain(a,this._trackWidth,this.chainWidth,i,s),{topFirstChainPoint:r,bottomFirstChainPoint:a}}calcLastTopBottomChainPoints(t,e,i,s){const r=e.clone(),n=t.hullSprite.calcPosition(e,i,s);return{topLastChainPoint:r,bottomLastChainPoint:t.bottomTrackSprite.calcPosition(n,i,s)}}spawnFullTireTrack(t,e,i,s,r){this._topFirstChainPoint=t.clone(),this._bottomFirstChainPoint=e.clone();for(let n=0;n<Mt.AMOUNT_OF_CHAINS;n++){const a=this.createTireTrackChainPair(t,e,i,s,r);this._listOfTirePairs.addToHead(a),n===Mt.AMOUNT_OF_CHAINS-1&&(this._topLastChainPoint=t.clone(),this._bottomLastChainPoint=e.clone()),this.moveToNextChain(t,s,r),this.moveToNextChain(e,s,r)}}updateAllChainPoints(t,e,i,s){this._topFirstChainPoint=t,this._bottomFirstChainPoint=e,this._topLastChainPoint=i,this._bottomLastChainPoint=s}checkForUpdate(t,e,i,s){const r=E(t,this._topFirstChainPoint),n=E(e,this._bottomFirstChainPoint),a=E(i,this._topLastChainPoint),o=E(s,this._bottomLastChainPoint);return r>=this._chainWidth?{isUpdate:!0,prevPoint:this._topFirstChainPoint,currPoint:t}:n>=this._chainWidth?{isUpdate:!0,prevPoint:this._bottomFirstChainPoint,currPoint:e}:a>=this._chainWidth?{isUpdate:!0,prevPoint:this._topLastChainPoint,currPoint:i}:o>=this._chainWidth?{isUpdate:!0,prevPoint:this._bottomLastChainPoint,currPoint:s}:{isUpdate:!1}}getMovementAngle(t,e){const i=e.x-t.x,s=e.y-t.y;return Math.atan2(s,i)}detectMovementDirection(t,e,i){const s=this.getMovementAngle(t,e);let r=I(i-Mt.DIRECTION_ANGLE_DIFFERENCE,-Math.PI,Math.PI),n=I(i+Mt.DIRECTION_ANGLE_DIFFERENCE,-Math.PI,Math.PI),a=!1;if(r>=Math.PI/2&&r<=Math.PI&&n>=-Math.PI&&n<=-Math.PI/2&&(a=!0,s>=0?n=I(n,0,2*Math.PI):r=I(r,-2*Math.PI,0)),s>=r&&s<=n||s<=r&&s>=n)return 1;{a&&(r<0?(r=I(r,0,2*Math.PI),n=I(n,0,2*Math.PI)):(r=I(r,-2*Math.PI,0),n=I(n,-2*Math.PI,0)));const t=I(s-Math.PI,-Math.PI,Math.PI);return t>=r&&t<=n||t<=r&&t>=n?-1:0}}forwardUpdate(t,e,i,s,r){const n=this.createTireTrackChainPair(t,e,i,s,r);this._listOfTirePairs.addToTail(n),this._listOfTirePairs.length>Mt.AMOUNT_OF_CHAINS&&(this._vanishingListOfTirePairs.addToHead(this._listOfTirePairs.head),this._listOfTirePairs.removeFromHead())}backwardUpdate(t,e,i,s,r){const n=this.createTireTrackChainPair(t,e,i,s,r);this._listOfTirePairs.addToHead(n),this._listOfTirePairs.length>Mt.AMOUNT_OF_CHAINS&&(this._vanishingListOfTirePairs.addToHead(this._listOfTirePairs.tail),this._listOfTirePairs.removeFromTail())}}var Tt;Mt.DIRECTION_ANGLE_DIFFERENCE=.6,Mt.AMOUNT_OF_CHAINS=10;class At extends A{constructor(){super(At.SIZE,At.SIZE),this._sprite.style.zIndex="5",this._sprite.src=At.SRC[0]}setSrc(t){this._sprite.src=At.SRC[t]}}Tt=At,At.DEFAULT_SRC="src/img/tanks/Effects/Movement/Movement_",At.SRC=[`${Tt.DEFAULT_SRC}0.png`,`${Tt.DEFAULT_SRC}1.png`,`${Tt.DEFAULT_SRC}2.png`,`${Tt.DEFAULT_SRC}3.png`,`${Tt.DEFAULT_SRC}4.png`,`${Tt.DEFAULT_SRC}5.png`,`${Tt.DEFAULT_SRC}6.png`,`${Tt.DEFAULT_SRC}7.png`,`${Tt.DEFAULT_SRC}8.png`,`${Tt.DEFAULT_SRC}9.png`,`${Tt.DEFAULT_SRC}10.png`,`${Tt.DEFAULT_SRC}11.png`,`${Tt.DEFAULT_SRC}12.png`,`${Tt.DEFAULT_SRC}13.png`,`${Tt.DEFAULT_SRC}14.png`,`${Tt.DEFAULT_SRC}15.png`,`${Tt.DEFAULT_SRC}16.png`,`${Tt.DEFAULT_SRC}17.png`,`${Tt.DEFAULT_SRC}18.png`,`${Tt.DEFAULT_SRC}19.png`],At.SIZE=85;class St{constructor(t,e,i){this._topSpriteAccelerationEffect=new At,this._bottomSpriteAccelerationEffect=new At,this._counter=0,this._state=0,this._canvas=t,this._indentX=e,this._tankHeight=i}changeState(){this._state===St.LAST_STATE&&(this._state=St.WORKING_STATE),this._counter++,this._counter===St.THRESHOLD&&(this._counter=0,this._state++,this._topSpriteAccelerationEffect.setSrc(this._state),this._bottomSpriteAccelerationEffect.setSrc(this._state))}setPosition(t,e,i,s){0===this._state&&0===this._counter&&(this._canvas.appendChild(this._topSpriteAccelerationEffect.sprite),this._canvas.appendChild(this._bottomSpriteAccelerationEffect.sprite)),this.changeState();let r=this.calcPosition(t,e,i,28*this._tankHeight/42);X.updateSpritePart(this._topSpriteAccelerationEffect,r,e,i,s),r=this.calcPosition(t,e,i,37*this._tankHeight/42),X.updateSpritePart(this._bottomSpriteAccelerationEffect,r,e,i,s)}removeAcceleration(){if(0===this._state&&0===this._counter)return;this._state=0,this._counter=0;const t=this._topSpriteAccelerationEffect,e=this._bottomSpriteAccelerationEffect;t.setSrc(this._state),e.setSrc(this._state),t.remove(),e.remove()}calcPosition(t,e,i,s){return new f(t.x+this._indentX*i-s*e-At.SIZE/2*i+At.SIZE/1.517*e,t.y+s*i+this._indentX*e-At.SIZE/1.517*i-At.SIZE/2*e)}}St.THRESHOLD=7,St.LAST_STATE=19,St.WORKING_STATE=10;class ft{constructor(t,e){this._state=0,this._counter=0,this._isForwardMovement=!0,this._isResidualMovement=!1,this._minStateChangeThreshold=[Math.max(Math.round(ft.MIN_THRESHOLD_COEFF/e.finishSpeed),ft.MIN_STATE_CHANGE_THRESHOLD_MINIMUM),Math.max(Math.round(ft.MIN_THRESHOLD_COEFF/t.finishSpeed),ft.MIN_STATE_CHANGE_THRESHOLD_MINIMUM)],this._maxStateChangeThreshold=[Math.min(Math.round(ft.MAX_THRESHOLD_COEFF/e.force),ft.MAX_STATE_CHANGE_THRESHOLD_MAXIMUM),Math.min(Math.round(ft.MAX_THRESHOLD_COEFF/t.force),ft.MAX_STATE_CHANGE_THRESHOLD_MAXIMUM)],this._currentThreshold=this._maxStateChangeThreshold[this._isForwardMovement?1:0]}set isForwardMovement(t){this._isResidualMovement=!1,this._isForwardMovement!==t&&(this._isForwardMovement=t,this._currentThreshold=this._maxStateChangeThreshold[this._isForwardMovement?1:0])}setResidualMovement(){this._isResidualMovement=!0}changeState(t,e){this._counter++,this._counter>=this._currentThreshold&&(this._counter=0,this._state^=1,t.setSrc(this._state),e.setSrc(this._state),this._isResidualMovement?this._currentThreshold<this._maxStateChangeThreshold[this._isForwardMovement?1:0]&&this._currentThreshold++:this._currentThreshold>this._minStateChangeThreshold[this._isForwardMovement?1:0]&&this._currentThreshold--)}stopped(){this._currentThreshold=this._maxStateChangeThreshold[this._isForwardMovement?1:0]}}ft.MIN_THRESHOLD_COEFF=17.5,ft.MAX_THRESHOLD_COEFF=.5,ft.MIN_STATE_CHANGE_THRESHOLD_MINIMUM=2,ft.MAX_STATE_CHANGE_THRESHOLD_MAXIMUM=30;class yt{constructor(t,e,i){this._tankSpriteParts=t,this._tankTrackEffect=new ft(e,i)}get tankSpriteParts(){return this._tankSpriteParts}get tankTrackEffect(){return this._tankTrackEffect}spawnTankAcceleration(t,e,i){this._tankAcceleration=new St(t,e,i)}removeAcceleration(){this._tankAcceleration.removeAcceleration()}spawnTireTracks(t,e,i,s){this._tankTireTrack=new Mt(t,this._tankSpriteParts.topTrackSprite,s);const r=Math.sin(i),n=Math.cos(i),{topFirstChainPoint:a,bottomFirstChainPoint:o}=this._tankTireTrack.calcFirstTopBottomChainPoints(this._tankSpriteParts,e,r,n);this._tankTireTrack.spawnFullTireTrack(a,o,i,r,n)}updateTireTrack(t,e,i,s){const{topFirstChainPoint:r,bottomFirstChainPoint:n}=this._tankTireTrack.calcFirstTopBottomChainPoints(this._tankSpriteParts,t,i,s),{topLastChainPoint:a,bottomLastChainPoint:o}=this._tankTireTrack.calcLastTopBottomChainPoints(this._tankSpriteParts,t,i,s),{isUpdate:h,prevPoint:l,currPoint:c}=this._tankTireTrack.checkForUpdate(r,n,a,o);if(h){this._tankTireTrack.updateAllChainPoints(r,n,a,o);switch(this._tankTireTrack.detectMovementDirection(l,c,e)){case 1:this._tankTireTrack.forwardUpdate(r,n,e,i,s);break;case 0:this._tankTireTrack.createTireTrackPair(a,o,e,i,s);break;case-1:this._tankTireTrack.backwardUpdate(a,o,e,i,s)}}}updateForwardAction(t,e,i){this._tankTrackEffect.isForwardMovement=!0;const s=Math.sin(e),r=Math.cos(e),n=this._tankSpriteParts.hullSprite.calcPosition(t,s,r);this.updateSprite(t,e,i,s,r,n),this._tankAcceleration.setPosition(n,s,r,e),this.updateTireTrack(t,e,s,r)}updateBackwardAction(t,e,i){this._tankTrackEffect.isForwardMovement=!1;const s=Math.sin(e),r=Math.cos(e);this.defaultUpdate(t,e,i,s,r),this.updateTireTrack(t,e,s,r)}preUpdateAction(t,e,i){const s=Math.sin(e),r=Math.cos(e);this.updateTireTrack(t,e,s,r),this.defaultUpdate(t,e,i,s,r)}updateAfterAction(t,e,i){const s=Math.sin(e),r=Math.cos(e);this.defaultUpdate(t,e,i,s,r)}defaultUpdate(t,e,i,s,r){const n=this._tankSpriteParts.hullSprite.calcPosition(t,s,r);this.updateSprite(t,e,i,s,r,n)}rotateTurretUpdate(t,e,i,s){const r=Math.sin(e),n=Math.cos(e),a=this._tankSpriteParts.turretSprite,o=a.calcPosition(t,i,s),h=o.clone();X.rotateForTurretPoint(a,h,i,s,r,n),X.rotateToDefaultSpritePoint(a,o,i,s),X.setPosAndAngle(a,o,e);let l=this._tankSpriteParts.weaponSprite.calcPosition(h,r,n);X.updateSpritePart(this._tankSpriteParts.weaponSprite,l,r,n,e)}updateSprite(t,e,i,s,r,n){const a=this._tankSpriteParts.topTrackSprite,o=this._tankSpriteParts.bottomTrackSprite,h=this._tankSpriteParts.hullSprite;let l=a.calcPosition(t);X.updateSpritePart(a,l,s,r,e),l=h.calcPosition(t,s,r),X.updateSpritePart(h,l,s,r,e),l=o.calcPosition(n,s,r),X.updateSpritePart(o,l,s,r,e),this.rotateTurretUpdate(n,i,s,r),this._tankTrackEffect.changeState(a,o)}}class vt{get health(){return 100}get armor(){return 100}get mass(){return 1}get armorStrength(){return 1}get num(){return 0}}class kt{constructor(){this._angularData={finishSpeed:.0175,force:.03},this._forwardData={finishSpeed:3,force:.03},this._backwardData={finishSpeed:2,force:.025}}get angularData(){return this._angularData}get forwardData(){return this._forwardData}get backwardData(){return this._backwardData}get num(){return 0}}class Ct{constructor(t,e,i,s){this._hull=t,this._track=e,this._turret=i,this._weapon=s}get hull(){return this._hull}get track(){return this._track}get turret(){return this._turret}get weapon(){return this._weapon}}class Pt{constructor(){}static create(t,e,i,s){const r=Pt.createTurret(i),n=Pt.createWeapon(s),a=Pt.createHull(t),o=Pt.createTrack(e);return new Ct(a,o,r,n)}static createHull(t){if(0===t)return new vt;throw new Error(`Hull model ${t} was not found`)}static createTrack(t){if(0===t)return new kt;throw new Error(`Track model ${t} was not found`)}static createTurret(t){if(0===t)return new ut;throw new Error(`Turret model ${t} was not found`)}static createWeapon(t){if(0===t)return new dt;throw new Error(`Weapon model ${t} was not found`)}}class wt extends A{get accelerationEffectIndentX(){return this._accelerationEffectIndentX}constructor(t,e){super(l[e],c[e]),this._accelerationEffectIndentX=T[e],this._sprite.src=`src/img/tanks/Hulls/Hull_${e}/Hull_${t}.png`,this._sprite.style.zIndex="5"}calcPosition(t,e,i){return new f(t.x-5*e,t.y+5*i)}}class Et extends A{static calcHeight(t){return Et.PROPORTION_WIDTH_HEIGHT*t}get num(){return this._num}constructor(t,e,i){super(e+5,i),this._num=t,this._srcState0=`src/img/tanks/Tracks/Track_${t}_A.png`,this._srcState1=`src/img/tanks/Tracks/Track_${t}_B.png`,this._sprite.style.zIndex="4",this._sprite.src=this._srcState0}setSrc(t){this._sprite.src=0===t?this._srcState0:this._srcState1}}Et.PROPORTION_WIDTH_HEIGHT=42/246;class It extends Et{constructor(t,e){super(t,e,Et.calcHeight(e))}calcPosition(t){return t.clone()}}class Lt extends Et{constructor(t,e,i){const s=Et.calcHeight(e);super(t,e,s),this._deltaHeight=i+5-s}calcPosition(t,e,i){return new f(t.x-this._deltaHeight*e,t.y+this._deltaHeight*i)}}class xt extends A{constructor(t,e,i,s){super(u[e],d[e]),this._sprite.src=`src/img/tanks/Turrets/Turret_${e}/Turret_${t}.png`,this._sprite.style.zIndex="6",this._indentX=i,this._indentY=s}calcPosition(t,e,i){return new f(t.x+this._indentX*i-this._indentY*e,t.y+this._indentY*i+this._indentX*e)}}class Dt extends A{constructor(t,e,i){super(p[t],g[t]),this._sprite.src=`src/img/tanks/Weapons/Weapon_${t}.png`,this._sprite.style.zIndex="6",this._indentX=e,this._indentY=i}calcPosition(t,e,i){return new f(t.x+this._indentX*i-this._indentY*e,t.y+this._indentY*i+this._indentX*e)}}class Rt{constructor(t,e,i,s,r){this._hullSprite=t,this._bottomTrackSprite=e,this._topTrackSprite=i,this._turretSprite=s,this._weaponSprite=r}get hullSprite(){return this._hullSprite}get bottomTrackSprite(){return this._bottomTrackSprite}get topTrackSprite(){return this._topTrackSprite}get turretSprite(){return this._turretSprite}get weaponSprite(){return this._weaponSprite}}class Nt{constructor(){}static create(t,e,i,s,r){return new Rt(new wt(t,e),new Lt(i,l[e],c[e]),new It(i,l[e]),new xt(t,s,_[e],(c[e]>>1)-(d[s]>>1)),new Dt(r,u[s],(d[s]>>1)-(g[r]>>1)))}}class bt{get model(){return this._model}get sprite(){return this._sprite}get id(){return this._id}get control(){return this._control}set control(t){this._control=t}constructor(t,e,i,s,r,n,a,o){this._control=o;const h=Pt.create(s,r,n,a),_=new V(t,l[s]+5,c[s]+10,e,h.turret.mass+h.hull.mass+h.weapon.mass,R.tankId);this._model=new pt(h,_),this._id=_.id;const u=h.track;this._sprite=new yt(Nt.create(i,s,r,n,a),u.forwardData,u.backwardData)}spawn(t,e){const i=this._sprite.tankSpriteParts;t.appendChild(i.topTrackSprite.sprite),t.appendChild(i.bottomTrackSprite.sprite),t.appendChild(i.hullSprite.sprite),t.appendChild(i.weaponSprite.sprite),t.appendChild(i.turretSprite.sprite);const s=this._model.entity;e.insert(s),this._sprite.updateAfterAction(s.points[0],s.angle,this._model.turretAngle)}}window.onmousedown=t=>console.log(`x = ${t.clientX}px, y = ${t.clientY}px`);const Ft=document.querySelector("#canvas"),Ot=new class{constructor(t,e,i){this._isGameLoopActive=!1,this._backgroundSprites=new Array,this._animationManager=new rt,this._field=new F(t,e,i),this._keyHandler=new W;const s=new O(0,0,e,i),r=new b(s),n=new Map,a=new Map,o=new Map;this._bulletHandlingManager=new ot(new ht(s,r),this._field,o,n,a),this._tankHandlingManagers=new it(new K(s,r),this._field,n,this._bulletHandlingManager),this._wallHandlingManagers=new st(new q(s,r),this._field,a)}createField(t,e){this.setCoefficients(t),this.createBackgroundSprites(t),this.createWalls(e)}setCoefficients(t){this._tankHandlingManagers.movementManager.resistanceCoeff=o[t],this._tankHandlingManagers.movementManager.airResistanceCoeff=h,this._wallHandlingManagers.movementManager.resistanceCoeff=o[t],this._wallHandlingManagers.movementManager.airResistanceCoeff=h,this._bulletHandlingManager.movementManager.resistanceCoeff=o[t],this._bulletHandlingManager.movementManager.airResistanceCoeff=h}createBackgroundSprites(t){k.fullFillBackground(t,this._field.width,this._field.height,this._backgroundSprites);for(const t of this._backgroundSprites)this._field.canvas.appendChild(t.sprite)}createWalls(t){const e=this._field.width,i=this._field.height;this._wallHandlingManagers.add(Q.createWallsAroundPerimeter(t,e,i));const s=new Array;s.push(Q.createWall(new f(e>>1,i>>1),.79,2,0,!0)),s.push(Q.createWall(new f(e>>2,i>>2),1,2,1,!0)),this._wallHandlingManagers.add(s)}addTankElements(...t){this._tankHandlingManagers.add(t)}startGameLoop(){this._isGameLoopActive||(this._isGameLoopActive=!0,this._keyHandler.clearMask(),requestAnimationFrame((()=>this.gameLoop())))}stopGameLoop(){this._isGameLoopActive=!1}gameLoop(){this._isGameLoopActive&&(this._tankHandlingManagers.handle(this._keyHandler.keysMask),this._wallHandlingManagers.handle(),this._animationManager.handle(),requestAnimationFrame((()=>this.gameLoop())))}}(Ft,window.screen.width,window.screen.height);Ot.createField(1,2);const Ut={forwardMask:W.W_MASK,backwardMask:W.S_MASK,hullClockwiseMask:W.D_MASK,hullCounterClockwiseMask:W.A_MASK,turretClockwiseMask:W.V_MASK,turretCounterClockwiseMask:W.C_MASK,shoot:W.B_MASK},Ht=new bt(new f(300,300),0,0,0,0,0,0,Ut),Kt={forwardMask:W.UP_MASK,backwardMask:W.DOWN_MASK,hullClockwiseMask:W.RIGHT_MASK,hullCounterClockwiseMask:W.LEFT_MASK,turretClockwiseMask:W.PERIOD_MASK,turretCounterClockwiseMask:W.COMMA_MASK,shoot:W.SLASH_MASK},Wt=new bt(new f(450,450),0,1,0,0,0,0,Kt);Ot.addTankElements(Ht,Wt),Ot.startGameLoop()})();