(()=>{"use strict";const t=Math.PI/180,e=115,i=["Grass","Ground","Sandstone"],s=["Rect","Square"],n=[101,50],r=[50,50],a=[[4,2],[5.5,2.5],[7,3]],o=[.55,.7,.85],h=[76,81,77,64,81,81,76,69],l=[49,62,49,41,69,56,48,41],c=[20,25,20,15,25,25,25,20],_=[43,50,36,36,29,36,43,29],d=[36,36,22,36,29,29,36,29],u=[47,49,40,43,50,36,43,36],g=[14,10,14,7,11,16,14,14],p=[12,16,23,24,19],m=[5,8,10,6,8],T=[4,10,0,0,4,4,0,0,0];class A{get width(){return this._sprite.width}get height(){return this._sprite.height}get sprite(){return this._sprite}constructor(t,e,i){this._sprite=new Image(t,e),this._sprite.classList.add("sprite"),this._sprite.style.zIndex=i}setPosition(t){this._sprite.style.left=`${t.x}px`,this._sprite.style.top=`${t.y}px`}setAngle(t){this._sprite.style.transform=`rotate(${t}rad)`}setAngleWithScaling(t,e,i){this._sprite.style.transform=`rotate(${t}rad) scaleX(${e}) scaleY(${i})`}remove(){this._sprite.remove()}}function M(t,e){return Math.floor(Math.random()*(e+1-t))+t}class y extends A{constructor(t){super(e,e,"1"),this._sprite.src=`src/img/backgrounds/${i[t]}_${M(0,1)}.png`}}class f{constructor(t,e){this._x=t,this._y=e}get x(){return this._x}set x(t){this._x=t}get y(){return this._y}set y(t){this._y=t}clone(){return new f(this._x,this._y)}addToCoordinates(t,e){this._x+=t,this._y+=e}}class P extends f{get length(){return Math.sqrt(this.x*this.x+this.y*this.y)}normalize(){const t=this.length;0!==t&&(this._x/=t,this._y/=t)}get angle(){return Math.atan2(this.y,this.x)}clone(){return new P(this.x,this.y)}addVector(t){this._x+=t._x,this._y+=t._y}subtractVector(t){this._x-=t._x,this._y-=t._y}scale(t){this._x*=t,this._y*=t}}class S extends P{constructor(t,e){super(t,e)}static create(t,e){const i=new S(t.y-e.y,e.x-t.x);return i.normalize(),i}clone(){return new S(this._x,this._y)}}class v{constructor(){}static fullFillBackground(t,i,s,n){for(let r=0;r<i;r+=e)for(let i=0;i<s;i+=e)n.push(this.addBackgroundTile(new f(r,i),t))}static addBackgroundTile(t,e){const i=new y(e);return i.setPosition(t),i}}class E{constructor(){}static dotProduct(t,e){return t.x*e.x+t.y*e.y}static crossProduct(t,e){return t.x*e.y-t.y*e.x}static add(t,e){return new P(t.x+e.x,t.y+e.y)}static subtract(t,e){return new P(t.x-e.x,t.y-e.y)}static scale(t,e){return new P(t.x*e,t.y*e)}static createFromAngleAndLength(t,e){return new P(e*Math.cos(t),e*Math.sin(t))}static calcCoDirectionalScaleFactor(t,e){return t.x/e.x}static calcScaleFactor(t,e){return t.length/e.length}}function w(t,e){const i=e.x-t.x,s=e.y-t.y;return Math.sqrt(i*i+s*s)}function k(t,e=0,i=2*Math.PI){for(;t<e;)t+=i-e;for(;t>=i;)t-=i-e;return t}function C(t){return t>Math.PI/2&&t<3*Math.PI/2}function I(t,e){return k(t-e)}function D(t,e){return new f((t.x+e.x)/2,(t.y+e.y)/2)}class L{constructor(){}static hasCollision(t,e){const i=L.getAxes(t),s=L.getAxes(e);function n(i){for(const s of i){const i=L.getProjection(t,s),n=L.getProjection(e,s);if(Math.min(i.max-n.min,n.max-i.min)<=0)return!1}return!0}return n(i)&&n(s)}static getCollisionResult(t,e){const i=L.getAxes(t),s=L.getAxes(e);let n,r,a=Number.MAX_VALUE;function o(s){const o=s===i;for(const i of s){const s=L.getProjection(t,i),h=L.getProjection(e,i),l=Math.min(s.max-h.min,h.max-s.min);if(l<=0)return!1;l<a&&(a=l,n=i,r=o)}return!0}return o(i)&&o(s)?{collisionPoint:L.findClosestVertex(t,e,n,r),overlap:a}:null}static findClosestVertex(t,e,i,s){let n,r;return s?(n=this.getProjection(t,i),r=this.getExtendedProjection(e,i)):(n=this.getProjection(e,i),r=this.getExtendedProjection(t,i)),r.max-n.min<n.max-r.min?r.maxPoint:r.minPoint}static getExtendedProjection(t,e){let i=E.dotProduct(e,t.points[0]),s=i,n=t.points[0],r=t.points[0];for(let a=1;a<t.points.length;a++){const o=E.dotProduct(e,t.points[a]);Math.abs(o-i)<this.EPSILON?n=D(n,t.points[a]):Math.abs(o-s)<this.EPSILON?r=D(r,t.points[a]):o<i?(i=o,n=t.points[a]):o>s&&(s=o,r=t.points[a])}return{min:i,max:s,minPoint:n,maxPoint:r}}static getAxes(t){const e=new Array,i=t.points.length-1;for(let s=0;s<i;s++)e.push(S.create(t.points[s],t.points[s+1]));return e.push(S.create(t.points[i],t.points[0])),e}static getProjection(t,e){let i=E.dotProduct(e,t.points[0]),s=i;for(let n=1;n<t.points.length;n++){const r=E.dotProduct(e,t.points[n]);r<i?i=r:r>s&&(s=r)}return{min:i,max:s}}}L.EPSILON=1;class x{constructor(){}static resolveCollision(t,e){const i=L.getCollisionResult(t,e);if(null===i)return null;const s=this.calcCollisionNormal(i.collisionPoint,t.calcCenter()),n=this.calsImpulseMagnitude(t,e,s);return this.separateEntities(t,i.overlap,s),this.updateAngularVelocity(t,e,i.collisionPoint,n,s),this.updateVelocity(t,e,n,s),i.collisionPoint}static updateAngularVelocity(t,e,i,s,n){const r=this.calcEntityNormal(t),a=E.subtract(i,e.calcCenter()),o=E.subtract(i,t.calcCenter()),h=E.crossProduct(a,n)*s,l=E.crossProduct(o,r)*s,c=h/e.momentOfInertia;let _=l/t.momentOfInertia;this.shouldReverseReceiving(e.angle,r.angle)&&(_=-_),Math.abs(_+t.angularVelocity)<this.SMALL_ANGULAR_IMPULSE&&Math.abs(_)>this.ORTHOGONAL_IMPULSE&&(_=1===Math.sign(_)?this.SMALL_ANGULAR_IMPULSE:-this.SMALL_ANGULAR_IMPULSE),e.angularVelocity+=c,t.angularVelocity+=_}static shouldReverseReceiving(t,e){const i=k(t-e,0,Math.PI);return i<Math.PI/2&&i>Math.PI/4||i>=Math.PI/2&&i<3*Math.PI/4}static calcEntityNormal(t){const e=t.angle;return C(I(e,t.velocity.angle))?new P(-Math.cos(e),-Math.sin(e)):new P(Math.cos(e),Math.sin(e))}static updateVelocity(t,e,i,s){const n=E.scale(s,-i/t.mass),r=E.scale(s,i/e.mass);t.velocity.addVector(n),e.velocity.addVector(r)}static separateEntities(t,e,i){let s=-i.x*e,n=-i.y*e;s+=1===Math.sign(s)?this.CORRECTION_FACTOR:-this.CORRECTION_FACTOR,n+=1===Math.sign(n)?this.CORRECTION_FACTOR:-this.CORRECTION_FACTOR;for(const e of t.points)e.addToCoordinates(s,n)}static calsImpulseMagnitude(t,e,i){const s=E.subtract(t.velocity,e.velocity);return 2*E.dotProduct(s,i)/(1/t.mass+1/e.mass)*this.COEFFICIENT_OF_RESTITUTION}static calcCollisionNormal(t,e){const i=E.subtract(t,e);return i.normalize(),i}}x.COEFFICIENT_OF_RESTITUTION=.6,x.CORRECTION_FACTOR=.55,x.SMALL_ANGULAR_IMPULSE=.004,x.ORTHOGONAL_IMPULSE=1e-4;class R{constructor(){}static isTank(t){return t>=R.STARTING_TANK_ID&&t<=R.ENDING_TANK_ID}static isWall(t){return t>=R.STARTING_WALL_ID&&t<=R.ENDING_WALL_ID}static isBullet(t){return t>=R.STARTING_BULLET_ID&&t<=R.ENDING_BULLET_ID}static get tankId(){if(R.TANK_ID>R.ENDING_TANK_ID)throw new Error("Maximum tank ID is reached");return R.TANK_ID++}static get wallId(){if(R.WALL_ID>R.ENDING_WALL_ID)throw new Error("Maximum wall ID is reached");return R.WALL_ID++}static get bulletId(){return R.BULLET_ID>R.ENDING_BULLET_ID&&(R.BULLET_ID=R.STARTING_BULLET_ID),R.BULLET_ID++}}R.STARTING_TANK_ID=0,R.ENDING_TANK_ID=R.STARTING_TANK_ID+42424242424242,R.STARTING_WALL_ID=R.ENDING_TANK_ID+1,R.ENDING_WALL_ID=R.STARTING_WALL_ID+42424242424242,R.STARTING_BULLET_ID=R.ENDING_WALL_ID+1,R.ENDING_BULLET_ID=R.STARTING_BULLET_ID+42424242424242,R.TANK_ID=R.STARTING_TANK_ID,R.WALL_ID=R.STARTING_WALL_ID,R.BULLET_ID=R.STARTING_BULLET_ID;class F{constructor(){this._idForProcessing=new Array}hasForProcessing(){return 0!==this._idForProcessing.length}clear(){this._idForProcessing.length=0}push(t){this._idForProcessing.push(t)}get iterable(){return this._idForProcessing}}class N{get wallsForProcessing(){return this._wallsForProcessing}constructor(t){this._wallsForProcessing=new F,this._collisionDetection=t}hasCollision(t){const e=this._collisionDetection.getCollisions(t),i=new Array;for(const s of e){const e=x.resolveCollision(t,s);e&&(i.push({collisionPoint:e,id:s.id}),this.processCollision(s))}return 0!==i.length?i:null}processCollision(t){R.isWall(t.id)&&this._wallsForProcessing.push(t.id)}}class b{constructor(t,e,i){this._canvas=t,this._width=e,this._height=i}get canvas(){return this._canvas}get width(){return this._width}get height(){return this._height}}class U{constructor(t,e,i,s){this._boundary={xStart:t,yStart:e,xLast:i,yLast:s},this._root=new H(this._boundary)}insert(t){this._root.insert(t)}getCollisions(t){return this._root.getCollisions(t)}remove(t){this._root.remove(t)}clear(){this._root=new H(this._boundary)}}class H{constructor(t){this._totalEntities=0,this._entities=new Map,this._children=null,this._boundary=t}isSubdivide(){return null===this._entities}subdivide(){const t=this._boundary.xStart,e=this._boundary.yStart,i=this._boundary.xLast,s=this._boundary.yLast,n=(i-t)/2,r=(s-e)/2;this._children=[new H({xStart:t,yStart:e,xLast:t+n,yLast:e+r}),new H({xStart:t+n,yStart:e,xLast:i,yLast:e+r}),new H({xStart:t,yStart:e+r,xLast:t+n,yLast:s}),new H({xStart:t+n,yStart:e+r,xLast:i,yLast:s})],this.redistribute()}redistribute(){this._totalEntities=0;for(const t of this._children){for(const e of this._entities.values())t.insert(e);this._totalEntities+=t._totalEntities}this._entities=null}insert(t){if(this.isContainsEntity(t))if(this.isSubdivide()){this._totalEntities=0;for(const e of this._children)e.insert(t),this._totalEntities+=e._totalEntities}else this._totalEntities++,this._entities.set(t.id,t),this._entities.size>H.CAPACITY&&this.subdivide()}remove(t){if(this.isContainsEntity(t))if(this.isSubdivide()){this._totalEntities=0;for(const e of this._children)e.remove(t),this._totalEntities+=e._totalEntities;this._totalEntities<=H.HALF_CAPACITY&&this.mergeWithChildren()}else this._totalEntities--,this._entities.delete(t.id)}getCollisions(t){const e=new Array;if(this.isSubdivide())for(const i of this._children)i.isContainsEntity(t)&&e.push(...i.getCollisions(t));else for(const i of this._entities.values())L.hasCollision(t,i)&&e.push(i);return e}isContainsEntity(t){for(const e of t.points)if(this.isContainsPoint(e))return!0;return!1}isContainsPoint(t){return t.x>this._boundary.xStart&&t.x<this._boundary.xLast&&t.y>this._boundary.yStart&&t.y<this._boundary.yLast}mergeWithChildren(){this._entities=new Map;for(const t of this._children){t.isSubdivide()&&t.mergeWithChildren();for(const e of t._entities.values())this._entities.set(e.id,e)}this._totalEntities=this._entities.size,this._children=null}}H.CAPACITY=8,H.HALF_CAPACITY=H.CAPACITY>>1;class O{set resistanceCoeff(t){this._resistanceCoeff=t}set airResistanceCoeff(t){this._airResistanceCoeff=t}constructor(t,e){this._resistanceCoeff=0,this._airResistanceCoeff=0,this._entityStorage=t,this._collisionManager=e}get entityStorage(){return this._entityStorage}get collisionManager(){return this._collisionManager}}class ${constructor(){}static rotatePointAroundTarget(t,e,i,s){const n=t.x-e.x,r=t.y-e.y;t.x=e.x+n*s-r*i,t.y=e.y+n*i+r*s}static rotatePoint(t,e,i){const s=t.x,n=t.y;t.x=s*i-n*e,t.y=s*e+n*i}}class W{constructor(){}static movement(t){for(const e of t.points)e.addToCoordinates(t.velocity.x,t.velocity.y)}static angularMovement(t){W.rotateEntity(t,t.angularVelocity)}static rotateEntity(t,e){const i=Math.sin(e),s=Math.cos(e),n=t.calcCenter();for(const e of t.points)$.rotatePointAroundTarget(e,n,i,s);$.rotatePoint(t.velocity,i,s)}static moveEntity(t,e){for(const i of t.points)i.addToCoordinates(e.x,e.y)}}class G extends O{residualMovement(t,e){const i=t.sprite;t.model.isIdle()?i.tankTrackEffect.stopped():(i.tankTrackEffect.setResidualMovement(),this.hullUpdate(t,t.model.residualMovement,W.movement,t.sprite.preUpdateAction,e))}residualAngularMovement(t,e){t.model.isAngularMotionStopped()||this.hullUpdate(t,t.model.residualAngularMovement,W.angularMovement,t.sprite.preUpdateAction,e)}turretCounterclockwiseMovement(t,e){t.model.turretCounterclockwiseMovement(e),G.turretUpdate(t)}turretClockwiseMovement(t,e){t.model.turretClockwiseMovement(e),G.turretUpdate(t)}hullCounterclockwiseMovement(t,e){this.hullUpdate(t,t.model.hullCounterclockwiseMovement,W.angularMovement,t.sprite.preUpdateAction,e)}hullClockwiseMovement(t,e){this.hullUpdate(t,t.model.hullClockwiseMovement,W.angularMovement,t.sprite.preUpdateAction,e)}forwardMovement(t,e){this.hullUpdate(t,t.model.forwardMovement,W.movement,t.sprite.updateForwardAction,e)}backwardMovement(t,e){this.hullUpdate(t,t.model.backwardMovement,W.movement,t.sprite.updateBackwardAction,e)}hullUpdate(t,e,i,s,n){const r=t.model.entity;this._entityStorage.remove(r),e.call(t.model,this._resistanceCoeff,this._airResistanceCoeff,n),i(r),this._collisionManager.hasCollision(r)&&t.sprite.removeAcceleration(),s.call(t.sprite,r.points[0],r.angle,t.model.turretAngle),this._entityStorage.insert(r)}static turretUpdate(t){const e=t.model,i=e.entity.angle,s=Math.sin(i),n=Math.cos(i);t.sprite.rotateTurretUpdate(t.sprite.tankSpriteParts.hullSprite.calcPosition(e.entity.points[0],s,n),e.turretAngle,s,n)}}class B{constructor(){this._keys=new Set,document.addEventListener("keydown",this.handleKeyDown.bind(this)),document.addEventListener("keyup",this.handleKeyUp.bind(this))}clearKeys(){this._keys.clear()}isKeyDown(t){return this._keys.has(t)}handleKeyDown(t){this._keys.add(t.keyCode)}handleKeyUp(t){this._keys.delete(t.keyCode)}}class V{constructor(t,e,i,s,n,r){this._angularVelocity=0,this._velocity=new P(0,0);const a=e*e+i*i;this._radiusLength=.5*Math.sqrt(a),this._momentOfInertia=V.scalingCoeff*n*a,this._mass=n,this._id=r,this._width=e,this._height=i,this._points=[t.clone(),new f(t.x+e,t.y),new f(t.x+e,t.y+i),new f(t.x,t.y+i)],0!==s&&W.rotateEntity(this,s)}get velocity(){return this._velocity}get angle(){return Math.atan2(this._points[1].y-this._points[0].y,this._points[1].x-this._points[0].x)}get points(){return this._points}get mass(){return this._mass}get angularVelocity(){return this._angularVelocity}set angularVelocity(t){this._angularVelocity=t}get id(){return this._id}get radiusLength(){return this._radiusLength}get momentOfInertia(){return this._momentOfInertia}calcCenter(){return D(this._points[0],this._points[2])}get lengthwiseArea(){const t=this.angle-this._velocity.angle;return this._height*Math.abs(Math.cos(t))+this._width*Math.abs(Math.sin(t))}get movementLength(){const t=this.angle-this._velocity.angle;return this._width*Math.abs(Math.cos(t))+this._height*Math.abs(Math.sin(t))}}V.scalingCoeff=.3125;class K{constructor(t,e){this._model=t,this._sprite=e,this._id=t.entity.id}get model(){return this._model}get sprite(){return this._sprite}get id(){return this._id}spawn(t,e){t.appendChild(this._sprite.sprite),e.insert(this._model.entity)}vanish(t){this._sprite.remove(),t.remove(this._model.entity)}}class X{constructor(){}static rotateToDefaultSpritePoint(t,e,i,s){const n=t.width>>1,r=t.height>>1;$.rotatePointAroundTarget(e,new f(e.x+n*s-r*i,e.y+r*s+n*i),-i,s)}static rotateToActualSpritePoint(t,e,i,s){const n=t.width>>1,r=t.height>>1;$.rotatePointAroundTarget(e,new f(e.x+n,e.y+r),i,s)}static updateSpritePart(t,e,i,s,n){X.rotateToDefaultSpritePoint(t,e,i,s),X.setPosAndAngle(t,e,n)}static setPosAndAngle(t,e,i){t.setPosition(e),t.setAngle(i)}static rotateForTurretPoint(t,e,i,s,n,r){const a=t.width>>1,o=t.height>>1;$.rotatePointAroundTarget(e,new f(e.x+a*s-o*i,e.y+o*s+a*i),n*s-r*i,s*r+i*n)}}class Y extends A{constructor(t,e){super(n[e],r[e],"4"),this._sprite.src=`src/img/blocks/${i[t]}_${s[e]}.png`}updateAfterAction(t,e){t=t.clone(),X.rotateToDefaultSpritePoint(this,t,Math.sin(e),Math.cos(e)),X.setPosAndAngle(this,t,e)}}class j{constructor(){}static calcAcceleration(t,e,i,s,n,r,a){return(t-e*r*.01-i*n*n*a)/r*(s/17)}static calcAngularAcceleration(t,e,i,s,n,r,a,o){return this.calcAcceleration(t,e,i,s,n,r,a)/o}}class q{constructor(){}static calcAcceleration(t,e,i,s,n,r){return(t-e*s*s*r)/n*(i/17)}static calcAngularAcceleration(t,e,i,s,n,r,a){return this.calcAcceleration(t,e,i,s,n,r)/a}}class z{constructor(t,e){this._entity=t,this._health=e}get health(){return this._health}isDead(){return this._health<=0}get entity(){return this._entity}isIdle(){return 0===this._entity.velocity.length}isAngularMotionStopped(){return 0===this._entity.angularVelocity}applyVelocityChange(t,e){const i=this._entity,s=Math.sign(i.velocity.x),n=Math.sign(i.velocity.y);i.velocity.addToCoordinates(t*Math.cos(e),t*Math.sin(e)),s!==Math.sign(i.velocity.x)&&(i.velocity.x=0),n!==Math.sign(i.velocity.y)&&(i.velocity.y=0)}applyAngularVelocityChange(t){const e=this._entity,i=e.angularVelocity;i>0?e.angularVelocity+=i+t<0?-i:t:e.angularVelocity-=i+t>0?-i:t}takeDamage(t){this._health-=t.damage}}class Z extends z{residualMovement(t,e,i){const s=this._entity,n=j.calcAcceleration(0,t,e,i,s.velocity.length,s.mass,s.lengthwiseArea);this.applyVelocityChange(n,s.velocity.angle)}residualAngularMovement(t,e,i){const s=this._entity,n=j.calcAngularAcceleration(0,t,e,i,s.angularVelocity,s.mass,s.lengthwiseArea,s.radiusLength);this.applyAngularVelocityChange(n)}}class Q extends z{residualMovement(t,e){const i=this._entity,s=q.calcAcceleration(0,t,e,i.velocity.length,i.mass,i.lengthwiseArea);this.applyVelocityChange(s,i.velocity.angle)}residualAngularMovement(t,e){const i=this._entity,s=q.calcAngularAcceleration(0,t,e,i.angularVelocity,i.mass,i.lengthwiseArea,i.radiusLength);this.applyAngularVelocityChange(s)}}class J extends Z{constructor(t){super(t,1/0)}}class tt{constructor(){}static createWallsAroundPerimeter(t,e,i){const s=new Array,n=this.calcIndent(e),a=this.calcIndent(i-(r[this.RECT_NUM]<<1));return this.createHorWalls(t,n,a,e,i,s),this.createVertWalls(t,n,a,e,i,s),s}static calcIndent(t){const e=t-(this.INDENT<<1);return(e-n[this.RECT_NUM]*Math.floor(e/n[this.RECT_NUM])>>1)+this.INDENT}static createHorWalls(t,e,i,s,a,o){for(let h=e;h<=s-e-n[this.RECT_NUM];h+=n[this.RECT_NUM])o.push(this.createWall(new f(h,i),0,t,this.RECT_NUM)),o.push(this.createWall(new f(h,a-r[this.RECT_NUM]-i),0,t,this.RECT_NUM))}static createVertWalls(t,e,i,s,a,o){for(let h=i+r[this.RECT_NUM]+(r[this.RECT_NUM]>>1);h<=a-i-n[this.RECT_NUM];h+=n[this.RECT_NUM])o.push(this.createWall(new f(e-(r[this.RECT_NUM]>>1),h),this.RAD_90,t,this.RECT_NUM)),o.push(this.createWall(new f(s-e-n[this.RECT_NUM]+(r[this.RECT_NUM]>>1),h),this.RAD_90,t,this.RECT_NUM))}static createWall(t,e,i,s,o=!1){const h=o?a[i][s]:1/0,l=new J(new V(t,n[s],r[s],e,h,R.wallId)),c=new Y(i,s);return c.setPosition(t),c.setAngle(e),new K(l,c)}}tt.INDENT=10,tt.RAD_90=90*Math.PI/180,tt.RECT_NUM=0;class et extends O{residualAngularMovement(t,e){t.model.isAngularMotionStopped()||this.update(t,t.model.residualAngularMovement,W.angularMovement,e)}residualMovement(t,e){t.model.isIdle()||this.update(t,t.model.residualMovement,W.movement,e)}update(t,e,i,s){const n=t.model.entity;this._entityStorage.remove(n),e.call(t.model,this._resistanceCoeff,this._airResistanceCoeff,s),i(n),this._collisionManager.hasCollision(n),t.sprite.updateAfterAction(n.points[0],n.angle),this._entityStorage.insert(n)}hasAnyResidualMovement(t){return!t.model.isAngularMotionStopped()||!t.model.isIdle()}movement(t,e){this.residualAngularMovement(t,e),this.residualMovement(t,e)}}class it{constructor(t,e,i,s){this._movementManager=t,this._field=e,this._elements=i,this._isResponsibleFor=s}get movementManager(){return this._movementManager}get isResponsibleFor(){return this._isResponsibleFor}get(t){return this._elements.has(t)?this._elements.get(t):null}add(t){for(const e of t)this._elements.has(e.id)||(this._elements.set(e.id,e),e.spawn(this._field.canvas,this._movementManager.entityStorage))}delete(t){this._elements.has(t.id)&&(this._elements.delete(t.id),t.vanish(this._movementManager.entityStorage))}}class st{get value(){return this._value}get prev(){return this._prev}get next(){return this._next}set next(t){this._next=t}set prev(t){this._prev=t}constructor(t){this._prev=null,this._next=null,this._value=t}remove(){null!==this._prev&&(this._prev.next=this._next),null!==this._next&&(this._next.prev=this._prev),this._prev=null,this._next=null}}class nt{constructor(){this._tail=null,this._head=null,this._length=0}get head(){return null!==this._head?this._head.value:null}get tail(){return null!==this._tail?this._tail.value:null}get length(){return this._length}*[Symbol.iterator](){let t=this._head;for(let e=this._length;e>0;e--)yield t.value,t=t.next}applyAndRemove(t,e,i){let s=this._head;for(;null!==s;)if(t(s.value,i),e(s.value))s=s.next;else{const t=s;s=s.next,this.removeNode(t)}}isEmpty(){return 0===this._length}remove(t){let e=this._head;for(;null!==e;){if(e.value===t)return void this.removeNode(e);e=e.next}}removeNode(t){t===this._tail&&(this._tail=t.prev),t===this._head&&(this._head=t.next),this._length--,t.remove()}addToHead(t){const e=new st(t);null===this._head?(this._tail=e,this._head=e):(e.next=this._head,this._head.prev=e,this._head=e),this._length++}addToTail(t){const e=new st(t);null===this._tail?(this._tail=e,this._head=e):(e.prev=this._tail,this._tail.next=e,this._tail=e),this._length++}removeFromTail(){this._tail===this._head?this.clear():(this._tail=this._tail.prev,this._tail.next=null,this._length--)}removeFromHead(){this._tail===this._head?this.clear():(this._head=this._head.next,this._head.prev=null,this._length--)}moveToTail(t){let e=this._tail;for(;null!==e;){if(e.value===t){if(e!==this._tail){const t=e.prev,i=e.next;null!==t&&(t.next=i),null!==i&&(i.prev=t),e.next=null,e.prev=this._tail,this._tail.next=e,this._tail=e}return}e=e.prev}}moveToHead(t){let e=this._head;for(;null!==e;){if(e.value===t){if(e!==this._head){const t=e.prev,i=e.next;null!==t&&(t.next=i),null!==i&&(i.prev=t),e.next=this._head,e.prev=null,this._head.prev=e,this._head=e}return}e=e.next}}clear(){this._tail=this._head=null,this._length=0}}class rt{constructor(){this._vanishingListOfTirePairs=new nt,this.tanksAmount=0}get vanishingListOfTirePairs(){return this.tanksAmount++,this._vanishingListOfTirePairs}removeTireTrackPair(t){t.topTire.remove(),t.bottomTire.remove()}reduceOpacity(){let t=0;for(const e of this._vanishingListOfTirePairs){const i=this._vanishingListOfTirePairs.length*rt.MIN_REDUCING_OPACITY_NUMBER/this.tanksAmount;e.topTire.reduceOpacity(i),e.topTire.setOpacity(),e.bottomTire.reduceOpacity(i),e.bottomTire.setOpacity(),e.topTire.isVanished()&&t++}for(;t>0;t--)this.removeTireTrackPair(this._vanishingListOfTirePairs.tail),this._vanishingListOfTirePairs.removeFromTail()}}rt.MIN_REDUCING_OPACITY_NUMBER=1e-4;class at extends A{get isEnded(){return this._isEnded&&this.remove(),this._isEnded}constructor(t,e,i,s,n){super(i,s,"7"),this._animationStage=0,this._isEnded=!1,this._timer=0,this._num=0===n?0:1,this._sprite.src=`${at.DEFAULT_PATH}${this._num}_${this._animationStage}.png`;const r=new f(t.x+s/2*Math.sin(e),t.y-s/2*Math.cos(e));X.rotateToDefaultSpritePoint(this,r,Math.sin(e),Math.cos(e)),this.setPosAndAngle(r,e)}setPosAndAngle(t,e){this.setPosition(t),this.setAngle(e)}changeStage(t){this._timer+=t,this._timer>=at.UPDATE_TIMER_TIME&&(this._timer-=at.UPDATE_TIMER_TIME,this._animationStage++,this._animationStage<=at.MAX_STAGE?this._sprite.src=`${at.DEFAULT_PATH}${this._num}_${this._animationStage}.png`:this._isEnded=!0)}}at.DEFAULT_PATH="src/img/tanks/Effects/Sprites/Sprite_Fire_Shots_Shot_",at.UPDATE_TIMER_TIME=45,at.MAX_STAGE=3;class ot extends it{constructor(t,e,i,s,n,r){super(t,e,i,R.isTank),this._tireTracksManager=new rt,this._addBulletElement=s,this._animationManager=n,this._KeyHandler=r}handle(t){this._tireTracksManager.reduceOpacity();for(const e of this._elements.values()){const i=e.control;let s=this._KeyHandler.isKeyDown(i.turretClockwiseKey),n=this._KeyHandler.isKeyDown(i.turretCounterClockwiseKey);if((s&&!n||!s&&n)&&(s?this._movementManager.turretClockwiseMovement(e,t):n&&this._movementManager.turretCounterclockwiseMovement(e,t)),s=this._KeyHandler.isKeyDown(i.forwardKey),n=this._KeyHandler.isKeyDown(i.backwardKey),s&&!n||!s&&n?s?this._movementManager.forwardMovement(e,t):n&&(e.sprite.removeAcceleration(),this._movementManager.backwardMovement(e,t)):(e.sprite.removeAcceleration(),this._movementManager.residualMovement(e,t)),s=this._KeyHandler.isKeyDown(i.hullClockwiseKey),n=this._KeyHandler.isKeyDown(i.hullCounterClockwiseKey),s&&!n||!s&&n?s?this._movementManager.hullClockwiseMovement(e,t):n&&this._movementManager.hullCounterclockwiseMovement(e,t):this._movementManager.residualAngularMovement(e,t),s=this._KeyHandler.isKeyDown(i.shootKey),s){const t=e.model.shot();if(t){const i=e.model.bulletNum;this.playShootAnimation(D(t.entity.points[0],t.entity.points[3]),t.entity.angle,5*p[i],5*m[i],i),this._addBulletElement.addBulletModel(t,i)}}}}playShootAnimation(t,e,i,s,n){const r=new at(t,e,i,s,n);this._animationManager.add(r),this._field.canvas.appendChild(r.sprite)}add(t){super.add(t);for(const e of t){const t=e.sprite,i=e.model.entity;t.spawnTireTracks(this._field.canvas,i.points[0],i.angle,this._tireTracksManager.vanishingListOfTirePairs),t.spawnDriftSmoke(this._field.canvas,this._animationManager);const s=t.tankSpriteParts.hullSprite;t.spawnTankAcceleration(this._field.canvas,s.accelerationEffectIndentX,s.height)}}}class ht extends it{constructor(t,e,i){super(t,e,i,R.isWall),this._wallToProcess=new nt}addToProcess(){const t=this._movementManager.collisionManager.wallsForProcessing;if(t.hasForProcessing()){for(const e of t.iterable)this._wallToProcess.addToTail(this._elements.get(e));t.clear()}}handle(t){this.addToProcess(),this._wallToProcess.isEmpty()||this._wallToProcess.applyAndRemove(this._movementManager.movement.bind(this._movementManager),this._movementManager.hasAnyResidualMovement.bind(this._movementManager),t)}}class lt{constructor(){this._animationList=new nt}add(t){this._animationList.addToTail(t)}handle(t){this._animationList.isEmpty()||this._animationList.applyAndRemove(((t,e)=>t.changeStage(e)),(t=>!t.isEnded),t)}}class ct{constructor(t,e){this._model=t,this._sprite=e,this._id=t.entity.id}get id(){return this._id}get model(){return this._model}get sprite(){return this._sprite}spawn(t,e){t.appendChild(this._sprite.sprite),e.insert(this._model.entity)}vanish(t){this._sprite.remove(),t.remove(this._model.entity)}}class _t extends A{get num(){return this._num}constructor(t){super(p[t],m[t],"4"),this._sprite.src=`src/img/tanks/Bullets/Bullet_${t}.png`,this._num=t}updateAfterAction(t,e){t=t.clone(),X.rotateToDefaultSpritePoint(this,t,Math.sin(e),Math.cos(e)),X.setPosAndAngle(this,t,e)}}class dt extends A{get isEnded(){return this._isEnded&&this.remove(),this._isEnded}constructor(t,e){super(dt.WIDTH,dt.HEIGHT,"7"),this._animationStage=0,this._isEnded=!1,this._timer=0,this._sprite.src=`${dt.DEFAULT_PATH}${this._animationStage}.png`;const i=new f(t.x-dt.WIDTH/2,t.y-dt.HEIGHT/2);this.setPosAndAngle(i,e)}setPosAndAngle(t,e){this.setPosition(t),this.setAngle(e)}changeStage(t){this._timer+=t,this._timer>=dt.UPDATE_TIMER_TIME&&(this._timer-=dt.UPDATE_TIMER_TIME,this._animationStage++,this._animationStage<=dt.MAX_STAGE?this._sprite.src=`${dt.DEFAULT_PATH}${this._animationStage}.png`:this._isEnded=!0)}}dt.DEFAULT_PATH="src/img/tanks/Effects/Sprites/Sprite_Effects_Explosion_",dt.UPDATE_TIMER_TIME=90,dt.MAX_STAGE=8,dt.WIDTH=120,dt.HEIGHT=120;class ut{static playDeathAnimation(t,e,i){if(R.isWall(t.id),R.isTank(t.id)){const s=new dt(t.calcCenter(),M(-Math.PI,Math.PI));e.add(s),i.appendChild(s.sprite)}R.isBullet(t.id)}}class gt extends A{get isEnded(){return this._isEnded&&this.remove(),this._isEnded}constructor(t,e,i,s,n){super(i,s,"7"),this._animationStage=0,this._isEnded=!1,this._timer=0,this._num=0===n?0:1,this._sprite.src=`${gt.DEFAULT_PATH}${this._num}_${this._animationStage}.png`;const r=new f(t.x+s/2*Math.sin(e),t.y-s/2*Math.cos(e));X.rotateToDefaultSpritePoint(this,r,Math.sin(e),Math.cos(e)),this.setPosAndAngle(r,e)}setPosAndAngle(t,e){this.setPosition(t),this.setAngle(e)}changeStage(t){this._timer+=t,this._timer>=gt.UPDATE_TIMER_TIME&&(this._timer-=gt.UPDATE_TIMER_TIME,this._animationStage++,this._animationStage<=gt.MAX_STAGE?this._sprite.src=`${gt.DEFAULT_PATH}${this._num}_${this._animationStage}.png`:this._isEnded=!0)}}gt.DEFAULT_PATH="src/img/tanks/Effects/Sprites/Sprite_Fire_Shots_Impact_",gt.UPDATE_TIMER_TIME=70,gt.MAX_STAGE=3;class pt extends it{constructor(t,e,i,s,n){super(t,e,i,R.isBullet),this._handlingManagers=s,this._animationManager=n}handle(t){if(0!==this._elements.size){const e=new Array;for(const i of this._elements.values())this._movementManager.movement(i,t),this._movementManager.hasResidualMovement(i)||e.push(i);for(const t of e)this.delete(t)}this._movementManager.bulletCollisionDates.hasForProcessing()&&this.handleBulletCollisions()}handleBulletCollisions(){for(const t of this._movementManager.bulletCollisionDates.iterable){for(const e of t.collisionPacks){const i=t.bulletElement.sprite.num;this.playImpactAnimation(e.collisionPoint,t.bulletElement.model.entity.angle+Math.PI,5*p[i],5*m[i],i);const s=e.id,n=this.getElementHandling(s),r=n.get(s);r&&(r.model.takeDamage(t.bulletElement.model),r.model.isDead()&&(ut.playDeathAnimation(r.model.entity,this._animationManager,this._field.canvas),n.delete(r)))}this.delete(t.bulletElement)}this._movementManager.bulletCollisionDates.clear()}getElementHandling(t){for(const e of this._handlingManagers)if(e.isResponsibleFor(t))return e}playImpactAnimation(t,e,i,s,n){const r=new gt(t,e,i,s,n);this._animationManager.add(r),this._field.canvas.appendChild(r.sprite)}}class mt{constructor(t,e,i){this._elements=t,this._field=e,this._bulletMovementManager=i}addBulletModel(t,e){if(!this._elements.has(t.entity.id)){const i=new ct(t,new _t(e));this._bulletMovementManager.checkForSpawn(i)&&(this._elements.set(i.id,i),i.spawn(this._field.canvas,this._bulletMovementManager.entityStorage))}}}class Tt extends O{constructor(){super(...arguments),this._bulletCollisionDates=new F}get bulletCollisionDates(){return this._bulletCollisionDates}hasResidualMovement(t){return!t.model.isIdle()}movement(t,e){t.model.isIdle()||this.update(t,e)}update(t,e){const i=t.model.entity;this._entityStorage.remove(i),t.model.residualMovement(this._airResistanceCoeff,e);const s=E.createFromAngleAndLength(i.velocity.angle,i.movementLength);let n=!1;const r=Math.floor(E.calcCoDirectionalScaleFactor(i.velocity,s));for(let e=r;e>0;e--){W.moveEntity(i,s);const e=this._collisionManager.hasCollision(i);if(e){this._bulletCollisionDates.push({bulletElement:t,collisionPacks:e}),n=!0;break}}if(!n){s.scale(-r),s.addVector(i.velocity),W.moveEntity(i,s);const e=this._collisionManager.hasCollision(i);e&&this._bulletCollisionDates.push({bulletElement:t,collisionPacks:e})}t.sprite.updateAfterAction(i.points[0],i.angle),this._entityStorage.insert(i)}checkForSpawn(t){const e=t.model.entity,i=this._collisionManager.hasCollision(e);return i?(this._bulletCollisionDates.push({bulletElement:t,collisionPacks:i}),!1):(t.sprite.updateAfterAction(e.points[0],e.angle),!0)}}class At{constructor(){this._executioners=new Array}add(...t){this._executioners.push(...t)}renderAll(t){for(const e of this._executioners)e.handle(t)}}class Mt{constructor(){this._isGameLoopActive=!1,this._lastFrameTime=performance.now(),this._render=new At}get render(){return this._render}start(){this._isGameLoopActive||(this._isGameLoopActive=!0,requestAnimationFrame((()=>this.gameLoop())))}stop(){this._isGameLoopActive=!1}gameLoop(){if(!this._isGameLoopActive)return;const t=performance.now();this._render.renderAll(t-this._lastFrameTime),this._lastFrameTime=t,requestAnimationFrame((()=>this.gameLoop()))}}class yt{get startingSpeed(){return 35}get damage(){return 15}get armorPenetration(){return 5}get mass(){return.008}get health(){return 1}get num(){return 0}}class ft extends Q{constructor(t,e,i){super(e,t.health),this._damage=t.damage*i.damageCoeff,this._armorPenetration=t.armorPenetration*i.armorPenetrationCoeff}get damage(){return this._damage}get armorPenetration(){return this._armorPenetration}}class Pt{constructor(){}static create(t,e,i,s){const n=Pt.createBullet(t),r=Pt.calcDefaultEntityPoint(t,e,i),a=new V(r,p[t],m[t],i,n.mass,R.bulletId),o=n.startingSpeed*s.startingSpeedCoeff;return a.velocity.x=o*Math.cos(i),a.velocity.y=o*Math.sin(i),new ft(n,a,s)}static calcDefaultEntityPoint(t,e,i){const s=new f(e.x+m[t]/2*Math.sin(i),e.y-m[t]/2*Math.cos(i)),n=Math.sin(i),r=Math.cos(i),a=new f(s.x+p[t]/2*r-m[t]/2*n,s.y+m[t]/2*r+p[t]/2*n);return $.rotatePointAroundTarget(s,a,-n,r),s}static createBullet(t){if(0===t)return new yt;throw new Error(`Bullet model ${t} was not found`)}}class St{get angleSpeed(){return 6e-4}get mass(){return.35}get bulletCapacity(){return 10}get num(){return 0}}class vt{get armorPenetrationCoeff(){return 1}get damageCoeff(){return 1}get startingSpeedCoeff(){return 1}get reloadSpeed(){return 1e3}get mass(){return.15}get num(){return 0}}class Et extends Z{constructor(t,e){super(e,t.hull.health),this._lastTimeShot=Date.now(),this._bulletQuantity=50,this._bulletNum=0,this._isBraking=!1,this._isDrift=!1,this._tankParts=t,this._turretAngle=e.angle,this._armorStrength=t.hull.armorStrength}takeDamage(t){this._armorStrength-=t.armorPenetration,this._armorStrength<0&&(this._armorStrength=0),this._health-=t.damage-this._tankParts.hull.armor*this._armorStrength}get turretAngle(){return this._turretAngle}get armor(){return this._tankParts.hull.armor}get armorStrength(){return this._armorStrength}get bulletNum(){return this._bulletNum}shot(){const t=Date.now();if(0===this._bulletQuantity||t-this._lastTimeShot<this._tankParts.weapon.reloadSpeed)return null;const e=Pt.create(this._bulletNum,this.calcBulletExit(),this._turretAngle,this._tankParts.weapon);return this._lastTimeShot=t,this._bulletQuantity--,e}calcBulletExit(){const t=this._entity.calcCenter(),e=this._tankParts,i=(n=e.turret,_[n.num]/2+(s=e.weapon,u[s.num]));var s,n;const r=t.x+i*Math.cos(this._turretAngle),a=t.y+i*Math.sin(this._turretAngle);return new f(r,a)}incBulletQuantity(t){this._bulletQuantity=Math.min(this._bulletQuantity+t,this._tankParts.turret.bulletCapacity)}takeNewBullet(t){this._bulletNum=t}turretClockwiseMovement(t){this._turretAngle+=this._tankParts.turret.angleSpeed*t}turretCounterclockwiseMovement(t){this._turretAngle-=this._tankParts.turret.angleSpeed*t}incTurretAngle(t){this._turretAngle+=t}hullClockwiseMovement(t,e,i){const s=this._entity,n=this._tankParts.track.angularData;s.angularVelocity<n.finishSpeed&&(s.angularVelocity+=j.calcAngularAcceleration(n.force,t,e,i,s.angularVelocity,s.mass,s.lengthwiseArea,s.radiusLength)),this.updateAngularVelocity(),this.incTurretAngle(s.angularVelocity)}hullCounterclockwiseMovement(t,e,i){const s=this._entity,n=this._tankParts.track.angularData;-s.angularVelocity<n.finishSpeed&&(s.angularVelocity-=j.calcAngularAcceleration(n.force,t,e,i,s.angularVelocity,s.mass,s.lengthwiseArea,s.radiusLength)),this.updateAngularVelocity(),this.incTurretAngle(s.angularVelocity)}updateAngularVelocity(){if(this.isIdle())return;const t=this._entity,e=t.velocity;(this._isDrift||this._isBraking)&&this.incAngularVelocity(t,e),this._isBraking||this.decAngularVelocity(t,e)}incAngularVelocity(t,e){const i=this.calcCoeff(),s=1+e.length/(this._tankParts.track.forwardData.finishSpeed*i),n=1+t.mass/(10*i);t.angularVelocity*=n*s}calcCoeff(){let t=100;return this._isDrift&&(t-=25),this._isBraking&&(t-=5),t}decAngularVelocity(t,e){const i=1-e.length/(20*this._tankParts.track.forwardData.finishSpeed),s=1-t.mass/200;t.angularVelocity*=s*i,e.scale(s)}forwardMovement(t,e,i){this.movement(this._tankParts.track.forwardData,this._entity.angle,t,e,i)}backwardMovement(t,e,i){this.movement(this._tankParts.track.backwardData,this._entity.angle+Math.PI,t,e,i)}movement(t,e,i,s,n){const r=this._entity,a=r.velocity.length,o=0===a?e:r.velocity.angle,h=I(e,o);this.setBrakingStatus(h),Et.isStraightMovement(h)?(this._isDrift=!1,this.handleStraightMovement(t,i,s,n,a,o)):(this._isDrift=!Et.isReverseMovement(h),this._isDrift&&(this.determineDribbleSpeed(h),this.applyTurn(this.calcShortestTurn(h))),this.handleDriftMovement(t,i,s,n,a,h,o))}setBrakingStatus(t){this._isBraking=C(t)}calcShortestTurn(t){return this._isBraking&&(t=Et.adjustTurnForBraking(t)),t=Et.adjustTurnForRecovery(t)}static isStraightMovement(e){return e<=t||2*Math.PI-e<=t}static isReverseMovement(e){return Math.abs(e-Math.PI)<=t}handleStraightMovement(t,e,i,s,n,r){if(n<t.finishSpeed){const a=j.calcAcceleration(t.force,e,i,s,n,this._entity.mass,this._entity.lengthwiseArea);this._entity.velocity.addToCoordinates(a*Math.cos(r),a*Math.sin(r))}}handleDriftMovement(t,e,i,s,n,r,a){if(this._isBraking||n<t.finishSpeed){const o=j.calcAcceleration(t.force*Math.cos(r),e,i,s,n,this._entity.mass,this._entity.lengthwiseArea);this.applyVelocityChange(o,a)}}static adjustTurnForBraking(t){return k(t-Math.PI/2)}static adjustTurnForRecovery(t){const e=t-2*Math.PI;return t>Math.abs(e)?e:t}applyTurn(t){t*=Et.VELOCITY_RECOVERY_COEFF*this._entity.mass,$.rotatePoint(this._entity.velocity,Math.sin(t),Math.cos(t))}determineDribbleSpeed(t){const e=(Math.abs(Math.cos(t))-(i=0))/(1-i)*(1-(s=.95))+s;var i,s;this._entity.velocity.scale(e)}residualMovement(t,e,i){const s=I(this._entity.angle,this._entity.velocity.angle);(this._isDrift||!Et.isStraightMovement(s)&&!Et.isReverseMovement(s))&&(this._isDrift=!0,this.determineDribbleSpeed(s)),this._isBraking=!1,super.residualMovement(t,e,i)}residualAngularMovement(t,e,i){this.updateAngularVelocity(),super.residualAngularMovement(t,e,i),this.incTurretAngle(this._entity.angularVelocity)}}Et.VELOCITY_RECOVERY_COEFF=.017;class wt extends A{constructor(t,e,i){super(t,e,"3"),this._opacity=1,this._sprite.src=`src/img/tanks/Effects/Tire Tracks/Tire_Track_Chain_${i}.png`}isVanished(){return this._opacity<=0}reduceOpacity(t){this._opacity-=t}setOpacity(){this._sprite.style.opacity=`${this._opacity}`}}class kt extends A{constructor(t,e,i){super(t,e,"3"),this._opacity=1,this._sprite.src=`src/img/tanks/Effects/Tire Tracks/Tire_Track_${i}.png`}isVanished(){return this._opacity<=0}reduceOpacity(t){this._opacity-=t}setOpacity(){this._sprite.style.opacity=`${this._opacity}`}}var Ct,It,Dt;!function(t){t[t.dirForward=1]="dirForward",t[t.dirRotate=0]="dirRotate",t[t.dirBackward=1]="dirBackward"}(Ct||(Ct={}));class Lt{get chainWidth(){return this._chainWidth}constructor(t,e,i){this._listOfTirePairs=new nt,this._vanishingListOfTirePairs=i,this._canvas=t,this._trackWidth=e.width,this._trackHeight=e.height,this._trackType=e.num,this._chainWidth=this.calcWidthOfChain(),this._chainHeight=e.height,this._chainType=e.num%2}calcWidthOfChain(){return this._trackWidth/Lt.AMOUNT_OF_CHAINS}static calcPositionOfFirstChain(t,e,i,s,n){return new f(t.x+e*n-i*n,t.y+e*s-i*s)}moveToNextChain(t,e,i){t.x=t.x-this._chainWidth*i,t.y=t.y-this._chainWidth*e}vanishFullTrack(){for(const t of this._listOfTirePairs)this._vanishingListOfTirePairs.addToHead(this._listOfTirePairs.head),this._listOfTirePairs.removeFromHead()}static setAndPosTireTrackPair(t,e,i,s,n,r){const a=e.clone(),o=i.clone();X.rotateToDefaultSpritePoint(t.topTire,a,n,r),X.rotateToDefaultSpritePoint(t.bottomTire,o,n,r),X.setPosAndAngle(t.topTire,a,s),X.setPosAndAngle(t.bottomTire,o,s)}createTireTrackChainPair(t,e,i,s,n){const r={topTire:new wt(this._chainWidth,this._chainHeight,this._chainType),bottomTire:new wt(this._chainWidth,this._chainHeight,this._chainType)};return this._canvas.appendChild(r.topTire.sprite),this._canvas.appendChild(r.bottomTire.sprite),Lt.setAndPosTireTrackPair(r,t,e,i,s,n),r}createTireTrackPair(t,e,i,s,n){this.vanishFullTrack();const r={topTire:new kt(this._trackWidth,this._trackHeight,this._trackType),bottomTire:new kt(this._trackWidth,this._trackHeight,this._trackType)};this._canvas.appendChild(r.topTire.sprite),this._canvas.appendChild(r.bottomTire.sprite),Lt.setAndPosTireTrackPair(r,t,e,i,s,n),this._listOfTirePairs.addToHead(r)}calcFirstTopBottomChainPoints(t,e,i,s){const n=Lt.calcPositionOfFirstChain(e,this._trackWidth,this.chainWidth,i,s),r=t.hullSprite.calcPosition(e,i,s);let a=t.bottomTrackSprite.calcPosition(r,i,s);return a=Lt.calcPositionOfFirstChain(a,this._trackWidth,this.chainWidth,i,s),{topFirstChainPoint:n,bottomFirstChainPoint:a}}calcLastTopBottomChainPoints(t,e,i,s){const n=e.clone(),r=t.hullSprite.calcPosition(e,i,s);return{topLastChainPoint:n,bottomLastChainPoint:t.bottomTrackSprite.calcPosition(r,i,s)}}spawnFullTireTrack(t,e,i,s,n){this._topFirstChainPoint=t.clone(),this._bottomFirstChainPoint=e.clone();for(let r=0;r<Lt.AMOUNT_OF_CHAINS;r++){const a=this.createTireTrackChainPair(t,e,i,s,n);this._listOfTirePairs.addToHead(a),r===Lt.AMOUNT_OF_CHAINS-1&&(this._topLastChainPoint=t.clone(),this._bottomLastChainPoint=e.clone()),this.moveToNextChain(t,s,n),this.moveToNextChain(e,s,n)}}updateAllChainPoints(t,e,i,s){this._topFirstChainPoint=t,this._bottomFirstChainPoint=e,this._topLastChainPoint=i,this._bottomLastChainPoint=s}checkForUpdate(t,e,i,s){const n=w(t,this._topFirstChainPoint),r=w(e,this._bottomFirstChainPoint),a=w(i,this._topLastChainPoint),o=w(s,this._bottomLastChainPoint);return n>=this._chainWidth?{isUpdate:!0,prevPoint:this._topFirstChainPoint,currPoint:t}:r>=this._chainWidth?{isUpdate:!0,prevPoint:this._bottomFirstChainPoint,currPoint:e}:a>=this._chainWidth?{isUpdate:!0,prevPoint:this._topLastChainPoint,currPoint:i}:o>=this._chainWidth?{isUpdate:!0,prevPoint:this._bottomLastChainPoint,currPoint:s}:{isUpdate:!1}}getMovementAngle(t,e){const i=e.x-t.x,s=e.y-t.y;return Math.atan2(s,i)}detectMovementDirection(t,e,i){const s=this.getMovementAngle(t,e);let n=k(i-Lt.DIRECTION_ANGLE_DIFFERENCE,-Math.PI,Math.PI),r=k(i+Lt.DIRECTION_ANGLE_DIFFERENCE,-Math.PI,Math.PI),a=!1;if(n>=Math.PI/2&&n<=Math.PI&&r>=-Math.PI&&r<=-Math.PI/2&&(a=!0,s>=0?r=k(r,0,2*Math.PI):n=k(n,-2*Math.PI,0)),s>=n&&s<=r||s<=n&&s>=r)return Ct.dirForward;{a&&(n<0?(n=k(n,0,2*Math.PI),r=k(r,0,2*Math.PI)):(n=k(n,-2*Math.PI,0),r=k(r,-2*Math.PI,0)));const t=k(s-Math.PI,-Math.PI,Math.PI);return t>=n&&t<=r||t<=n&&t>=r?Ct.dirBackward:Ct.dirRotate}}forwardUpdate(t,e,i,s,n){const r=this.createTireTrackChainPair(t,e,i,s,n);this._listOfTirePairs.addToTail(r),this._listOfTirePairs.length>Lt.AMOUNT_OF_CHAINS&&(this._vanishingListOfTirePairs.addToHead(this._listOfTirePairs.head),this._listOfTirePairs.removeFromHead())}backwardUpdate(t,e,i,s,n){const r=this.createTireTrackChainPair(t,e,i,s,n);this._listOfTirePairs.addToHead(r),this._listOfTirePairs.length>Lt.AMOUNT_OF_CHAINS&&(this._vanishingListOfTirePairs.addToHead(this._listOfTirePairs.tail),this._listOfTirePairs.removeFromTail())}}Lt.DIRECTION_ANGLE_DIFFERENCE=.6,Lt.AMOUNT_OF_CHAINS=10;class xt extends A{constructor(){super(xt.SIZE,xt.SIZE,"5"),this._sprite.src=xt.SRC[0]}setSrc(t){this._sprite.src=xt.SRC[t]}}It=xt,xt.DEFAULT_SRC="src/img/tanks/Effects/Movement/Movement_",xt.SRC=[`${It.DEFAULT_SRC}0.png`,`${It.DEFAULT_SRC}1.png`,`${It.DEFAULT_SRC}2.png`,`${It.DEFAULT_SRC}3.png`,`${It.DEFAULT_SRC}4.png`,`${It.DEFAULT_SRC}5.png`,`${It.DEFAULT_SRC}6.png`,`${It.DEFAULT_SRC}7.png`,`${It.DEFAULT_SRC}8.png`,`${It.DEFAULT_SRC}9.png`,`${It.DEFAULT_SRC}10.png`,`${It.DEFAULT_SRC}11.png`,`${It.DEFAULT_SRC}12.png`,`${It.DEFAULT_SRC}13.png`,`${It.DEFAULT_SRC}14.png`,`${It.DEFAULT_SRC}15.png`,`${It.DEFAULT_SRC}16.png`,`${It.DEFAULT_SRC}17.png`,`${It.DEFAULT_SRC}18.png`,`${It.DEFAULT_SRC}19.png`],xt.SIZE=85;class Rt{constructor(t,e,i){this._topSpriteAccelerationEffect=new xt,this._bottomSpriteAccelerationEffect=new xt,this._counter=0,this._state=0,this._canvas=t,this._indentX=e,this._tankHeight=i}changeState(){this._state===Rt.LAST_STATE&&(this._state=Rt.WORKING_STATE),this._counter++,this._counter===Rt.THRESHOLD&&(this._counter=0,this._state++,this._topSpriteAccelerationEffect.setSrc(this._state),this._bottomSpriteAccelerationEffect.setSrc(this._state))}setPosition(t,e,i,s){0===this._state&&0===this._counter&&(this._canvas.appendChild(this._topSpriteAccelerationEffect.sprite),this._canvas.appendChild(this._bottomSpriteAccelerationEffect.sprite)),this.changeState();let n=this.calcPosition(t,e,i,28*this._tankHeight/42);X.updateSpritePart(this._topSpriteAccelerationEffect,n,e,i,s),n=this.calcPosition(t,e,i,37*this._tankHeight/42),X.updateSpritePart(this._bottomSpriteAccelerationEffect,n,e,i,s)}removeAcceleration(){if(0===this._state&&0===this._counter)return;this._state=0,this._counter=0;const t=this._topSpriteAccelerationEffect,e=this._bottomSpriteAccelerationEffect;t.setSrc(this._state),e.setSrc(this._state),t.remove(),e.remove()}calcPosition(t,e,i,s){return new f(t.x+this._indentX*i-s*e-xt.SIZE/2*i+xt.SIZE/1.517*e,t.y+s*i+this._indentX*e-xt.SIZE/1.517*i-xt.SIZE/2*e)}}Rt.THRESHOLD=7,Rt.LAST_STATE=19,Rt.WORKING_STATE=10;class Ft{constructor(t,e){this._state=0,this._counter=0,this._isForwardMovement=!0,this._isResidualMovement=!1,this._minStateChangeThreshold=[Math.max(Math.round(Ft.MIN_THRESHOLD_COEFF/e.finishSpeed),Ft.MIN_STATE_CHANGE_THRESHOLD_MINIMUM),Math.max(Math.round(Ft.MIN_THRESHOLD_COEFF/t.finishSpeed),Ft.MIN_STATE_CHANGE_THRESHOLD_MINIMUM)],this._maxStateChangeThreshold=[Math.min(Math.round(Ft.MAX_THRESHOLD_COEFF/e.force),Ft.MAX_STATE_CHANGE_THRESHOLD_MAXIMUM),Math.min(Math.round(Ft.MAX_THRESHOLD_COEFF/t.force),Ft.MAX_STATE_CHANGE_THRESHOLD_MAXIMUM)],this._currentThreshold=this._maxStateChangeThreshold[this._isForwardMovement?1:0]}set isForwardMovement(t){this._isResidualMovement=!1,this._isForwardMovement!==t&&(this._isForwardMovement=t,this._currentThreshold=this._maxStateChangeThreshold[this._isForwardMovement?1:0])}setResidualMovement(){this._isResidualMovement=!0}changeState(t,e){this._counter++,this._counter>=this._currentThreshold&&(this._counter=0,this._state^=1,t.setSrc(this._state),e.setSrc(this._state),this._isResidualMovement?this._currentThreshold<this._maxStateChangeThreshold[this._isForwardMovement?1:0]&&this._currentThreshold++:this._currentThreshold>this._minStateChangeThreshold[this._isForwardMovement?1:0]&&this._currentThreshold--)}stopped(){this._currentThreshold=this._maxStateChangeThreshold[this._isForwardMovement?1:0]}}Ft.MIN_THRESHOLD_COEFF=17.5,Ft.MAX_THRESHOLD_COEFF=.5,Ft.MIN_STATE_CHANGE_THRESHOLD_MINIMUM=2,Ft.MAX_STATE_CHANGE_THRESHOLD_MAXIMUM=30;class Nt extends A{get isEnded(){return this._isEnded&&this.remove(),this._isEnded}constructor(t,e){super(t,e,"6"),this._animationStage=0,this._isEnded=!1,this._timer=0,this._sprite.src=`${Nt.DEFAULT_PATH}${this._animationStage}.png`}changeStage(t){this._timer+=t,this._timer>=Nt.UPDATE_TIMER_TIME&&(this._timer-=Nt.UPDATE_TIMER_TIME,this._animationStage++,this._animationStage<=Nt.MAX_STAGE?this._sprite.src=`${Nt.DEFAULT_PATH}${this._animationStage}.png`:this._isEnded=!0)}remove(){this._sprite.remove()}}Nt.DEFAULT_PATH="src/img/tanks/Effects/Sprites/Sprite_Effects_Smoke_",Nt.UPDATE_TIMER_TIME=60,Nt.MAX_STAGE=9;class bt extends Nt{setPosAndAngle(t,e){this.setPosition(t),this.setAngleWithScaling(e,-1,1)}calcPosition(t,e,i){return new f(t.x+this.width*e+this.height*i,t.y-this.width*i+this.height*e)}}class Ut extends Nt{constructor(t,e,i){super(t,e),this._trackHeight=i}setPosAndAngle(t,e){this.setPosition(t),this.setAngle(e)}calcPosition(t,e,i){return new f(t.x-this._trackHeight*e+this.height*i,t.y+this._trackHeight*i+this.height*e)}}!function(t){t[t.rotLeft=-1]="rotLeft",t[t.rotStraight=0]="rotStraight",t[t.rotRight=1]="rotRight",t[t.rotNoRotate=2]="rotNoRotate"}(Dt||(Dt={}));class Ht{constructor(t,e,i,s){this._delayedAngle=0,this._canvas=t,this._animationManager=e,this._width=i/4,this._height=i/5,this._trackHeight=s}detectRotateDirection(t){(t>=Math.PI/2&&t<=Math.PI&&this._delayedAngle>=-Math.PI&&this._delayedAngle<=-Math.PI/2||this._delayedAngle>=Math.PI/2&&this._delayedAngle<=Math.PI&&t>=-Math.PI&&t<=-Math.PI/2)&&(t=this._delayedAngle>=0?k(t,0,2*Math.PI):k(t,-2*Math.PI,0));const e=t-this._delayedAngle;return e<0&&Math.abs(e)>Ht.UPDATE_SMOKE_DELTA_ANGLE?(this._delayedAngle=k(t,-Math.PI,Math.PI),Dt.rotLeft):e>0&&Math.abs(e)>Ht.UPDATE_SMOKE_DELTA_ANGLE?(this._delayedAngle=k(t,-Math.PI,Math.PI),Dt.rotRight):Dt.rotNoRotate}setPosAndAngle(t,e){const i=Math.sin(e),s=Math.cos(e);X.rotateToDefaultSpritePoint(this._currAnimation,t,i,s),this._currAnimation.setPosAndAngle(t,e)}addAnimation(){this._animationManager.add(this._currAnimation),this._canvas.appendChild(this._currAnimation.sprite)}spawnTopSmoke(t,e,i,s){this._currAnimation=new bt(this._width,this._height);let n=this._currAnimation.calcPosition(t,i,s);const r=e+1.5708;this.setPosAndAngle(n,r),this.addAnimation()}spawnBottomSmoke(t,e,i,s){this._currAnimation=new Ut(this._width,this._height,this._trackHeight);let n=this._currAnimation.calcPosition(t,i,s);const r=e+1.5708;this.setPosAndAngle(n,r),this.addAnimation()}}Ht.UPDATE_SMOKE_DELTA_ANGLE=.113446;class Ot{constructor(t,e,i){this._tankSpriteParts=t,this._tankTrackEffect=new Ft(e,i)}get tankSpriteParts(){return this._tankSpriteParts}get tankTrackEffect(){return this._tankTrackEffect}get tankTireTrack(){return this._tankTireTrack}spawnTankAcceleration(t,e,i){this._tankAcceleration=new Rt(t,e,i)}removeAcceleration(){this._tankAcceleration.removeAcceleration()}spawnTireTracks(t,e,i,s){this._tankTireTrack=new Lt(t,this._tankSpriteParts.topTrackSprite,s);const n=Math.sin(i),r=Math.cos(i),{topFirstChainPoint:a,bottomFirstChainPoint:o}=this._tankTireTrack.calcFirstTopBottomChainPoints(this._tankSpriteParts,e,n,r);this._tankTireTrack.spawnFullTireTrack(a,o,i,n,r)}spawnDriftSmoke(t,e){this._tankDrift=new Ht(t,e,this._tankSpriteParts.topTrackSprite.width,this._tankSpriteParts.topTrackSprite.height)}updateTireTrack(t,e,i,s){const{topFirstChainPoint:n,bottomFirstChainPoint:r}=this._tankTireTrack.calcFirstTopBottomChainPoints(this._tankSpriteParts,t,i,s),{topLastChainPoint:a,bottomLastChainPoint:o}=this._tankTireTrack.calcLastTopBottomChainPoints(this._tankSpriteParts,t,i,s),{isUpdate:h,prevPoint:l,currPoint:c}=this._tankTireTrack.checkForUpdate(n,r,a,o);if(h){this._tankTireTrack.updateAllChainPoints(n,r,a,o);switch(this._tankTireTrack.detectMovementDirection(l,c,e)){case Ct.dirForward:this._tankTireTrack.forwardUpdate(n,r,e,i,s);break;case Ct.dirRotate:this._tankTireTrack.createTireTrackPair(a,o,e,i,s);break;case Ct.dirBackward:this._tankTireTrack.backwardUpdate(a,o,e,i,s)}}}updateDriftSmoke(t,e,i,s){let n=this._tankSpriteParts.hullSprite.calcPosition(t,i,s);n=this._tankSpriteParts.bottomTrackSprite.calcPosition(n,i,s);switch(this._tankDrift.detectRotateDirection(e)){case Dt.rotLeft:this._tankDrift.spawnTopSmoke(t,e,i,s);break;case Dt.rotRight:this._tankDrift.spawnBottomSmoke(n,e,i,s)}}updateForwardAction(t,e,i){this._tankTrackEffect.isForwardMovement=!0;const s=Math.sin(e),n=Math.cos(e),r=this._tankSpriteParts.hullSprite.calcPosition(t,s,n);this.updateSprite(t,e,i,s,n,r),this._tankAcceleration.setPosition(r,s,n,e),this.updateTireTrack(t,e,s,n),this.updateDriftSmoke(t,e,s,n)}updateBackwardAction(t,e,i){this._tankTrackEffect.isForwardMovement=!1;const s=Math.sin(e),n=Math.cos(e);this.defaultUpdate(t,e,i,s,n),this.updateTireTrack(t,e,s,n),this.updateDriftSmoke(t,e,s,n)}preUpdateAction(t,e,i){const s=Math.sin(e),n=Math.cos(e);this.updateTireTrack(t,e,s,n),this.updateDriftSmoke(t,e,s,n),this.defaultUpdate(t,e,i,s,n)}updateAfterAction(t,e,i){const s=Math.sin(e),n=Math.cos(e);this.defaultUpdate(t,e,i,s,n)}defaultUpdate(t,e,i,s,n){const r=this._tankSpriteParts.hullSprite.calcPosition(t,s,n);this.updateSprite(t,e,i,s,n,r)}rotateTurretUpdate(t,e,i,s){const n=Math.sin(e),r=Math.cos(e),a=this._tankSpriteParts.turretSprite,o=a.calcPosition(t,i,s),h=o.clone();X.rotateForTurretPoint(a,h,i,s,n,r),X.rotateToDefaultSpritePoint(a,o,i,s),X.setPosAndAngle(a,o,e);let l=this._tankSpriteParts.weaponSprite.calcPosition(h,n,r);X.updateSpritePart(this._tankSpriteParts.weaponSprite,l,n,r,e)}updateSprite(t,e,i,s,n,r){const a=this._tankSpriteParts.topTrackSprite,o=this._tankSpriteParts.bottomTrackSprite,h=this._tankSpriteParts.hullSprite;let l=a.calcPosition(t);X.updateSpritePart(a,l,s,n,e),l=h.calcPosition(t,s,n),X.updateSpritePart(h,l,s,n,e),l=o.calcPosition(r,s,n),X.updateSpritePart(o,l,s,n,e),this.rotateTurretUpdate(r,i,s,n),this._tankTrackEffect.changeState(a,o)}}class $t{get health(){return 100}get armor(){return 100}get mass(){return 1}get armorStrength(){return 1}get num(){return 0}}class Wt{constructor(){this._angularData={finishSpeed:.0175,force:.03},this._forwardData={finishSpeed:3,force:.03},this._backwardData={finishSpeed:2,force:.025}}get angularData(){return this._angularData}get forwardData(){return this._forwardData}get backwardData(){return this._backwardData}get num(){return 0}}class Gt{constructor(t,e,i,s){this._hull=t,this._track=e,this._turret=i,this._weapon=s}get hull(){return this._hull}get track(){return this._track}get turret(){return this._turret}get weapon(){return this._weapon}}class Bt{constructor(){}static create(t,e,i,s){const n=Bt.createTurret(i),r=Bt.createWeapon(s),a=Bt.createHull(t),o=Bt.createTrack(e);return new Gt(a,o,n,r)}static createHull(t){if(0===t)return new $t;throw new Error(`Hull model ${t} was not found`)}static createTrack(t){if(0===t)return new Wt;throw new Error(`Track model ${t} was not found`)}static createTurret(t){if(0===t)return new St;throw new Error(`Turret model ${t} was not found`)}static createWeapon(t){if(0===t)return new vt;throw new Error(`Weapon model ${t} was not found`)}}class Vt extends A{get accelerationEffectIndentX(){return this._accelerationEffectIndentX}constructor(t,e){super(h[e],l[e],"5"),this._accelerationEffectIndentX=T[e],this._sprite.src=`src/img/tanks/Hulls/Hull_${e}/Hull_${t}.png`}calcPosition(t,e,i){return new f(t.x-5*e,t.y+5*i)}}class Kt extends A{static calcHeight(t){return Kt.PROPORTION_WIDTH_HEIGHT*t}get num(){return this._num}constructor(t,e,i){super(e+5,i,"4"),this._num=t,this._srcState0=`src/img/tanks/Tracks/Track_${t}_A.png`,this._srcState1=`src/img/tanks/Tracks/Track_${t}_B.png`,this._sprite.src=this._srcState0}setSrc(t){this._sprite.src=0===t?this._srcState0:this._srcState1}}Kt.PROPORTION_WIDTH_HEIGHT=42/246;class Xt extends Kt{constructor(t,e){super(t,e,Kt.calcHeight(e))}calcPosition(t){return t.clone()}}class Yt extends Kt{constructor(t,e,i){const s=Kt.calcHeight(e);super(t,e,s),this._deltaHeight=i+5-s}calcPosition(t,e,i){return new f(t.x-this._deltaHeight*e,t.y+this._deltaHeight*i)}}class jt extends A{constructor(t,e,i,s){super(_[e],d[e],"6"),this._sprite.src=`src/img/tanks/Turrets/Turret_${e}/Turret_${t}.png`,this._indentX=i,this._indentY=s}calcPosition(t,e,i){return new f(t.x+this._indentX*i-this._indentY*e,t.y+this._indentY*i+this._indentX*e)}}class qt extends A{constructor(t,e,i){super(u[t],g[t],"6"),this._sprite.src=`src/img/tanks/Weapons/Weapon_${t}.png`,this._indentX=e,this._indentY=i}calcPosition(t,e,i){return new f(t.x+this._indentX*i-this._indentY*e,t.y+this._indentY*i+this._indentX*e)}}class zt{constructor(t,e,i,s,n){this._hullSprite=t,this._bottomTrackSprite=e,this._topTrackSprite=i,this._turretSprite=s,this._weaponSprite=n}get hullSprite(){return this._hullSprite}get bottomTrackSprite(){return this._bottomTrackSprite}get topTrackSprite(){return this._topTrackSprite}get turretSprite(){return this._turretSprite}get weaponSprite(){return this._weaponSprite}}class Zt{constructor(){}static create(t,e,i,s,n){return new zt(new Vt(t,e),new Yt(i,h[e],l[e]),new Xt(i,h[e]),new jt(t,s,c[e],(l[e]>>1)-(d[s]>>1)),new qt(n,9*_[s]/10,(d[s]>>1)-(g[n]>>1)))}}class Qt{get model(){return this._model}get sprite(){return this._sprite}get id(){return this._id}get control(){return this._control}set control(t){this._control=t}constructor(t,e,i,s,n,r,a,o){this._control=o;const c=Bt.create(s,n,r,a),_=new V(t,h[s]+5,l[s]+10,e,c.turret.mass+c.hull.mass+c.weapon.mass,R.tankId);this._model=new Et(c,_),this._id=_.id;const d=c.track;this._sprite=new Ot(Zt.create(i,s,n,r,a),d.forwardData,d.backwardData)}spawn(t,e){const i=this._sprite.tankSpriteParts;t.appendChild(i.topTrackSprite.sprite),t.appendChild(i.bottomTrackSprite.sprite),t.appendChild(i.hullSprite.sprite),t.appendChild(i.weaponSprite.sprite),t.appendChild(i.turretSprite.sprite);const s=this._model.entity;e.insert(s),this._sprite.updateAfterAction(s.points[0],s.angle,this._model.turretAngle)}vanish(t){const e=this._sprite.tankSpriteParts;this._sprite.tankTireTrack.vanishFullTrack(),e.topTrackSprite.remove(),e.bottomTrackSprite.remove(),e.hullSprite.remove(),e.weaponSprite.remove(),e.turretSprite.remove(),t.remove(this._model.entity)}}window.onmousedown=t=>console.log(`x = ${t.clientX}px, y = ${t.clientY}px`);const Jt=document.querySelector("#canvas"),te=new class{constructor(t,e,i){this._backgroundSprites=new Array,this._gameLoop=new Mt,this._handlingManagers=new Array,this._animationManager=new lt,this._keyHandler=new B,this._field=new b(t,e,i);const s=new U(0,0,e,i),n=new N(s),r=new Map,a=new Map,o=new Map,h=new G(s,n),l=new et(s,n),c=new Tt(s,n),_=new mt(o,this._field,c);this._tankHandlingManagers=new ot(h,this._field,r,_,this._animationManager,this._keyHandler),this._wallHandlingManagers=new ht(l,this._field,a),this._bulletHandlingManager=new pt(c,this._field,o,this._handlingManagers,this._animationManager),this._handlingManagers.push(this._tankHandlingManagers,this._wallHandlingManagers,this._bulletHandlingManager),this._gameLoop.render.add(...this._handlingManagers,this._animationManager)}get gameLoop(){return this._gameLoop}createField(t,e){this.setCoefficients(t),this.createBackgroundSprites(t),this.createWalls(e)}setCoefficients(t){for(const e of this._handlingManagers)e.movementManager.resistanceCoeff=o[t],e.movementManager.airResistanceCoeff=15e-7}createBackgroundSprites(t){v.fullFillBackground(t,this._field.width,this._field.height,this._backgroundSprites);for(const t of this._backgroundSprites)this._field.canvas.appendChild(t.sprite)}createWalls(t){const e=this._field.width,i=this._field.height;this._wallHandlingManagers.add(tt.createWallsAroundPerimeter(t,e,i));const s=new Array;s.push(tt.createWall(new f(e>>1,i>>1),.79,2,0,!0)),s.push(tt.createWall(new f(e>>2,i>>2),1,2,1,!0)),this._wallHandlingManagers.add(s)}addTankElements(...t){this._tankHandlingManagers.add(t)}}(Jt,window.screen.width,window.screen.height);te.createField(1,2);const ee={forwardKey:87,backwardKey:83,hullClockwiseKey:68,hullCounterClockwiseKey:65,turretClockwiseKey:86,turretCounterClockwiseKey:67,shootKey:66},ie=new Qt(new f(300,300),0,0,0,0,0,0,ee),se={forwardKey:38,backwardKey:40,hullClockwiseKey:39,hullCounterClockwiseKey:37,turretClockwiseKey:190,turretCounterClockwiseKey:188,shootKey:191},ne=new Qt(new f(450,450),0,1,0,0,0,0,se);te.addTankElements(ie,ne),te.gameLoop.start()})();